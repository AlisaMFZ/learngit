{"version":3,"sources":["_formatLimit.js"],"names":[],"mappings":"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","file":"_formatLimit-compiled.js","sourcesContent":["'use strict';\nmodule.exports = function generate__formatLimit(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  out += 'var ' + ($valid) + ' = undefined;';\n  if (it.opts.format === false) {\n    out += ' ' + ($valid) + ' = true; ';\n    return out;\n  }\n  var $schemaFormat = it.schema.format,\n    $isDataFormat = it.opts.v5 && $schemaFormat.$data,\n    $closingBraces = '';\n  if ($isDataFormat) {\n    var $schemaValueFormat = it.util.getData($schemaFormat.$data, $dataLvl, it.dataPathArr),\n      $format = 'format' + $lvl,\n      $compare = 'compare' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValueFormat) + '] , ' + ($compare) + ' = ' + ($format) + ' && ' + ($format) + '.compare;';\n  } else {\n    var $format = it.formats[$schemaFormat];\n    if (!($format && $format.compare)) {\n      out += '  ' + ($valid) + ' = true; ';\n      return out;\n    }\n    var $compare = 'formats' + it.util.getProperty($schemaFormat) + '.compare';\n  }\n  var $isMax = $keyword == 'formatMaximum',\n    $exclusiveKeyword = 'formatExclusive' + ($isMax ? 'Maximum' : 'Minimum'),\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $result = 'result' + $lvl;\n  var $isData = it.opts.v5 && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' if (typeof ' + ($schemaValueExcl) + ' != \\'boolean\\' && ' + ($schemaValueExcl) + ' !== undefined) { ' + ($valid) + ' = false; ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_formatExclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      $closingBraces += '}';\n      out += ' else { ';\n    }\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; var ' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true; if (' + ($valid) + ' === undefined) { ' + ($valid) + ' = ' + ($exclusive) + ' ? ' + ($result) + ' ' + ($op) + ' 0 : ' + ($result) + ' ' + ($op) + '= 0; } if (!' + ($valid) + ') var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\';';\n  } else {\n    var $exclusive = $schemaExcl === true,\n      $opStr = $op;\n    if (!$exclusive) $opStr += '=';\n    var $opExpr = '\\'' + $opStr + '\\'';\n    if ($isData) {\n      out += ' if (' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'string\\') ' + ($valid) + ' = false; else { ';\n      $closingBraces += '}';\n    }\n    if ($isDataFormat) {\n      out += ' if (!' + ($compare) + ') ' + ($valid) + ' = true; else { ';\n      $closingBraces += '}';\n    }\n    out += ' var ' + ($result) + ' = ' + ($compare) + '(' + ($data) + ',  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' ); if (' + ($result) + ' === undefined) ' + ($valid) + ' = false; if (' + ($valid) + ' === undefined) ' + ($valid) + ' = ' + ($result) + ' ' + ($op);\n    if (!$exclusive) {\n      out += '=';\n    }\n    out += ' 0;';\n  }\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_formatLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += ' , exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '}';\n  return out;\n}\n"]}