{"version":3,"sources":["_limit.js"],"names":[],"mappings":"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","file":"_limit-compiled.js","sourcesContent":["'use strict';\nmodule.exports = function generate__limit(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.v5 && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.v5 && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<';\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var exclusive' + ($lvl) + '; if (typeof ' + ($schemaValueExcl) + ' != \\'boolean\\' && typeof ' + ($schemaValueExcl) + ' != \\'undefined\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ((exclusive' + ($lvl) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ') || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = exclusive' + ($lvl) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\';';\n  } else {\n    var $exclusive = $schemaExcl === true,\n      $opStr = $op;\n    if (!$exclusive) $opStr += '=';\n    var $opExpr = '\\'' + $opStr + '\\'';\n    out += ' if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($data) + ' ' + ($notOp);\n    if ($exclusive) {\n      out += '=';\n    }\n    out += ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') {';\n  }\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schema) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n"]}