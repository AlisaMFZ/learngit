{"version":3,"sources":["allOf.js"],"names":[],"mappings":"AAAA;;AACA,OAAO,OAAP,GAAiB,SAAS,cAAT,CAAwB,EAAxB,EAA4B,QAA5B,EAAsC;AACrD,MAAI,MAAM,GAAV;AACA,MAAI,UAAU,GAAG,MAAH,CAAU,QAAV,CAAd;AACA,MAAI,cAAc,GAAG,UAAH,GAAgB,GAAG,IAAH,CAAQ,WAAR,CAAoB,QAApB,CAAlC;AACA,MAAI,iBAAiB,GAAG,aAAH,GAAmB,GAAnB,GAAyB,QAA9C;AACA,MAAI,gBAAgB,CAAC,GAAG,IAAH,CAAQ,SAA7B;AACA,MAAI,MAAM,GAAG,IAAH,CAAQ,IAAR,CAAa,EAAb,CAAV;AACA,MAAI,iBAAiB,EAArB;AACA,MAAI,KAAJ;AACA,MAAI,aAAa,UAAU,IAAI,KAA/B;AACA,MAAI,iBAAiB,IAAI,MAAzB;AAAA,MACE,mBAAmB,IADrB;AAEA,MAAI,OAAO,OAAX;AACA,MAAI,IAAJ,EAAU;AACR,QAAI,IAAJ;AAAA,QAAU,KAAK,CAAC,CAAhB;AAAA,QACE,KAAK,KAAK,MAAL,GAAc,CADrB;AAEA,WAAO,KAAK,EAAZ,EAAgB;AACd,aAAO,KAAK,MAAM,CAAX,CAAP;AACA,UAAI,GAAG,IAAH,CAAQ,cAAR,CAAuB,IAAvB,EAA6B,GAAG,KAAH,CAAS,GAAtC,CAAJ,EAAgD;AAC9C,2BAAmB,KAAnB;AACA,YAAI,MAAJ,GAAa,IAAb;AACA,YAAI,UAAJ,GAAiB,cAAc,GAAd,GAAoB,EAApB,GAAyB,GAA1C;AACA,YAAI,aAAJ,GAAoB,iBAAiB,GAAjB,GAAuB,EAA3C;AACA,eAAO,OAAQ,GAAG,QAAH,CAAY,GAAZ,CAAR,GAA4B,GAAnC;AACA,YAAI,MAAJ,GAAa,cAAb;AACA,YAAI,aAAJ,EAAmB;AACjB,iBAAO,UAAW,UAAX,GAAyB,MAAhC;AACA,4BAAkB,GAAlB;AACD;AACF;AACF;AACF;AACD,MAAI,aAAJ,EAAmB;AACjB,QAAI,gBAAJ,EAAsB;AACpB,aAAO,eAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAO,eAAe,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAP,GAAsC,GAA7C;AACD;AACF;AACD,QAAM,GAAG,IAAH,CAAQ,WAAR,CAAoB,GAApB,CAAN;AACA,SAAO,GAAP;AACD,CAzCD","file":"allOf-compiled.js","sourcesContent":["'use strict';\nmodule.exports = function generate_allOf(it, $keyword) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]}