{"version":3,"sources":["anyOf.js"],"names":[],"mappings":"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","file":"anyOf-compiled.js","sourcesContent":["'use strict';\nmodule.exports = function generate_anyOf(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return it.util.schemaHasRules($sch, it.RULES.all);\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n"]}