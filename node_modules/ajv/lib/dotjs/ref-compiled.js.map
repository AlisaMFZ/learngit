{"version":3,"sources":["ref.js"],"names":[],"mappings":"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","file":"ref-compiled.js","sourcesContent":["'use strict';\nmodule.exports = function generate_ref(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = 'can\\'t resolve reference ' + $schema + ' from id ' + it.baseId;\n      if (it.opts.missingRefs == 'fail') {\n        console.log($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || '$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        console.log($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        var $error = new Error($message);\n        $error.missingRef = it.resolve.url(it.baseId, $schema);\n        $error.missingSchema = it.resolve.normalizeId(it.resolve.fullPath($error.missingRef));\n        throw $error;\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true;\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      out += ' try { ';\n      if ($breakOnError) {\n        out += 'var ' + ($valid) + ' =';\n      }\n      out += ' ' + (it.yieldAwait) + ' ' + (__callValidate) + '; } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n"]}