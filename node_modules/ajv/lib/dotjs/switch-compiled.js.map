{"version":3,"sources":["switch.js"],"names":[],"mappings":"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","file":"switch-compiled.js","sourcesContent":["'use strict';\nmodule.exports = function generate_switch(it, $keyword) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $ifPassed = 'ifPassed' + it.level,\n    $currentBaseId = $it.baseId,\n    $shouldContinue;\n  out += 'var ' + ($ifPassed) + ';';\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $caseIndex = -1,\n      l1 = arr1.length - 1;\n    while ($caseIndex < l1) {\n      $sch = arr1[$caseIndex += 1];\n      if ($caseIndex && !$shouldContinue) {\n        out += ' if (!' + ($ifPassed) + ') { ';\n        $closingBraces += '}';\n      }\n      if ($sch.if && it.util.schemaHasRules($sch.if, it.RULES.all)) {\n        out += ' var ' + ($errs) + ' = errors;   ';\n        var $wasComposite = it.compositeRule;\n        it.compositeRule = $it.compositeRule = true;\n        $it.createErrors = false;\n        $it.schema = $sch.if;\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        $it.createErrors = true;\n        it.compositeRule = $it.compositeRule = $wasComposite;\n        out += ' ' + ($ifPassed) + ' = ' + ($nextValid) + '; if (' + ($ifPassed) + ') {  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ($errorKeyword || 'switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n        out += '  } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } } ';\n      } else {\n        out += ' ' + ($ifPassed) + ' = true;  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ($errorKeyword || 'switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n      }\n      $shouldContinue = $sch.continue\n    }\n  }\n  out += '' + ($closingBraces) + 'var ' + ($valid) + ' = ' + ($nextValid) + '; ';\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]}