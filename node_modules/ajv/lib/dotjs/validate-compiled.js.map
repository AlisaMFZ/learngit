{"version":3,"sources":["validate.js"],"names":[],"mappings":"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","file":"validate-compiled.js","sourcesContent":["'use strict';\nmodule.exports = function generate_validate(it, $keyword) {\n  var out = '';\n  var $async = it.schema.$async === true;\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.root.schema.id);\n    it.baseId = it.baseId || it.rootId;\n    if ($async) {\n      it.async = true;\n      var $es7 = it.opts.async == 'es7';\n      it.yieldAwait = $es7 ? 'await' : 'yield';\n    }\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var validate = ';\n    if ($async) {\n      if ($es7) {\n        out += ' (async function ';\n      } else {\n        if (it.opts.async == 'co*') {\n          out += 'co.wrap';\n        }\n        out += '(function* ';\n      }\n    } else {\n      out += ' (function ';\n    }\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data;';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if (it.schema.id) it.baseId = it.resolve.url(it.baseId, it.schema.id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '',\n    $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeSchema && it.opts.coerceTypes) {\n    var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    if ($coerceToTypes) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {  ';\n      var $dataType = 'dataType' + $lvl,\n        $coerced = 'coerced' + $lvl;\n      out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n      if (it.opts.coerceTypes == 'array') {\n        out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n      }\n      out += ' var ' + ($coerced) + ' = undefined; ';\n      var $bracesCoercion = '';\n      var arr1 = $coerceToTypes;\n      if (arr1) {\n        var $type, $i = -1,\n          l1 = arr1.length - 1;\n        while ($i < l1) {\n          $type = arr1[$i += 1];\n          if ($i) {\n            out += ' if (' + ($coerced) + ' === undefined) { ';\n            $bracesCoercion += '}';\n          }\n          if (it.opts.coerceTypes == 'array' && $type != 'array') {\n            out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n          }\n          if ($type == 'string') {\n            out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n          } else if ($type == 'number' || $type == 'integer') {\n            out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n            if ($type == 'integer') {\n              out += ' && !(' + ($data) + ' % 1)';\n            }\n            out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n          } else if ($type == 'boolean') {\n            out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n          } else if ($type == 'null') {\n            out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n          } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n            out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n          }\n        }\n      }\n      out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n        if ($typeIsArray) {\n          out += '' + ($typeSchema.join(\",\"));\n        } else {\n          out += '' + ($typeSchema);\n        }\n        out += '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should be ';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } else {  ';\n      var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n        $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n      out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n      if (!$dataLvl) {\n        out += 'if (' + ($parentData) + ' !== undefined)';\n      }\n      out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } } ';\n    }\n  }\n  var $refKeywords;\n  if (it.schema.$ref && ($refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'))) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs == 'ignore') {\n      $refKeywords = false;\n      console.log('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    } else if (it.opts.extendRefs !== true) {\n      console.log('$ref: all keywords used in schema at path \"' + it.errSchemaPath + '\". It will change in the next major version, see issue #260. Use option { extendRefs: true } to keep current behaviour');\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                out += ' ' + ($rule.code(it, $rule.keyword)) + ' ';\n                if ($breakOnError) {\n                  $closingBraces1 += '}';\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type) {\n              var $typeChecked = true;\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($typeSchema && !$typeChecked && !(it.opts.coerceTypes && $coerceToTypes)) {\n    var $schemaPath = it.schemaPath + '.type',\n      $errSchemaPath = it.errSchemaPath + '/type',\n      $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n    out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n      if ($typeIsArray) {\n        out += '' + ($typeSchema.join(\",\"));\n      } else {\n        out += '' + ($typeSchema);\n      }\n      out += '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should be ';\n        if ($typeIsArray) {\n          out += '' + ($typeSchema.join(\",\"));\n        } else {\n          out += '' + ($typeSchema);\n        }\n        out += '\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return true;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }); return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top && $breakOnError) {\n    out = it.util.cleanUpVarErrors(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    for (var i = 0; i < $rulesGroup.rules.length; i++)\n      if ($shouldUseRule($rulesGroup.rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.keyword == 'properties' && (it.schema.additionalProperties === false || typeof it.schema.additionalProperties == 'object' || (it.schema.patternProperties && Object.keys(it.schema.patternProperties).length) || (it.opts.v5 && it.schema.patternGroups && Object.keys(it.schema.patternGroups).length)));\n  }\n  return out;\n}\n"]}