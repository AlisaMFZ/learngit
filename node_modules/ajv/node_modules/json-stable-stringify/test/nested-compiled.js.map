{"version":3,"sources":["nested.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,YAAY,QAAQ,KAAR,CAAhB;;AAEA,KAAK,QAAL,EAAe,UAAU,CAAV,EAAa;AACxB,MAAE,IAAF,CAAO,CAAP;AACA,QAAI,MAAM,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAC,EAAC,GAAE,CAAH,EAAK,GAAE,CAAP,EAAS,GAAE,CAAX,EAAD,EAAe,CAAf,CAAX,EAA8B,GAAG,CAAjC,EAAV;AACA,MAAE,KAAF,CAAQ,UAAU,GAAV,CAAR,EAAwB,2CAAxB;AACH,CAJD;;AAMA,KAAK,kBAAL,EAAyB,UAAU,CAAV,EAAa;AAClC,MAAE,IAAF,CAAO,CAAP;AACA,QAAI,MAAM,EAAE,GAAG,CAAL,EAAV;AACA,QAAI,MAAM,EAAE,GAAG,CAAL,EAAQ,KAAK,GAAb,EAAV;AACA,QAAI,GAAJ,GAAU,GAAV;AACA,QAAI;AACH,kBAAU,GAAV;AACA,KAFD,CAEE,OAAO,EAAP,EAAW;AACZ,UAAE,KAAF,CAAQ,GAAG,QAAH,EAAR,EAAuB,kDAAvB;AACA;AACJ,CAVD;;AAYA,KAAK,+BAAL,EAAsC,UAAU,CAAV,EAAa;AAC/C,MAAE,IAAF,CAAO,CAAP;AACA,QAAI,MAAM,EAAE,GAAG,CAAL,EAAV;AACA,QAAI,MAAM,EAAE,GAAG,CAAL,EAAQ,KAAK,GAAb,EAAV;AACA,QAAI,GAAJ,GAAU,GAAV;AACA,MAAE,KAAF,CAAQ,UAAU,GAAV,EAAe,EAAC,QAAO,IAAR,EAAf,CAAR,EAAuC,yCAAvC;AACH,CAND;;AAQA,KAAK,2BAAL,EAAkC,UAAS,CAAT,EAAY;AAC1C,MAAE,IAAF,CAAO,CAAP;AACA,QAAI,MAAM,EAAE,GAAG,CAAL,EAAV;AACA,QAAI,MAAM,EAAE,GAAG,GAAL,EAAU,GAAG,GAAb,EAAV;AACA,MAAE,KAAF,CAAQ,UAAU,GAAV,CAAR,EAAwB,2BAAxB;AACH,CALD","file":"nested-compiled.js","sourcesContent":["var test = require('tape');\nvar stringify = require('../');\n\ntest('nested', function (t) {\n    t.plan(1);\n    var obj = { c: 8, b: [{z:6,y:5,x:4},7], a: 3 };\n    t.equal(stringify(obj), '{\"a\":3,\"b\":[{\"x\":4,\"y\":5,\"z\":6},7],\"c\":8}');\n});\n\ntest('cyclic (default)', function (t) {\n    t.plan(1);\n    var one = { a: 1 };\n    var two = { a: 2, one: one };\n    one.two = two;\n    try {\n    \tstringify(one);\n    } catch (ex) {\n    \tt.equal(ex.toString(), 'TypeError: Converting circular structure to JSON');\n    }\n});\n\ntest('cyclic (specifically allowed)', function (t) {\n    t.plan(1);\n    var one = { a: 1 };\n    var two = { a: 2, one: one };\n    one.two = two;\n    t.equal(stringify(one, {cycles:true}), '{\"a\":1,\"two\":{\"a\":2,\"one\":\"__cycle__\"}}');\n});\n\ntest('repeated non-cyclic value', function(t) {\n    t.plan(1);\n    var one = { x: 1 };\n    var two = { a: one, b: one };\n    t.equal(stringify(two), '{\"a\":{\"x\":1},\"b\":{\"x\":1}}');\n});\n"]}