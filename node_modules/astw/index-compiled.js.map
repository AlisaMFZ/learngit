{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,QAAQ,QAAQ,OAAR,EAAiB,KAA7B;;AAEA,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,IAAf,EAAqB;AAClC,QAAI,CAAC,IAAL,EAAW,OAAO,EAAP;AACX,QAAI,MAAM,GAAV;AACA,QAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AACzB,YAAI;AACA,kBAAM,MAAM,GAAN,EAAW;AACb,6BAAa,KAAK,WAAL,IAAoB,CADpB;AAEb,4CAA4B;AAFf,aAAX,CAAN;AAIH,SALD,CAMA,OAAO,GAAP,EAAY;AAAE,kBAAM,MAAM,MAAM,GAAN,GAAY,GAAlB,CAAN;AAA8B;AAC/C;AACD,WAAO,UAAU,EAAV,EAAc;AACjB,aAAK,GAAL,EAAU,SAAV,EAAqB,EAArB;AACH,KAFD;AAGH,CAfD;;AAiBA,SAAS,IAAT,CAAe,IAAf,EAAqB,MAArB,EAA6B,EAA7B,EAAiC;AAC7B,QAAI,OAAO,WAAW,IAAX,CAAX;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AAClC,YAAI,MAAM,KAAK,CAAL,CAAV;AACA,YAAI,QAAQ,QAAZ,EAAsB;;AAEtB,YAAI,QAAQ,KAAK,GAAL,CAAZ;AACA,YAAI,QAAQ,KAAR,CAAJ,EAAoB;AAChB,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACnC,oBAAI,IAAI,MAAM,CAAN,CAAR;AACA,oBAAI,KAAK,OAAO,EAAE,IAAT,KAAkB,QAA3B,EAAqC;AACjC,sBAAE,MAAF,GAAW,IAAX;AACA,yBAAK,CAAL,EAAQ,IAAR,EAAc,EAAd;AACH;AACJ;AACJ,SARD,MASK,IAAI,SAAS,OAAO,MAAM,IAAb,KAAsB,QAAnC,EAA6C;AAC9C,kBAAM,MAAN,GAAe,IAAf;AACA,iBAAK,KAAL,EAAY,IAAZ,EAAkB,EAAlB;AACH;AACJ;AACD,OAAG,IAAH;AACH;;AAED,IAAI,UAAU,MAAM,OAAN,IAAiB,UAAU,EAAV,EAAc;AACzC,WAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,EAA/B,MAAuC,gBAA9C;AACH,CAFD;;AAIA,IAAI,aAAa,kBAAe,UAAU,GAAV,EAAe;AAC3C,QAAI,OAAO,EAAX;AACA,SAAK,IAAI,GAAT,IAAgB,GAAhB;AAAqB,aAAK,IAAL,CAAU,GAAV;AAArB,KACA,OAAO,IAAP;AACH,CAJD","file":"index-compiled.js","sourcesContent":["var parse = require('acorn').parse;\n\nmodule.exports = function (src, opts) {\n    if (!opts) opts = {}\n    var ast = src;\n    if (typeof src === 'string') {\n        try {\n            ast = parse(src, {\n                ecmaVersion: opts.ecmaVersion || 8,\n                allowReturnOutsideFunction: true\n            })\n        }\n        catch (err) { ast = parse('(' + src + ')') }\n    }\n    return function (cb) {\n        walk(ast, undefined, cb);\n    };\n};\n\nfunction walk (node, parent, cb) {\n    var keys = objectKeys(node);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (key === 'parent') continue;\n        \n        var child = node[key];\n        if (isArray(child)) {\n            for (var j = 0; j < child.length; j++) {\n                var c = child[j];\n                if (c && typeof c.type === 'string') {\n                    c.parent = node;\n                    walk(c, node, cb);\n                }\n            }\n        }\n        else if (child && typeof child.type === 'string') {\n            child.parent = node;\n            walk(child, node, cb);\n        }\n    }\n    cb(node);\n}\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n"]}