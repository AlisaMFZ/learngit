{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;AACA;;;;AAIA,IAAI,QAAQ,MAAM,SAAN,CAAgB,KAA5B;;AAEA;;;;AAIA,OAAO,OAAP,GAAiB,GAAG,SAAH,IAAgB,GAAG,EAAH,GAAQ,EAAzC;;AAEA;;;;;;;;;;;;AAYA,GAAG,IAAH,GAAU,UAAU,EAAV,EAAc;AACtB,gBAAc,qBAAd,GAAsC,EAAtC;AACA,SAAO,aAAP;AACA,WAAS,aAAT,GAAyB;AACvB,WAAO,GAAG,IAAH,CAAQ,IAAR,EAAc,GAAG,KAAH,CAAS,IAAT,EAAe,SAAf,CAAd,CAAP;AACD;AACF,CAND;;AAQA;;;;;;;;;AASA,SAAS,EAAT,CAAY,GAAZ,EAAiB;AACf,MAAI,MAAM,IAAV;AACA,MAAI,OAAO,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,CAAX;;AAEA;AACA;AACA;AACA,SAAO,sBAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAC3C,QAAI,OAAO,GAAP,KAAe,UAAnB,EAA+B,MAAM,IAAI,KAAJ,CAAU,GAAV,EAAe,IAAf,CAAN;AAC/B,QAAI,CAAC,GAAD,IAAQ,OAAO,IAAI,IAAX,KAAoB,UAAhC,EAA4C,OAAO,QAAQ,GAAR,CAAP;;AAE5C;;AAEA;;;;;;AAMA,aAAS,WAAT,CAAqB,GAArB,EAA0B;AACxB,UAAI,GAAJ;AACA,UAAI;AACF,cAAM,IAAI,IAAJ,CAAS,GAAT,CAAN;AACD,OAFD,CAEE,OAAO,CAAP,EAAU;AACV,eAAO,OAAO,CAAP,CAAP;AACD;AACD,WAAK,GAAL;AACD;;AAED;;;;;;AAMA,aAAS,UAAT,CAAoB,GAApB,EAAyB;AACvB,UAAI,GAAJ;AACA,UAAI;AACF,cAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD,OAFD,CAEE,OAAO,CAAP,EAAU;AACV,eAAO,OAAO,CAAP,CAAP;AACD;AACD,WAAK,GAAL;AACD;;AAED;;;;;;;;;AASA,aAAS,IAAT,CAAc,GAAd,EAAmB;AACjB,UAAI,IAAI,IAAR,EAAc,OAAO,QAAQ,IAAI,KAAZ,CAAP;AACd,UAAI,QAAQ,UAAU,IAAV,CAAe,GAAf,EAAoB,IAAI,KAAxB,CAAZ;AACA,UAAI,SAAS,UAAU,KAAV,CAAb,EAA+B,OAAO,MAAM,IAAN,CAAW,WAAX,EAAwB,UAAxB,CAAP;AAC/B,aAAO,WAAW,IAAI,SAAJ,CAAc,0EAC5B,wCAD4B,GACe,OAAO,IAAI,KAAX,CADf,GACmC,GADjD,CAAX,CAAP;AAED;AACF,GAtDM,CAAP;AAuDD;;AAED;;;;;;;;AAQA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB,MAAI,CAAC,GAAL,EAAU,OAAO,GAAP;AACV,MAAI,UAAU,GAAV,CAAJ,EAAoB,OAAO,GAAP;AACpB,MAAI,oBAAoB,GAApB,KAA4B,YAAY,GAAZ,CAAhC,EAAkD,OAAO,GAAG,IAAH,CAAQ,IAAR,EAAc,GAAd,CAAP;AAClD,MAAI,cAAc,OAAO,GAAzB,EAA8B,OAAO,eAAe,IAAf,CAAoB,IAApB,EAA0B,GAA1B,CAAP;AAC9B,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB,OAAO,eAAe,IAAf,CAAoB,IAApB,EAA0B,GAA1B,CAAP;AACxB,MAAI,SAAS,GAAT,CAAJ,EAAmB,OAAO,gBAAgB,IAAhB,CAAqB,IAArB,EAA2B,GAA3B,CAAP;AACnB,SAAO,GAAP;AACD;;AAED;;;;;;;;AAQA,SAAS,cAAT,CAAwB,EAAxB,EAA4B;AAC1B,MAAI,MAAM,IAAV;AACA,SAAO,sBAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC5C,OAAG,IAAH,CAAQ,GAAR,EAAa,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC/B,UAAI,GAAJ,EAAS,OAAO,OAAO,GAAP,CAAP;AACT,UAAI,UAAU,MAAV,GAAmB,CAAvB,EAA0B,MAAM,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,CAAN;AAC1B,cAAQ,GAAR;AACD,KAJD;AAKD,GANM,CAAP;AAOD;;AAED;;;;;;;;;AASA,SAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,SAAO,kBAAQ,GAAR,CAAY,IAAI,GAAJ,CAAQ,SAAR,EAAmB,IAAnB,CAAZ,CAAP;AACD;;AAED;;;;;;;;;AASA,SAAS,eAAT,CAAyB,GAAzB,EAA6B;AAC3B,MAAI,UAAU,IAAI,IAAI,WAAR,EAAd;AACA,MAAI,OAAO,oBAAY,GAAZ,CAAX;AACA,MAAI,WAAW,EAAf;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AACpC,QAAI,MAAM,KAAK,CAAL,CAAV;AACA,QAAI,UAAU,UAAU,IAAV,CAAe,IAAf,EAAqB,IAAI,GAAJ,CAArB,CAAd;AACA,QAAI,WAAW,UAAU,OAAV,CAAf,EAAmC,MAAM,OAAN,EAAe,GAAf,EAAnC,KACK,QAAQ,GAAR,IAAe,IAAI,GAAJ,CAAf;AACN;AACD,SAAO,kBAAQ,GAAR,CAAY,QAAZ,EAAsB,IAAtB,CAA2B,YAAY;AAC5C,WAAO,OAAP;AACD,GAFM,CAAP;;AAIA,WAAS,KAAT,CAAe,OAAf,EAAwB,GAAxB,EAA6B;AAC3B;AACA,YAAQ,GAAR,IAAe,SAAf;AACA,aAAS,IAAT,CAAc,QAAQ,IAAR,CAAa,UAAU,GAAV,EAAe;AACxC,cAAQ,GAAR,IAAe,GAAf;AACD,KAFa,CAAd;AAGD;AACF;;AAED;;;;;;;;AAQA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB,SAAO,cAAc,OAAO,IAAI,IAAhC;AACD;;AAED;;;;;;;;AAQA,SAAS,WAAT,CAAqB,GAArB,EAA0B;AACxB,SAAO,cAAc,OAAO,IAAI,IAAzB,IAAiC,cAAc,OAAO,IAAI,KAAjE;AACD;;AAED;;;;;;;AAOA,SAAS,mBAAT,CAA6B,GAA7B,EAAkC;AAChC,MAAI,cAAc,IAAI,WAAtB;AACA,MAAI,CAAC,WAAL,EAAkB,OAAO,KAAP;AAClB,MAAI,wBAAwB,YAAY,IAApC,IAA4C,wBAAwB,YAAY,WAApF,EAAiG,OAAO,IAAP;AACjG,SAAO,YAAY,YAAY,SAAxB,CAAP;AACD;;AAED;;;;;;;;AAQA,SAAS,QAAT,CAAkB,GAAlB,EAAuB;AACrB,SAAO,UAAU,IAAI,WAArB;AACD","file":"index-compiled.js","sourcesContent":["\n/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nmodule.exports = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1)\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n"]}