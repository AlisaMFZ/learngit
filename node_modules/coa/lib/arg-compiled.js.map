{"version":3,"sources":["arg.js"],"names":[],"mappings":";;AAAA;AACA,IAAI,GAAJ,EAAS,GAAT,EAAc,KAAd,EAAqB,GAArB;;AAEA,QAAQ,QAAQ,SAAR,EAAmB,KAA3B;;AAEA,MAAM,QAAQ,OAAR,EAAiB,GAAvB;;AAEA,MAAM,QAAQ,OAAR,EAAiB,GAAvB;;AAEA;;;;;;;;AASA,QAAQ,GAAR,GAAc,MAAO,YAAW;AAC9B;;;;;AAKA,WAAS,GAAT,CAAa,IAAb,EAAmB;AACjB,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,CAAqB,IAArB;AACD;;AAED;;;;;;AAOA,MAAI,SAAJ,CAAc,IAAd,GAAqB,IAAI,SAAJ,CAAc,IAAnC;;AAEA;;;;;;AAOA,MAAI,SAAJ,CAAc,KAAd,GAAsB,IAAI,SAAJ,CAAc,KAApC;;AAEA;;;;;;AAOA,MAAI,SAAJ,CAAc,GAAd,GAAoB,IAAI,SAAJ,CAAc,GAAlC;;AAEA;;;;;AAMA,MAAI,SAAJ,CAAc,GAAd,GAAoB,IAAI,SAAJ,CAAc,GAAlC;;AAEA;;;;;;;;;;AAWA,MAAI,SAAJ,CAAc,GAAd,GAAoB,IAAI,SAAJ,CAAc,GAAlC;;AAEA;;;;;;;AAQA,MAAI,SAAJ,CAAc,GAAd,GAAoB,IAAI,SAAJ,CAAc,GAAlC;;AAEA;;;;;;;;;;AAWA,MAAI,SAAJ,CAAc,IAAd,GAAqB,IAAI,SAAJ,CAAc,IAAnC;;AAEA;;;;;;AAOA,MAAI,SAAJ,CAAc,KAAd,GAAsB,IAAI,SAAJ,CAAc,KAApC;;AAEA;;;;;;AAOA,MAAI,SAAJ,CAAc,MAAd,GAAuB,IAAI,SAAJ,CAAc,MAArC;;AAEA,MAAI,SAAJ,CAAc,MAAd,GAAuB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACzC,WAAO,KAAK,QAAL,CAAc,IAAd,EAAoB,GAApB,CAAP;AACD,GAFD;;AAIA,MAAI,SAAJ,CAAc,QAAd,GAAyB,IAAI,SAAJ,CAAc,QAAvC;;AAEA,MAAI,SAAJ,CAAc,YAAd,GAA6B,UAAS,IAAT,EAAe,IAAf,EAAqB;AAChD,WAAO,CAAC,KAAK,cAAL,CAAoB,KAAK,KAAzB,CAAR;AACD,GAFD;;AAIA,MAAI,SAAJ,CAAc,MAAd,GAAuB,YAAW;AAChC,QAAI,GAAJ;AACA,UAAM,EAAN;AACA,QAAI,IAAJ,CAAS,MAAM,SAAN,EAAiB,KAAK,KAAL,CAAW,WAAX,EAAjB,CAAT,EAAqD,KAArD,EAA4D,KAAK,MAAjE;AACA,QAAI,KAAK,IAAT,EAAe;AACb,UAAI,IAAJ,CAAS,GAAT,EAAc,MAAM,MAAN,EAAc,YAAd,CAAd;AACD;AACD,WAAO,IAAI,IAAJ,CAAS,EAAT,CAAP;AACD,GARD;;AAUA,MAAI,SAAJ,CAAc,aAAd,GAA8B,YAAW;AACvC,WAAO,mCAAmC,KAAK,MAAL,EAA1C;AACD,GAFD;;AAIA;;;;;;;;;AAUA,MAAI,SAAJ,CAAc,MAAd,GAAuB,IAAI,SAAJ,CAAc,MAArC;;AAEA;;;;;AAMA,MAAI,SAAJ,CAAc,GAAd,GAAoB,IAAI,SAAJ,CAAc,GAAlC;;AAEA;;;;;;;AAQA,MAAI,SAAJ,CAAc,KAAd,GAAsB,IAAI,SAAJ,CAAc,KAApC;;AAEA,SAAO,GAAP;AAED,CA5JmB,EAApB","file":"arg-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.6.3\nvar Arg, Cmd, Color, Opt;\n\nColor = require('./color').Color;\n\nCmd = require('./cmd').Cmd;\n\nOpt = require('./opt').Opt;\n\n/**\nArgument\n\nUnnamed entity. From command line arguments passed as list of unnamed values.\n@namespace\n@class Presents argument\n*/\n\n\nexports.Arg = Arg = (function() {\n  /**\n  @constructs\n  @param {COA.Cmd} cmd parent command\n  */\n\n  function Arg(_cmd) {\n    this._cmd = _cmd;\n    this._cmd._args.push(this);\n  }\n\n  /**\n  Set a canonical argument identifier to be used anywhere in text messages.\n  @param {String} _name argument name\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.name = Opt.prototype.name;\n\n  /**\n  Set a long description for argument to be used anywhere in text messages.\n  @param {String} _title argument title\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.title = Cmd.prototype.title;\n\n  /**\n  Makes an argument accepts multiple values.\n  Otherwise, the value will be used by the latter passed.\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.arr = Opt.prototype.arr;\n\n  /**\n  Makes an argument required.\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.req = Opt.prototype.req;\n\n  /**\n  Set a validation (or value) function for argument.\n  Value from command line passes through before becoming available from API.\n  Using for validation and convertion simple types to any values.\n  @param {Function} _val validating function,\n      invoked in the context of argument instance\n      and has one parameter with value from command line\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.val = Opt.prototype.val;\n\n  /**\n  Set a default value for argument.\n  Default value passed through validation function as ordinary value.\n  @param {Object} _def\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.def = Opt.prototype.def;\n\n  /**\n  Set custom additional completion for current argument.\n  @param {Function} completion generation function,\n      invoked in the context of argument instance.\n      Accepts parameters:\n          - {Object} opts completion options\n      It can return promise or any other value treated as result.\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.comp = Cmd.prototype.comp;\n\n  /**\n  Make argument value inputting stream.\n  It's add useful validation and shortcut for STDIN.\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.input = Opt.prototype.input;\n\n  /**\n  Make argument value outputing stream.\n  It's add useful validation and shortcut for STDOUT.\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.output = Opt.prototype.output;\n\n  Arg.prototype._parse = function(arg, args) {\n    return this._saveVal(args, arg);\n  };\n\n  Arg.prototype._saveVal = Opt.prototype._saveVal;\n\n  Arg.prototype._checkParsed = function(opts, args) {\n    return !args.hasOwnProperty(this._name);\n  };\n\n  Arg.prototype._usage = function() {\n    var res;\n    res = [];\n    res.push(Color('lpurple', this._name.toUpperCase()), ' : ', this._title);\n    if (this._req) {\n      res.push(' ', Color('lred', '(required)'));\n    }\n    return res.join('');\n  };\n\n  Arg.prototype._requiredText = function() {\n    return 'Missing required argument:\\n  ' + this._usage();\n  };\n\n  /**\n  Return rejected promise with error code.\n  Use in .val() for return with error.\n  @param {Object} reject reason\n      You can customize toString() method and exitCode property\n      of reason object.\n  @returns {Q.promise} rejected promise\n  */\n\n\n  Arg.prototype.reject = Cmd.prototype.reject;\n\n  /**\n  Finish chain for current option and return parent command instance.\n  @returns {COA.Cmd} parent command\n  */\n\n\n  Arg.prototype.end = Cmd.prototype.end;\n\n  /**\n  Apply function with arguments in context of arg instance.\n  @param {Function} fn\n  @param {Array} args\n  @returns {COA.Arg} this instance (for chainability)\n  */\n\n\n  Arg.prototype.apply = Cmd.prototype.apply;\n\n  return Arg;\n\n})();\n"]}