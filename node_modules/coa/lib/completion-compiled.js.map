{"version":3,"sources":["completion.js"],"names":[],"mappings":"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","file":"completion-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.6.3\n/**\nMost of the code adopted from the npm package shell completion code.\nSee https://github.com/isaacs/npm/blob/master/lib/completion.js\n*/\n\nvar Q, complete, dumpScript, escape, getOpts, unescape;\n\nQ = require('q');\n\nescape = require('./shell').escape;\n\nunescape = require('./shell').unescape;\n\nmodule.exports = function() {\n  return this.title('Shell completion').helpful().arg().name('raw').title('Completion words').arr().end().act(function(opts, args) {\n    var argv, cmd, e, _ref;\n    if (process.platform === 'win32') {\n      e = new Error('shell completion not supported on windows');\n      e.code = 'ENOTSUP';\n      e.errno = require('constants').ENOTSUP;\n      return this.reject(e);\n    }\n    if ((process.env.COMP_CWORD == null) || (process.env.COMP_LINE == null) || (process.env.COMP_POINT == null)) {\n      return dumpScript(this._cmd._name);\n    }\n    console.error('COMP_LINE:  %s', process.env.COMP_LINE);\n    console.error('COMP_CWORD: %s', process.env.COMP_CWORD);\n    console.error('COMP_POINT: %s', process.env.COMP_POINT);\n    console.error('args: %j', args.raw);\n    opts = getOpts(args.raw);\n    _ref = this._cmd._parseCmd(opts.partialWords), cmd = _ref.cmd, argv = _ref.argv;\n    return Q.when(complete(cmd, opts), function(compls) {\n      console.error('filtered: %j', compls);\n      return console.log(compls.map(escape).join('\\n'));\n    });\n  });\n};\n\ndumpScript = function(name) {\n  var defer, fs, path;\n  fs = require('fs');\n  path = require('path');\n  defer = Q.defer();\n  fs.readFile(path.resolve(__dirname, 'completion.sh'), 'utf8', function(err, d) {\n    var onError;\n    if (err) {\n      return defer.reject(err);\n    }\n    d = d.replace(/{{cmd}}/g, path.basename(name)).replace(/^\\#\\!.*?\\n/, '');\n    onError = function(err) {\n      if (err.errno === require('constants').EPIPE) {\n        process.stdout.removeListener('error', onError);\n        return defer.resolve();\n      } else {\n        return defer.reject(err);\n      }\n    };\n    process.stdout.on('error', onError);\n    return process.stdout.write(d, function() {\n      return defer.resolve();\n    });\n  });\n  return defer.promise;\n};\n\ngetOpts = function(argv) {\n  var i, line, partialLine, partialWord, partialWords, point, w, word, words;\n  line = process.env.COMP_LINE;\n  w = +process.env.COMP_CWORD;\n  point = +process.env.COMP_POINT;\n  words = argv.map(unescape);\n  word = words[w];\n  partialLine = line.substr(0, point);\n  partialWords = words.slice(0, w);\n  partialWord = argv[w] || '';\n  i = partialWord.length;\n  while (partialWord.substr(0, i) !== partialLine.substr(-1 * i) && i > 0) {\n    i--;\n  }\n  partialWord = unescape(partialWord.substr(0, i));\n  if (partialWord) {\n    partialWords.push(partialWord);\n  }\n  return {\n    line: line,\n    w: w,\n    point: point,\n    words: words,\n    word: word,\n    partialLine: partialLine,\n    partialWords: partialWords,\n    partialWord: partialWord\n  };\n};\n\ncomplete = function(cmd, opts) {\n  var compls, m, o, opt, optPrefix, optWord;\n  compls = [];\n  if (opts.partialWord.indexOf('-')) {\n    compls = Object.keys(cmd._cmdsByName);\n  } else {\n    if (m = opts.partialWord.match(/^(--\\w[\\w-_]*)=(.*)$/)) {\n      optWord = m[1];\n      optPrefix = optWord + '=';\n    } else {\n      compls = Object.keys(cmd._optsByKey);\n    }\n  }\n  if (!(o = opts.partialWords[opts.w - 1]).indexOf('-')) {\n    optWord = o;\n  }\n  if (optWord && (opt = cmd._optsByKey[optWord])) {\n    if (!opt._flag && opt._comp) {\n      compls = Q.join(compls, Q.when(opt._comp(opts), function(c, o) {\n        return c.concat(o.map(function(v) {\n          return (optPrefix || '') + v;\n        }));\n      }));\n    }\n  }\n  if (cmd._comp) {\n    compls = Q.join(compls, Q.when(cmd._comp(opts)), function(c, o) {\n      return c.concat(o);\n    });\n  }\n  return Q.when(compls, function(compls) {\n    console.error('partialWord: %s', opts.partialWord);\n    console.error('compls: %j', compls);\n    return compls.filter(function(c) {\n      return c.indexOf(opts.partialWord) === 0;\n    });\n  });\n};\n"]}