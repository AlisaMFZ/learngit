{"version":3,"sources":["index.js"],"names":[],"mappings":";;AACA;;;;AAIA,IAAI,aAAa,QAAQ,YAAR,CAAjB;AACA,IAAI,WAAW,QAAQ,YAAR,CAAf;;AAEA;;;;;;;;;;;;;;AAcA,OAAO,OAAP,GAAiB,UAAS,IAAT,EAAe,OAAf,EAAuB;AACtC,YAAU,WAAW,EAArB;;AAEA,MAAI,WAAW,QAAQ,QAAR,GACX,IAAI,UAAJ,CAAe,OAAf,CADW,GAEX,IAAI,QAAJ,CAAa,OAAb,CAFJ;;AAIA;AACA,MAAI,QAAQ,SAAZ,EAAuB;AACrB,QAAI,aAAa,QAAQ,sBAAR,CAAjB;AACA,eAAW,QAAX;;AAEA,QAAI,OAAO,SAAS,OAAT,CAAiB,IAAjB,CAAX;AACA,aAAS,eAAT;;AAEA,QAAI,MAAM,QAAQ,SAAR,KAAsB,WAAtB,GACN,SAAS,GADH,GAEN,SAAS,GAAT,CAAa,MAAb,EAFJ;;AAIA,WAAO,EAAE,MAAM,IAAR,EAAc,KAAK,GAAnB,EAAP;AACD;;AAED,MAAI,OAAO,SAAS,OAAT,CAAiB,IAAjB,CAAX;AACA,SAAO,IAAP;AACD,CAxBD","file":"index-compiled.js","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Compressed = require('./compress');\nvar Identity = require('./identity');\n\n/**\n * Stringfy the given AST `node`.\n *\n * Options:\n *\n *  - `compress` space-optimized output\n *  - `sourcemap` return an object with `.code` and `.map`\n *\n * @param {Object} node\n * @param {Object} [options]\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(node, options){\n  options = options || {};\n\n  var compiler = options.compress\n    ? new Compressed(options)\n    : new Identity(options);\n\n  // source maps\n  if (options.sourcemap) {\n    var sourcemaps = require('./source-map-support');\n    sourcemaps(compiler);\n\n    var code = compiler.compile(node);\n    compiler.applySourceMaps();\n\n    var map = options.sourcemap === 'generator'\n      ? compiler.map\n      : compiler.map.toJSON();\n\n    return { code: code, map: map };\n  }\n\n  var code = compiler.compile(node);\n  return code;\n};\n"]}