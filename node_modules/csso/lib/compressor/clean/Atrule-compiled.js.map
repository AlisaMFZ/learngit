{"version":3,"sources":["Atrule.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB,SAAS,WAAT,CAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC;AACpD,QAAI,KAAK,KAAT,EAAgB;AACZ;AACA,aAAK,IAAL,CAAU,mBAAV,GAAgC,KAAhC;;AAEA,YAAI,KAAK,KAAL,CAAW,IAAX,KAAoB,OAApB,IAA+B,KAAK,KAAL,CAAW,YAAX,CAAwB,OAAxB,EAAnC,EAAsE;AAClE,iBAAK,MAAL,CAAY,IAAZ;AACA;AACH;;AAED,YAAI,KAAK,KAAL,CAAW,IAAX,KAAoB,YAApB,IAAoC,KAAK,KAAL,CAAW,KAAX,CAAiB,OAAjB,EAAxC,EAAoE;AAChE,iBAAK,MAAL,CAAY,IAAZ;AACA;AACH;AACJ;;AAED,YAAQ,KAAK,IAAb;AACI,aAAK,SAAL;AACI,gBAAI,KAAK,UAAL,CAAgB,QAAhB,CAAyB,OAAzB,EAAJ,EAAwC;AACpC,qBAAK,MAAL,CAAY,IAAZ;AACA;AACH;;AAED;AACA,gBAAI,KAAK,IAAT,EAAe;AACX,qBAAK,MAAL,CAAY,IAAZ;AACA;AACH;;AAED;;AAEJ,aAAK,QAAL;AACI,gBAAI,CAAC,KAAK,IAAL,CAAU,mBAAf,EAAoC;AAChC,qBAAK,MAAL,CAAY,IAAZ;AACA;AACH;;AAED;AACA;AACA,iBAAK,SAAL,CAAe,KAAK,IAApB,EAA0B,UAAS,IAAT,EAAe;AACrC,oBAAI,KAAK,IAAL,KAAc,QAAlB,EAA4B;AACxB,wBAAI,KAAK,IAAL,KAAc,QAAd,IAA0B,KAAK,IAAL,KAAc,SAA5C,EAAuD;AACnD;AACH;AACJ;;AAED,qBAAK,IAAL,CAAU,mBAAV,GAAgC,KAAhC;AACA,qBAAK,MAAL,CAAY,IAAZ;AACA,uBAAO,IAAP;AACH,aAVD,EAUG,IAVH;;AAYA;AAnCR;AAqCH,CArDD","file":"Atrule-compiled.js","sourcesContent":["module.exports = function cleanAtrule(node, item, list) {\n    if (node.block) {\n        // otherwise removed at-rule don't prevent @import for removal\n        this.root.firstAtrulesAllowed = false;\n\n        if (node.block.type === 'Block' && node.block.declarations.isEmpty()) {\n            list.remove(item);\n            return;\n        }\n\n        if (node.block.type === 'StyleSheet' && node.block.rules.isEmpty()) {\n            list.remove(item);\n            return;\n        }\n    }\n\n    switch (node.name) {\n        case 'charset':\n            if (node.expression.sequence.isEmpty()) {\n                list.remove(item);\n                return;\n            }\n\n            // if there is any rule before @charset -> remove it\n            if (item.prev) {\n                list.remove(item);\n                return;\n            }\n\n            break;\n\n        case 'import':\n            if (!this.root.firstAtrulesAllowed) {\n                list.remove(item);\n                return;\n            }\n\n            // if there are some rules that not an @import or @charset before @import\n            // remove it\n            list.prevUntil(item.prev, function(rule) {\n                if (rule.type === 'Atrule') {\n                    if (rule.name === 'import' || rule.name === 'charset') {\n                        return;\n                    }\n                }\n\n                this.root.firstAtrulesAllowed = false;\n                list.remove(item);\n                return true;\n            }, this);\n\n            break;\n    }\n};\n"]}