{"version":3,"sources":["Attribute.js"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA,IAAI,YAAY,uCAAhB;AACA,IAAI,iBAAiB,qFAArB;;AAEA,SAAS,UAAT,CAAoB,KAApB,EAA2B;AACvB,QAAI,UAAU,EAAV,IAAgB,UAAU,GAA9B,EAAmC;AAC/B;AACH;;AAED;AACA,YAAQ,MAAM,OAAN,CAAc,SAAd,EAAyB,GAAzB,CAAR;;AAEA,WAAO,CAAC,eAAe,IAAf,CAAoB,KAApB,CAAR;AACH;;AAED,OAAO,OAAP,GAAiB,UAAS,IAAT,EAAe;AAC5B,QAAI,YAAY,KAAK,KAArB;;AAEA,QAAI,CAAC,SAAD,IAAc,UAAU,IAAV,KAAmB,QAArC,EAA+C;AAC3C;AACH;;AAED,QAAI,gBAAgB,UAAU,KAAV,CAAgB,OAAhB,CAAwB,aAAxB,EAAuC,IAAvC,CAApB;AACA,QAAI,WAAW,aAAX,CAAJ,EAA+B;AAC3B,aAAK,KAAL,GAAa;AACT,kBAAM,YADG;AAET,kBAAM,UAAU,IAFP;AAGT,kBAAM;AAHG,SAAb;AAKH;AACJ,CAfD","file":"Attribute-compiled.js","sourcesContent":["// Can unquote attribute detection\n// Adopted implementation of Mathias Bynens\n// https://github.com/mathiasbynens/mothereff.in/blob/master/unquoted-attributes/eff.js\nvar escapesRx = /\\\\([0-9A-Fa-f]{1,6})[ \\t\\n\\f\\r]?|\\\\./g;\nvar blockUnquoteRx = /^(-?\\d|--)|[\\u0000-\\u002c\\u002e\\u002f\\u003A-\\u0040\\u005B-\\u005E\\u0060\\u007B-\\u009f]/;\n\nfunction canUnquote(value) {\n    if (value === '' || value === '-') {\n        return;\n    }\n\n    // Escapes are valid, so replace them with a valid non-empty string\n    value = value.replace(escapesRx, 'a');\n\n    return !blockUnquoteRx.test(value);\n}\n\nmodule.exports = function(node) {\n    var attrValue = node.value;\n\n    if (!attrValue || attrValue.type !== 'String') {\n        return;\n    }\n\n    var unquotedValue = attrValue.value.replace(/^(.)(.*)\\1$/, '$2');\n    if (canUnquote(unquotedValue)) {\n        node.value = {\n            type: 'Identifier',\n            info: attrValue.info,\n            name: unquotedValue\n        };\n    }\n};\n"]}