{"version":3,"sources":["color.js"],"names":[],"mappings":"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","file":"color-compiled.js","sourcesContent":["var List = require('../../utils/list.js');\nvar packNumber = require('./Number.js').pack;\n\n// http://www.w3.org/TR/css3-color/#svg-color\nvar NAME_TO_HEX = {\n    'aliceblue': 'f0f8ff',\n    'antiquewhite': 'faebd7',\n    'aqua': '0ff',\n    'aquamarine': '7fffd4',\n    'azure': 'f0ffff',\n    'beige': 'f5f5dc',\n    'bisque': 'ffe4c4',\n    'black': '000',\n    'blanchedalmond': 'ffebcd',\n    'blue': '00f',\n    'blueviolet': '8a2be2',\n    'brown': 'a52a2a',\n    'burlywood': 'deb887',\n    'cadetblue': '5f9ea0',\n    'chartreuse': '7fff00',\n    'chocolate': 'd2691e',\n    'coral': 'ff7f50',\n    'cornflowerblue': '6495ed',\n    'cornsilk': 'fff8dc',\n    'crimson': 'dc143c',\n    'cyan': '0ff',\n    'darkblue': '00008b',\n    'darkcyan': '008b8b',\n    'darkgoldenrod': 'b8860b',\n    'darkgray': 'a9a9a9',\n    'darkgrey': 'a9a9a9',\n    'darkgreen': '006400',\n    'darkkhaki': 'bdb76b',\n    'darkmagenta': '8b008b',\n    'darkolivegreen': '556b2f',\n    'darkorange': 'ff8c00',\n    'darkorchid': '9932cc',\n    'darkred': '8b0000',\n    'darksalmon': 'e9967a',\n    'darkseagreen': '8fbc8f',\n    'darkslateblue': '483d8b',\n    'darkslategray': '2f4f4f',\n    'darkslategrey': '2f4f4f',\n    'darkturquoise': '00ced1',\n    'darkviolet': '9400d3',\n    'deeppink': 'ff1493',\n    'deepskyblue': '00bfff',\n    'dimgray': '696969',\n    'dimgrey': '696969',\n    'dodgerblue': '1e90ff',\n    'firebrick': 'b22222',\n    'floralwhite': 'fffaf0',\n    'forestgreen': '228b22',\n    'fuchsia': 'f0f',\n    'gainsboro': 'dcdcdc',\n    'ghostwhite': 'f8f8ff',\n    'gold': 'ffd700',\n    'goldenrod': 'daa520',\n    'gray': '808080',\n    'grey': '808080',\n    'green': '008000',\n    'greenyellow': 'adff2f',\n    'honeydew': 'f0fff0',\n    'hotpink': 'ff69b4',\n    'indianred': 'cd5c5c',\n    'indigo': '4b0082',\n    'ivory': 'fffff0',\n    'khaki': 'f0e68c',\n    'lavender': 'e6e6fa',\n    'lavenderblush': 'fff0f5',\n    'lawngreen': '7cfc00',\n    'lemonchiffon': 'fffacd',\n    'lightblue': 'add8e6',\n    'lightcoral': 'f08080',\n    'lightcyan': 'e0ffff',\n    'lightgoldenrodyellow': 'fafad2',\n    'lightgray': 'd3d3d3',\n    'lightgrey': 'd3d3d3',\n    'lightgreen': '90ee90',\n    'lightpink': 'ffb6c1',\n    'lightsalmon': 'ffa07a',\n    'lightseagreen': '20b2aa',\n    'lightskyblue': '87cefa',\n    'lightslategray': '789',\n    'lightslategrey': '789',\n    'lightsteelblue': 'b0c4de',\n    'lightyellow': 'ffffe0',\n    'lime': '0f0',\n    'limegreen': '32cd32',\n    'linen': 'faf0e6',\n    'magenta': 'f0f',\n    'maroon': '800000',\n    'mediumaquamarine': '66cdaa',\n    'mediumblue': '0000cd',\n    'mediumorchid': 'ba55d3',\n    'mediumpurple': '9370db',\n    'mediumseagreen': '3cb371',\n    'mediumslateblue': '7b68ee',\n    'mediumspringgreen': '00fa9a',\n    'mediumturquoise': '48d1cc',\n    'mediumvioletred': 'c71585',\n    'midnightblue': '191970',\n    'mintcream': 'f5fffa',\n    'mistyrose': 'ffe4e1',\n    'moccasin': 'ffe4b5',\n    'navajowhite': 'ffdead',\n    'navy': '000080',\n    'oldlace': 'fdf5e6',\n    'olive': '808000',\n    'olivedrab': '6b8e23',\n    'orange': 'ffa500',\n    'orangered': 'ff4500',\n    'orchid': 'da70d6',\n    'palegoldenrod': 'eee8aa',\n    'palegreen': '98fb98',\n    'paleturquoise': 'afeeee',\n    'palevioletred': 'db7093',\n    'papayawhip': 'ffefd5',\n    'peachpuff': 'ffdab9',\n    'peru': 'cd853f',\n    'pink': 'ffc0cb',\n    'plum': 'dda0dd',\n    'powderblue': 'b0e0e6',\n    'purple': '800080',\n    'rebeccapurple': '639',\n    'red': 'f00',\n    'rosybrown': 'bc8f8f',\n    'royalblue': '4169e1',\n    'saddlebrown': '8b4513',\n    'salmon': 'fa8072',\n    'sandybrown': 'f4a460',\n    'seagreen': '2e8b57',\n    'seashell': 'fff5ee',\n    'sienna': 'a0522d',\n    'silver': 'c0c0c0',\n    'skyblue': '87ceeb',\n    'slateblue': '6a5acd',\n    'slategray': '708090',\n    'slategrey': '708090',\n    'snow': 'fffafa',\n    'springgreen': '00ff7f',\n    'steelblue': '4682b4',\n    'tan': 'd2b48c',\n    'teal': '008080',\n    'thistle': 'd8bfd8',\n    'tomato': 'ff6347',\n    'turquoise': '40e0d0',\n    'violet': 'ee82ee',\n    'wheat': 'f5deb3',\n    'white': 'fff',\n    'whitesmoke': 'f5f5f5',\n    'yellow': 'ff0',\n    'yellowgreen': '9acd32'\n};\n\nvar HEX_TO_NAME = {\n    '800000': 'maroon',\n    '800080': 'purple',\n    '808000': 'olive',\n    '808080': 'gray',\n    '00ffff': 'cyan',\n    'f0ffff': 'azure',\n    'f5f5dc': 'beige',\n    'ffe4c4': 'bisque',\n    '000000': 'black',\n    '0000ff': 'blue',\n    'a52a2a': 'brown',\n    'ff7f50': 'coral',\n    'ffd700': 'gold',\n    '008000': 'green',\n    '4b0082': 'indigo',\n    'fffff0': 'ivory',\n    'f0e68c': 'khaki',\n    '00ff00': 'lime',\n    'faf0e6': 'linen',\n    '000080': 'navy',\n    'ffa500': 'orange',\n    'da70d6': 'orchid',\n    'cd853f': 'peru',\n    'ffc0cb': 'pink',\n    'dda0dd': 'plum',\n    'f00': 'red',\n    'ff0000': 'red',\n    'fa8072': 'salmon',\n    'a0522d': 'sienna',\n    'c0c0c0': 'silver',\n    'fffafa': 'snow',\n    'd2b48c': 'tan',\n    '008080': 'teal',\n    'ff6347': 'tomato',\n    'ee82ee': 'violet',\n    'f5deb3': 'wheat',\n    'ffffff': 'white',\n    'ffff00': 'yellow'\n};\n\nfunction hueToRgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n\nfunction hslToRgb(h, s, l, a) {\n    var r;\n    var g;\n    var b;\n\n    if (s == 0) {\n        r = g = b = l; // achromatic\n    } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n\n        r = hueToRgb(p, q, h + 1 / 3);\n        g = hueToRgb(p, q, h);\n        b = hueToRgb(p, q, h - 1 / 3);\n    }\n\n    return [\n        Math.round(r * 255),\n        Math.round(g * 255),\n        Math.round(b * 255),\n        a\n    ];\n}\n\nfunction toHex(value) {\n    value = value.toString(16);\n    return value.length === 1 ? '0' + value : value;\n}\n\nfunction parseFunctionArgs(functionArgs, count, rgb) {\n    var argument = functionArgs.head;\n    var args = [];\n\n    while (argument !== null) {\n        var argumentPart = argument.data.sequence.head;\n        var wasValue = false;\n\n        while (argumentPart !== null) {\n            var value = argumentPart.data;\n            var type = value.type;\n\n            switch (type) {\n                case 'Number':\n                case 'Percentage':\n                    if (wasValue) {\n                        return;\n                    }\n\n                    wasValue = true;\n                    args.push({\n                        type: type,\n                        value: Number(value.value)\n                    });\n                    break;\n\n                case 'Operator':\n                    if (wasValue || value.value !== '+') {\n                        return;\n                    }\n                    break;\n\n                default:\n                    // something we couldn't understand\n                    return;\n            }\n\n            argumentPart = argumentPart.next;\n        }\n\n        argument = argument.next;\n    }\n\n    if (args.length !== count) {\n        // invalid arguments count\n        // TODO: remove those tokens\n        return;\n    }\n\n    if (args.length === 4) {\n        if (args[3].type !== 'Number') {\n            // 4th argument should be a number\n            // TODO: remove those tokens\n            return;\n        }\n\n        args[3].type = 'Alpha';\n    }\n\n    if (rgb) {\n        if (args[0].type !== args[1].type || args[0].type !== args[2].type) {\n            // invalid color, numbers and percentage shouldn't be mixed\n            // TODO: remove those tokens\n            return;\n        }\n    } else {\n        if (args[0].type !== 'Number' ||\n            args[1].type !== 'Percentage' ||\n            args[2].type !== 'Percentage') {\n            // invalid color, for hsl values should be: number, percentage, percentage\n            // TODO: remove those tokens\n            return;\n        }\n\n        args[0].type = 'Angle';\n    }\n\n    return args.map(function(arg) {\n        var value = Math.max(0, arg.value);\n\n        switch (arg.type) {\n            case 'Number':\n                // fit value to [0..255] range\n                value = Math.min(value, 255);\n                break;\n\n            case 'Percentage':\n                // convert 0..100% to value in [0..255] range\n                value = Math.min(value, 100) / 100;\n\n                if (!rgb) {\n                    return value;\n                }\n\n                value = 255 * value;\n                break;\n\n            case 'Angle':\n                // fit value to (-360..360) range\n                return (((value % 360) + 360) % 360) / 360;\n\n            case 'Alpha':\n                // fit value to [0..1] range\n                return Math.min(value, 1);\n        }\n\n        return Math.round(value);\n    });\n}\n\nfunction compressFunction(node, item, list) {\n    var functionName = node.name;\n    var args;\n\n    if (functionName === 'rgba' || functionName === 'hsla') {\n        args = parseFunctionArgs(node.arguments, 4, functionName === 'rgba');\n\n        if (!args) {\n            // something went wrong\n            return;\n        }\n\n        if (functionName === 'hsla') {\n            args = hslToRgb.apply(null, args);\n            node.name = 'rgba';\n        }\n\n        if (args[3] !== 1) {\n            // replace argument values for normalized/interpolated\n            node.arguments.each(function(argument) {\n                var item = argument.sequence.head;\n\n                if (item.data.type === 'Operator') {\n                    item = item.next;\n                }\n\n                argument.sequence = new List([{\n                    type: 'Number',\n                    info: item.data.info,\n                    value: packNumber(args.shift())\n                }]);\n            });\n\n            return;\n        }\n\n        // otherwise convert to rgb, i.e. rgba(255, 0, 0, 1) -> rgb(255, 0, 0)\n        functionName = 'rgb';\n    }\n\n    if (functionName === 'hsl') {\n        args = args || parseFunctionArgs(node.arguments, 3, false);\n\n        if (!args) {\n            // something went wrong\n            return;\n        }\n\n        // convert to rgb\n        args = hslToRgb.apply(null, args);\n        functionName = 'rgb';\n    }\n\n    if (functionName === 'rgb') {\n        args = args || parseFunctionArgs(node.arguments, 3, true);\n\n        if (!args) {\n            // something went wrong\n            return;\n        }\n\n        // check if color is not at the end and not followed by space\n        var next = item.next;\n        if (next && next.data.type !== 'Space') {\n            list.insert(list.createItem({\n                type: 'Space'\n            }), next);\n        }\n\n        item.data = {\n            type: 'Hash',\n            info: node.info,\n            value: toHex(args[0]) + toHex(args[1]) + toHex(args[2])\n        };\n\n        compressHex(item.data, item);\n    }\n}\n\nfunction compressIdent(node, item) {\n    if (this.declaration === null) {\n        return;\n    }\n\n    var color = node.name.toLowerCase();\n\n    if (NAME_TO_HEX.hasOwnProperty(color)) {\n        var hex = NAME_TO_HEX[color];\n\n        if (hex.length + 1 <= color.length) {\n            // replace for shorter hex value\n            item.data = {\n                type: 'Hash',\n                info: node.info,\n                value: hex\n            };\n        } else {\n            // special case for consistent colors\n            if (color === 'grey') {\n                color = 'gray';\n            }\n\n            // just replace value for lower cased name\n            node.name = color;\n        }\n    }\n}\n\nfunction compressHex(node, item) {\n    var color = node.value.toLowerCase();\n\n    // #112233 -> #123\n    if (color.length === 6 &&\n        color[0] === color[1] &&\n        color[2] === color[3] &&\n        color[4] === color[5]) {\n        color = color[0] + color[2] + color[4];\n    }\n\n    if (HEX_TO_NAME[color]) {\n        item.data = {\n            type: 'Identifier',\n            info: node.info,\n            name: HEX_TO_NAME[color]\n        };\n    } else {\n        node.value = color;\n    }\n}\n\nmodule.exports = {\n    compressFunction: compressFunction,\n    compressIdent: compressIdent,\n    compressHex: compressHex\n};\n"]}