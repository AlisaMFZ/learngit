{"version":3,"sources":["background.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,wBAAR,CAAX;;AAEA,OAAO,OAAP,GAAiB,SAAS,kBAAT,CAA4B,IAA5B,EAAkC;AAC/C,aAAS,QAAT,GAAoB;AAChB,YAAI,OAAO,MAAX,EAAmB;AACf,mBAAO,OAAO,OAAO,MAAP,GAAgB,CAAvB,EAA0B,IAAjC;AACH;AACJ;;AAED,aAAS,KAAT,GAAiB;AACb,YAAI,eAAe,OAAnB,EAA4B;AACxB,mBAAO,GAAP;AACH;;AAED,YAAI,CAAC,OAAO,MAAZ,EAAoB;AAChB,mBAAO,OAAP,CACI;AACI,sBAAM,QADV;AAEI,uBAAO;AAFX,aADJ,EAKI;AACI,sBAAM;AADV,aALJ,EAQI;AACI,sBAAM,QADV;AAEI,uBAAO;AAFX,aARJ;AAaH;;AAED,iBAAS,IAAT,CAAc,KAAd,CAAoB,QAApB,EAA8B,MAA9B;;AAEA,iBAAS,EAAT;AACH;;AAED,QAAI,WAAW,EAAf;AACA,QAAI,SAAS,EAAb;;AAEA,SAAK,QAAL,CAAc,IAAd,CAAmB,UAAS,IAAT,EAAe;AAC9B,YAAI,KAAK,IAAL,KAAc,UAAd,IAA4B,KAAK,KAAL,KAAe,GAA/C,EAAoD;AAChD;AACA,qBAAS,IAAT,CAAc,IAAd;AACA;AACH;;AAED;AACA,YAAI,KAAK,IAAL,KAAc,YAAlB,EAAgC;AAC5B,gBAAI,KAAK,IAAL,KAAc,aAAd,IACA,KAAK,IAAL,KAAc,MADd,IAEA,KAAK,IAAL,KAAc,QAFd,IAGA,KAAK,IAAL,KAAc,QAHlB,EAG4B;AACxB;AACH;AACJ;;AAED;AACA,YAAI,KAAK,IAAL,KAAc,OAAd,KAA0B,CAAC,OAAO,MAAR,IAAkB,eAAe,OAA3D,CAAJ,EAAyE;AACrE;AACH;;AAED,eAAO,IAAP,CAAY,IAAZ;AACH,KAvBD;;AAyBA;AACA,SAAK,QAAL,GAAgB,IAAI,IAAJ,CAAS,QAAT,CAAhB;AACH,CA/DD","file":"background-compiled.js","sourcesContent":["var List = require('../../../utils/list.js');\n\nmodule.exports = function compressBackground(node) {\n    function lastType() {\n        if (buffer.length) {\n            return buffer[buffer.length - 1].type;\n        }\n    }\n\n    function flush() {\n        if (lastType() === 'Space') {\n            buffer.pop();\n        }\n\n        if (!buffer.length) {\n            buffer.unshift(\n                {\n                    type: 'Number',\n                    value: '0'\n                },\n                {\n                    type: 'Space'\n                },\n                {\n                    type: 'Number',\n                    value: '0'\n                }\n            );\n        }\n\n        newValue.push.apply(newValue, buffer);\n\n        buffer = [];\n    }\n\n    var newValue = [];\n    var buffer = [];\n\n    node.sequence.each(function(node) {\n        if (node.type === 'Operator' && node.value === ',') {\n            flush();\n            newValue.push(node);\n            return;\n        }\n\n        // remove defaults\n        if (node.type === 'Identifier') {\n            if (node.name === 'transparent' ||\n                node.name === 'none' ||\n                node.name === 'repeat' ||\n                node.name === 'scroll') {\n                return;\n            }\n        }\n\n        // don't add redundant spaces\n        if (node.type === 'Space' && (!buffer.length || lastType() === 'Space')) {\n            return;\n        }\n\n        buffer.push(node);\n    });\n\n    flush();\n    node.sequence = new List(newValue);\n};\n"]}