{"version":3,"sources":["3-disjoinRuleset.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,qBAAR,CAAX;AACA,IAAI,iBAAiB,QAAQ,qBAAR,EAA+B,UAApD;;AAEA,SAAS,cAAT,CAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C;AACtC,QAAI,YAAY,KAAK,QAAL,CAAc,SAA9B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAO,UAAU,IAAV,KAAmB,UAAU,IAApC,EAA0C;AACtC,YAAI,eAAe,IAAI,IAAJ,EAAnB;AACA,qBAAa,MAAb,CAAoB,UAAU,MAAV,CAAiB,UAAU,IAA3B,CAApB;;AAEA,aAAK,MAAL,CAAY,KAAK,UAAL,CAAgB;AACxB,kBAAM,SADkB;AAExB,kBAAM,KAAK,IAFa;AAGxB,6BAAiB,KAAK,eAHE;AAIxB,sBAAU;AACN,sBAAM,UADA;AAEN,sBAAM,KAAK,QAAL,CAAc,IAFd;AAGN,2BAAW;AAHL,aAJc;AASxB,mBAAO;AACH,sBAAM,OADH;AAEH,sBAAM,KAAK,KAAL,CAAW,IAFd;AAGH,8BAAc,KAAK,KAAL,CAAW,YAAX,CAAwB,IAAxB;AAHX;AATiB,SAAhB,CAAZ,EAcI,IAdJ;AAeH;AACJ;;AAED,OAAO,OAAP,GAAiB,SAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC1C,mBAAe,GAAf,EAAoB,UAAS,IAAT,EAAe,IAAf,EAAqB,IAArB,EAA2B;AAC3C,YAAI,KAAK,IAAL,KAAc,SAAlB,EAA6B;AACzB,2BAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B;AACH;AACJ,KAJD;AAKH,CAND","file":"3-disjoinRuleset-compiled.js","sourcesContent":["var List = require('../../utils/list.js');\nvar walkRulesRight = require('../../utils/walk.js').rulesRight;\n\nfunction processRuleset(node, item, list) {\n    var selectors = node.selector.selectors;\n\n    // generate new rule sets:\n    // .a, .b { color: red; }\n    // ->\n    // .a { color: red; }\n    // .b { color: red; }\n\n    // while there are more than 1 simple selector split for rulesets\n    while (selectors.head !== selectors.tail) {\n        var newSelectors = new List();\n        newSelectors.insert(selectors.remove(selectors.head));\n\n        list.insert(list.createItem({\n            type: 'Ruleset',\n            info: node.info,\n            pseudoSignature: node.pseudoSignature,\n            selector: {\n                type: 'Selector',\n                info: node.selector.info,\n                selectors: newSelectors\n            },\n            block: {\n                type: 'Block',\n                info: node.block.info,\n                declarations: node.block.declarations.copy()\n            }\n        }), item);\n    }\n};\n\nmodule.exports = function disjoinRuleset(ast) {\n    walkRulesRight(ast, function(node, item, list) {\n        if (node.type === 'Ruleset') {\n            processRuleset(node, item, list);\n        }\n    });\n};\n"]}