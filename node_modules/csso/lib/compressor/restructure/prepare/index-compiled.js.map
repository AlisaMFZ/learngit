{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,iBAAiB,QAAQ,yBAAR,EAAmC,OAAxD;AACA,IAAI,YAAY,QAAQ,wBAAR,EAAkC,KAAlD;AACA,IAAI,YAAY,QAAQ,6BAAR,CAAhB;AACA,IAAI,2BAA2B,QAAQ,+BAAR,CAA/B;AACA,IAAI,kBAAkB,QAAQ,sBAAR,CAAtB;;AAEA,SAAS,IAAT,CAAc,IAAd,EAAoB,eAApB,EAAqC,SAArC,EAAgD;AAC5C,YAAQ,KAAK,IAAb;AACI,aAAK,SAAL;AACI,iBAAK,KAAL,CAAW,YAAX,CAAwB,IAAxB,CAA6B,eAA7B;AACA,4BAAgB,IAAhB,EAAsB,SAAtB;AACA;;AAEJ,aAAK,QAAL;AACI,gBAAI,KAAK,UAAT,EAAqB;AACjB,qBAAK,UAAL,CAAgB,EAAhB,GAAqB,UAAU,KAAK,UAAf,CAArB;AACH;;AAED;AACA;AACA,gBAAI,eAAe,KAAK,IAApB,EAA0B,IAA1B,KAAmC,WAAvC,EAAoD;AAChD,qBAAK,KAAL,CAAW,eAAX,GAA6B,IAA7B,CADgD,CACZ;;AAEpC,qBAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,CAAsB,UAAS,OAAT,EAAkB;AACpC,4BAAQ,QAAR,CAAiB,SAAjB,CAA2B,IAA3B,CAAgC,UAAS,cAAT,EAAyB;AACrD,uCAAe,aAAf,GAA+B,eAAe,EAA9C;AACH,qBAFD;AAGH,iBAJD;AAKH;AACD;AAtBR;AAwBH;;AAED,OAAO,OAAP,GAAiB,SAAS,OAAT,CAAiB,GAAjB,EAAsB,SAAtB,EAAiC;AAC9C,QAAI,kBAAkB,0BAAtB;;AAEA,cAAU,GAAV,EAAe,UAAS,IAAT,EAAe;AAC1B,aAAK,IAAL,EAAW,eAAX,EAA4B,SAA5B;AACH,KAFD;;AAIA,WAAO;AACH,qBAAa;AADV,KAAP;AAGH,CAVD","file":"index-compiled.js","sourcesContent":["var resolveKeyword = require('../../../utils/names.js').keyword;\nvar walkRules = require('../../../utils/walk.js').rules;\nvar translate = require('../../../utils/translate.js');\nvar createDeclarationIndexer = require('./createDeclarationIndexer.js');\nvar processSelector = require('./processSelector.js');\n\nfunction walk(node, markDeclaration, usageData) {\n    switch (node.type) {\n        case 'Ruleset':\n            node.block.declarations.each(markDeclaration);\n            processSelector(node, usageData);\n            break;\n\n        case 'Atrule':\n            if (node.expression) {\n                node.expression.id = translate(node.expression);\n            }\n\n            // compare keyframe selectors by its values\n            // NOTE: still no clarification about problems with keyframes selector grouping (issue #197)\n            if (resolveKeyword(node.name).name === 'keyframes') {\n                node.block.avoidRulesMerge = true;  /* probably we don't need to prevent those merges for @keyframes\n                                                       TODO: need to be checked */\n                node.block.rules.each(function(ruleset) {\n                    ruleset.selector.selectors.each(function(simpleselector) {\n                        simpleselector.compareMarker = simpleselector.id;\n                    });\n                });\n            }\n            break;\n    }\n};\n\nmodule.exports = function prepare(ast, usageData) {\n    var markDeclaration = createDeclarationIndexer();\n\n    walkRules(ast, function(node) {\n        walk(node, markDeclaration, usageData);\n    });\n\n    return {\n        declaration: markDeclaration\n    };\n};\n"]}