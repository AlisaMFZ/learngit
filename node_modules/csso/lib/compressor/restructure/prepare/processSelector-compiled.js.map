{"version":3,"sources":["processSelector.js"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAI,YAAY,QAAQ,6BAAR,CAAhB;AACA,IAAI,cAAc,QAAQ,kBAAR,CAAlB;;AAEA,IAAI,0BAA0B;AAC1B,oBAAgB,IADU;AAE1B,kBAAc,IAFY;AAG1B,aAAS,IAHiB;AAI1B,cAAU;AAJgB,CAA9B;AAMA,IAAI,yBAAyB;AACzB,YAAQ,IADiB;AAEzB,eAAW,IAFc;AAGzB,aAAS,IAHgB;AAIzB,cAAU,IAJe;AAKzB,oBAAgB,IALS;AAMzB,kBAAc,IANW;AAOzB,aAAS,IAPgB;AAQzB,cAAU;AARe,CAA7B;;AAWA,OAAO,OAAP,GAAiB,SAAS,MAAT,CAAgB,IAAhB,EAAsB,SAAtB,EAAiC;AAC9C,QAAI,UAAU,sBAAc,IAAd,CAAd;AACA,QAAI,YAAY,KAAhB;;AAEA,SAAK,QAAL,CAAc,SAAd,CAAwB,IAAxB,CAA6B,UAAS,cAAT,EAAyB;AAClD,YAAI,UAAU,GAAd;AACA,YAAI,QAAQ,CAAZ;;AAEA,uBAAe,QAAf,CAAwB,IAAxB,CAA6B,UAAS,IAAT,EAAe;AACxC,oBAAQ,KAAK,IAAb;AACI,qBAAK,OAAL;AACI,wBAAI,aAAa,UAAU,MAA3B,EAAmC;AAC/B,4BAAI,aAAa,UAAU,MAAV,CAAiB,KAAK,IAAtB,KAA+B,CAAhD;;AAEA,4BAAI,UAAU,CAAV,IAAe,eAAe,KAAlC,EAAyC;AACrC,kCAAM,IAAI,KAAJ,CAAU,wDAAwD,UAAU,cAAV,CAAlE,CAAN;AACH;;AAED,gCAAQ,UAAR;AACH;AACD;;AAEJ,qBAAK,aAAL;AACI,wBAAI,CAAC,uBAAuB,cAAvB,CAAsC,KAAK,IAA3C,CAAL,EAAuD;AACnD,gCAAQ,KAAK,IAAb,IAAqB,IAArB;AACA,oCAAY,IAAZ;AACH;AACD;;AAEJ,qBAAK,eAAL;AACI,wBAAI,CAAC,wBAAwB,cAAxB,CAAuC,KAAK,IAA5C,CAAL,EAAwD;AACpD,gCAAQ,KAAK,IAAb,IAAqB,IAArB;AACA,oCAAY,IAAZ;AACH;AACD;;AAEJ,qBAAK,kBAAL;AACI,4BAAQ,KAAK,IAAb,IAAqB,IAArB;AACA,gCAAY,IAAZ;AACA;;AAEJ,qBAAK,UAAL;AACI,4BAAQ,GAAR,GAAc,IAAd;AACA,gCAAY,IAAZ;AACA;;AAEJ,qBAAK,YAAL;AACI,8BAAU,KAAK,IAAf;AACA;;AAEJ,qBAAK,WAAL;AACI,wBAAI,KAAK,KAAT,EAAgB;AACZ,gCAAQ,MAAM,KAAK,KAAX,GAAmB,GAA3B,IAAkC,IAAlC;AACA,oCAAY,IAAZ;AACH;AACD;;AAEJ,qBAAK,YAAL;AACI,8BAAU,GAAV;AACA;AAlDR;AAoDH,SArDD;;AAuDA,uBAAe,EAAf,GAAoB,UAAU,cAAV,CAApB;AACA,uBAAe,aAAf,GAA+B,YAAY,cAAZ,EAA4B,QAA5B,EAA/B;;AAEA,YAAI,KAAJ,EAAW;AACP,2BAAe,aAAf,IAAgC,MAAM,KAAtC;AACH;;AAED,YAAI,YAAY,GAAhB,EAAqB;AACjB,2BAAe,aAAf,IAAgC,MAAM,OAAtC;AACH;AACJ,KArED;;AAuEA,QAAI,SAAJ,EAAe;AACX,aAAK,eAAL,GAAuB,oBAAY,OAAZ,EAAqB,IAArB,GAA4B,IAA5B,CAAiC,GAAjC,CAAvB;AACH;AACJ,CA9ED","file":"processSelector-compiled.js","sourcesContent":["var translate = require('../../../utils/translate.js');\nvar specificity = require('./specificity.js');\n\nvar nonFreezePseudoElements = {\n    'first-letter': true,\n    'first-line': true,\n    'after': true,\n    'before': true\n};\nvar nonFreezePseudoClasses = {\n    'link': true,\n    'visited': true,\n    'hover': true,\n    'active': true,\n    'first-letter': true,\n    'first-line': true,\n    'after': true,\n    'before': true\n};\n\nmodule.exports = function freeze(node, usageData) {\n    var pseudos = Object.create(null);\n    var hasPseudo = false;\n\n    node.selector.selectors.each(function(simpleSelector) {\n        var tagName = '*';\n        var scope = 0;\n\n        simpleSelector.sequence.some(function(node) {\n            switch (node.type) {\n                case 'Class':\n                    if (usageData && usageData.scopes) {\n                        var classScope = usageData.scopes[node.name] || 0;\n\n                        if (scope !== 0 && classScope !== scope) {\n                            throw new Error('Selector can\\'t has classes from different scopes: ' + translate(simpleSelector));\n                        }\n\n                        scope = classScope;\n                    }\n                    break;\n\n                case 'PseudoClass':\n                    if (!nonFreezePseudoClasses.hasOwnProperty(node.name)) {\n                        pseudos[node.name] = true;\n                        hasPseudo = true;\n                    }\n                    break;\n\n                case 'PseudoElement':\n                    if (!nonFreezePseudoElements.hasOwnProperty(node.name)) {\n                        pseudos[node.name] = true;\n                        hasPseudo = true;\n                    }\n                    break;\n\n                case 'FunctionalPseudo':\n                    pseudos[node.name] = true;\n                    hasPseudo = true;\n                    break;\n\n                case 'Negation':\n                    pseudos.not = true;\n                    hasPseudo = true;\n                    break;\n\n                case 'Identifier':\n                    tagName = node.name;\n                    break;\n\n                case 'Attribute':\n                    if (node.flags) {\n                        pseudos['[' + node.flags + ']'] = true;\n                        hasPseudo = true;\n                    }\n                    break;\n\n                case 'Combinator':\n                    tagName = '*';\n                    break;\n            }\n        });\n\n        simpleSelector.id = translate(simpleSelector);\n        simpleSelector.compareMarker = specificity(simpleSelector).toString();\n\n        if (scope) {\n            simpleSelector.compareMarker += ':' + scope;\n        }\n\n        if (tagName !== '*') {\n            simpleSelector.compareMarker += ',' + tagName;\n        }\n    });\n\n    if (hasPseudo) {\n        node.pseudoSignature = Object.keys(pseudos).sort().join(',');\n    }\n};\n"]}