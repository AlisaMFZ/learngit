{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar TokenType = require('./const').TokenType;\nvar Scanner = require('./scanner');\nvar List = require('../utils/list');\nvar needPositions;\nvar filename;\nvar scanner;\n\nvar SCOPE_ATRULE_EXPRESSION = 1;\nvar SCOPE_SELECTOR = 2;\nvar SCOPE_VALUE = 3;\n\nvar specialFunctions = {};\nspecialFunctions[SCOPE_ATRULE_EXPRESSION] = {\n    url: getUri\n};\nspecialFunctions[SCOPE_SELECTOR] = {\n    url: getUri,\n    not: getNotFunction\n};\nspecialFunctions[SCOPE_VALUE] = {\n    url: getUri,\n    expression: getOldIEExpression,\n    var: getVarFunction\n};\n\nvar initialContext = {\n    stylesheet: getStylesheet,\n    atrule: getAtrule,\n    atruleExpression: getAtruleExpression,\n    ruleset: getRuleset,\n    selector: getSelector,\n    simpleSelector: getSimpleSelector,\n    block: getBlock,\n    declaration: getDeclaration,\n    value: getValue\n};\n\nvar blockMode = {\n    'declaration': true,\n    'property': true\n};\n\nfunction parseError(message) {\n    var error = new Error(message);\n    var offset = 0;\n    var line = 1;\n    var column = 1;\n    var lines;\n\n    if (scanner.token !== null) {\n        offset = scanner.token.offset;\n        line = scanner.token.line;\n        column = scanner.token.column;\n    } else if (scanner.prevToken !== null) {\n        lines = scanner.prevToken.value.trimRight();\n        offset = scanner.prevToken.offset + lines.length;\n        lines = lines.split(/\\n|\\r\\n?|\\f/);\n        line = scanner.prevToken.line + lines.length - 1;\n        column = lines.length > 1\n            ? lines[lines.length - 1].length + 1\n            : scanner.prevToken.column + lines[lines.length - 1].length;\n    }\n\n    error.name = 'CssSyntaxError';\n    error.parseError = {\n        offset: offset,\n        line: line,\n        column: column\n    };\n\n    throw error;\n}\n\nfunction eat(tokenType) {\n    if (scanner.token !== null && scanner.token.type === tokenType) {\n        scanner.next();\n        return true;\n    }\n\n    parseError(tokenType + ' is expected');\n}\n\nfunction expectIdentifier(name, eat) {\n    if (scanner.token !== null) {\n        if (scanner.token.type === TokenType.Identifier &&\n            scanner.token.value.toLowerCase() === name) {\n            if (eat) {\n                scanner.next();\n            }\n\n            return true;\n        }\n    }\n\n    parseError('Identifier `' + name + '` is expected');\n}\n\nfunction expectAny(what) {\n    if (scanner.token !== null) {\n        for (var i = 1, type = scanner.token.type; i < arguments.length; i++) {\n            if (type === arguments[i]) {\n                return true;\n            }\n        }\n    }\n\n    parseError(what + ' is expected');\n}\n\nfunction getInfo() {\n    if (needPositions && scanner.token) {\n        return {\n            source: filename,\n            offset: scanner.token.offset,\n            line: scanner.token.line,\n            column: scanner.token.column\n        };\n    }\n\n    return null;\n\n}\n\nfunction removeTrailingSpaces(list) {\n    while (list.tail) {\n        if (list.tail.data.type === 'Space') {\n            list.remove(list.tail);\n        } else {\n            break;\n        }\n    }\n}\n\nfunction getStylesheet(nested) {\n    var child = null;\n    var node = {\n        type: 'StyleSheet',\n        info: getInfo(),\n        rules: new List()\n    };\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.Space:\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.Comment:\n                // ignore comments except exclamation comments on top level\n                if (nested || scanner.token.value.charAt(2) !== '!') {\n                    scanner.next();\n                    child = null;\n                } else {\n                    child = getComment();\n                }\n                break;\n\n            case TokenType.Unknown:\n                child = getUnknown();\n                break;\n\n            case TokenType.CommercialAt:\n                child = getAtrule();\n                break;\n\n            case TokenType.RightCurlyBracket:\n                if (!nested) {\n                    parseError('Unexpected right curly brace');\n                }\n\n                break scan;\n\n            default:\n                child = getRuleset();\n        }\n\n        if (child !== null) {\n            node.rules.insert(List.createItem(child));\n        }\n    }\n\n    return node;\n}\n\n// '//' ...\n// TODO: remove it as wrong thing\nfunction getUnknown() {\n    var info = getInfo();\n    var value = scanner.token.value;\n\n    eat(TokenType.Unknown);\n\n    return {\n        type: 'Unknown',\n        info: info,\n        value: value\n    };\n}\n\nfunction isBlockAtrule() {\n    for (var offset = 1, cursor; cursor = scanner.lookup(offset); offset++) {\n        var type = cursor.type;\n\n        if (type === TokenType.RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === TokenType.LeftCurlyBracket ||\n            type === TokenType.CommercialAt) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getAtruleExpression() {\n    var child = null;\n    var node = {\n        type: 'AtruleExpression',\n        info: getInfo(),\n        sequence: new List()\n    };\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.Semicolon:\n                break scan;\n\n            case TokenType.LeftCurlyBracket:\n                break scan;\n\n            case TokenType.Space:\n                if (node.sequence.isEmpty()) {\n                    scanner.next(); // ignore spaces in beginning\n                    child = null;\n                } else {\n                    child = getS();\n                }\n                break;\n\n            case TokenType.Comment: // ignore comments\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.Comma:\n                child = getOperator();\n                break;\n\n            case TokenType.Colon:\n                child = getPseudo();\n                break;\n\n            case TokenType.LeftParenthesis:\n                child = getBraces(SCOPE_ATRULE_EXPRESSION);\n                break;\n\n            default:\n                child = getAny(SCOPE_ATRULE_EXPRESSION);\n        }\n\n        if (child !== null) {\n            node.sequence.insert(List.createItem(child));\n        }\n    }\n\n    removeTrailingSpaces(node.sequence);\n\n    return node;\n}\n\nfunction getAtrule() {\n    eat(TokenType.CommercialAt);\n\n    var node = {\n        type: 'Atrule',\n        info: getInfo(),\n        name: readIdent(false),\n        expression: getAtruleExpression(),\n        block: null\n    };\n\n    if (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.Semicolon:\n                scanner.next();  // {\n                break;\n\n            case TokenType.LeftCurlyBracket:\n                scanner.next();  // {\n\n                if (isBlockAtrule()) {\n                    node.block = getBlock();\n                } else {\n                    node.block = getStylesheet(true);\n                }\n\n                eat(TokenType.RightCurlyBracket);\n                break;\n\n            default:\n                parseError('Unexpected input');\n        }\n    }\n\n    return node;\n}\n\nfunction getRuleset() {\n    return {\n        type: 'Ruleset',\n        info: getInfo(),\n        selector: getSelector(),\n        block: getBlockWithBrackets()\n    };\n}\n\nfunction getSelector() {\n    var isBadSelector = false;\n    var lastComma = true;\n    var node = {\n        type: 'Selector',\n        info: getInfo(),\n        selectors: new List()\n    };\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.LeftCurlyBracket:\n                break scan;\n\n            case TokenType.Comma:\n                if (lastComma) {\n                    isBadSelector = true;\n                }\n\n                lastComma = true;\n                scanner.next();\n                break;\n\n            default:\n                if (!lastComma) {\n                    isBadSelector = true;\n                }\n\n                lastComma = false;\n                node.selectors.insert(List.createItem(getSimpleSelector()));\n\n                if (node.selectors.tail.data.sequence.isEmpty()) {\n                    isBadSelector = true;\n                }\n        }\n    }\n\n    if (lastComma) {\n        isBadSelector = true;\n        // parseError('Unexpected trailing comma');\n    }\n\n    if (isBadSelector) {\n        node.selectors = new List();\n    }\n\n    return node;\n}\n\nfunction getSimpleSelector(nested) {\n    var child = null;\n    var combinator = null;\n    var node = {\n        type: 'SimpleSelector',\n        info: getInfo(),\n        sequence: new List()\n    };\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.Comma:\n                break scan;\n\n            case TokenType.LeftCurlyBracket:\n                if (nested) {\n                    parseError('Unexpected input');\n                }\n\n                break scan;\n\n            case TokenType.RightParenthesis:\n                if (!nested) {\n                    parseError('Unexpected input');\n                }\n\n                break scan;\n\n            case TokenType.Comment:\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.Space:\n                child = null;\n                if (!combinator && node.sequence.head) {\n                    combinator = getCombinator();\n                } else {\n                    scanner.next();\n                }\n                break;\n\n            case TokenType.PlusSign:\n            case TokenType.GreaterThanSign:\n            case TokenType.Tilde:\n            case TokenType.Solidus:\n                if (combinator && combinator.name !== ' ') {\n                    parseError('Unexpected combinator');\n                }\n\n                child = null;\n                combinator = getCombinator();\n                break;\n\n            case TokenType.FullStop:\n                child = getClass();\n                break;\n\n            case TokenType.LeftSquareBracket:\n                child = getAttribute();\n                break;\n\n            case TokenType.NumberSign:\n                child = getShash();\n                break;\n\n            case TokenType.Colon:\n                child = getPseudo();\n                break;\n\n            case TokenType.LowLine:\n            case TokenType.Identifier:\n            case TokenType.Asterisk:\n                child = getNamespacedIdentifier(false);\n                break;\n\n            case TokenType.HyphenMinus:\n            case TokenType.DecimalNumber:\n                child = tryGetPercentage() || getNamespacedIdentifier(false);\n                break;\n\n            default:\n                parseError('Unexpected input');\n        }\n\n        if (child !== null) {\n            if (combinator !== null) {\n                node.sequence.insert(List.createItem(combinator));\n                combinator = null;\n            }\n\n            node.sequence.insert(List.createItem(child));\n        }\n    }\n\n    if (combinator && combinator.name !== ' ') {\n        parseError('Unexpected combinator');\n    }\n\n    return node;\n}\n\nfunction getDeclarations() {\n    var child = null;\n    var declarations = new List();\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.RightCurlyBracket:\n                break scan;\n\n            case TokenType.Space:\n            case TokenType.Comment:\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.Semicolon: // ;\n                scanner.next();\n                child = null;\n                break;\n\n            default:\n                child = getDeclaration();\n        }\n\n        if (child !== null) {\n            declarations.insert(List.createItem(child));\n        }\n    }\n\n    return declarations;\n}\n\nfunction getBlockWithBrackets() {\n    var info = getInfo();\n    var node;\n\n    eat(TokenType.LeftCurlyBracket);\n    node = {\n        type: 'Block',\n        info: info,\n        declarations: getDeclarations()\n    };\n    eat(TokenType.RightCurlyBracket);\n\n    return node;\n}\n\nfunction getBlock() {\n    return {\n        type: 'Block',\n        info: getInfo(),\n        declarations: getDeclarations()\n    };\n}\n\nfunction getDeclaration(nested) {\n    var info = getInfo();\n    var property = getProperty();\n    var value;\n\n    eat(TokenType.Colon);\n\n    // check it's a filter\n    if (/filter$/.test(property.name.toLowerCase()) && checkProgid()) {\n        value = getFilterValue();\n    } else {\n        value = getValue(nested);\n    }\n\n    return {\n        type: 'Declaration',\n        info: info,\n        property: property,\n        value: value\n    };\n}\n\nfunction getProperty() {\n    var name = '';\n    var node = {\n        type: 'Property',\n        info: getInfo(),\n        name: null\n    };\n\n    for (; scanner.token !== null; scanner.next()) {\n        var type = scanner.token.type;\n\n        if (type !== TokenType.Solidus &&\n            type !== TokenType.Asterisk &&\n            type !== TokenType.DollarSign) {\n            break;\n        }\n\n        name += scanner.token.value;\n    }\n\n    node.name = name + readIdent(true);\n\n    readSC();\n\n    return node;\n}\n\nfunction getValue(nested) {\n    var child = null;\n    var node = {\n        type: 'Value',\n        info: getInfo(),\n        important: false,\n        sequence: new List()\n    };\n\n    readSC();\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.RightCurlyBracket:\n            case TokenType.Semicolon:\n                break scan;\n\n            case TokenType.RightParenthesis:\n                if (!nested) {\n                    parseError('Unexpected input');\n                }\n                break scan;\n\n            case TokenType.Space:\n                child = getS();\n                break;\n\n            case TokenType.Comment: // ignore comments\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.NumberSign:\n                child = getVhash();\n                break;\n\n            case TokenType.Solidus:\n            case TokenType.Comma:\n                child = getOperator();\n                break;\n\n            case TokenType.LeftParenthesis:\n            case TokenType.LeftSquareBracket:\n                child = getBraces(SCOPE_VALUE);\n                break;\n\n            case TokenType.ExclamationMark:\n                node.important = getImportant();\n                child = null;\n                break;\n\n            default:\n                // check for unicode range: U+0F00, U+0F00-0FFF, u+0F00??\n                if (scanner.token.type === TokenType.Identifier) {\n                    var prefix = scanner.token.value;\n                    if (prefix === 'U' || prefix === 'u') {\n                        if (scanner.lookupType(1, TokenType.PlusSign)) {\n                            scanner.next(); // U or u\n                            scanner.next(); // +\n\n                            child = {\n                                type: 'Identifier',\n                                info: getInfo(), // FIXME: wrong position\n                                name: prefix + '+' + readUnicodeRange(true)\n                            };\n                            break;\n                        }\n                    }\n                }\n\n                child = getAny(SCOPE_VALUE);\n        }\n\n        if (child !== null) {\n            node.sequence.insert(List.createItem(child));\n        }\n    }\n\n    removeTrailingSpaces(node.sequence);\n\n    return node;\n}\n\n// any = string | percentage | dimension | number | uri | functionExpression | funktion | unary | operator | ident\nfunction getAny(scope) {\n    switch (scanner.token.type) {\n        case TokenType.String:\n            return getString();\n\n        case TokenType.LowLine:\n        case TokenType.Identifier:\n            break;\n\n        case TokenType.FullStop:\n        case TokenType.DecimalNumber:\n        case TokenType.HyphenMinus:\n        case TokenType.PlusSign:\n            var number = tryGetNumber();\n\n            if (number !== null) {\n                if (scanner.token !== null) {\n                    if (scanner.token.type === TokenType.PercentSign) {\n                        return getPercentage(number);\n                    } else if (scanner.token.type === TokenType.Identifier) {\n                        return getDimension(number.value);\n                    }\n                }\n\n                return number;\n            }\n\n            if (scanner.token.type === TokenType.HyphenMinus) {\n                var next = scanner.lookup(1);\n                if (next && (next.type === TokenType.Identifier || next.type === TokenType.HyphenMinus)) {\n                    break;\n                }\n            }\n\n            if (scanner.token.type === TokenType.HyphenMinus ||\n                scanner.token.type === TokenType.PlusSign) {\n                return getOperator();\n            }\n\n            parseError('Unexpected input');\n\n        default:\n            parseError('Unexpected input');\n    }\n\n    var ident = getIdentifier(false);\n\n    if (scanner.token !== null && scanner.token.type === TokenType.LeftParenthesis) {\n        return getFunction(scope, ident);\n    }\n\n    return ident;\n}\n\nfunction readAttrselector() {\n    expectAny('Attribute selector (=, ~=, ^=, $=, *=, |=)',\n        TokenType.EqualsSign,        // =\n        TokenType.Tilde,             // ~=\n        TokenType.CircumflexAccent,  // ^=\n        TokenType.DollarSign,        // $=\n        TokenType.Asterisk,          // *=\n        TokenType.VerticalLine       // |=\n    );\n\n    var name;\n\n    if (scanner.token.type === TokenType.EqualsSign) {\n        name = '=';\n        scanner.next();\n    } else {\n        name = scanner.token.value + '=';\n        scanner.next();\n        eat(TokenType.EqualsSign);\n    }\n\n    return name;\n}\n\n// '[' S* attrib_name ']'\n// '[' S* attrib_name S* attrib_match S* [ IDENT | STRING ] S* attrib_flags? S* ']'\nfunction getAttribute() {\n    var node = {\n        type: 'Attribute',\n        info: getInfo(),\n        name: null,\n        operator: null,\n        value: null,\n        flags: null\n    };\n\n    eat(TokenType.LeftSquareBracket);\n\n    readSC();\n\n    node.name = getNamespacedIdentifier(true);\n\n    readSC();\n\n    if (scanner.token !== null && scanner.token.type !== TokenType.RightSquareBracket) {\n        // avoid case `[name i]`\n        if (scanner.token.type !== TokenType.Identifier) {\n            node.operator = readAttrselector();\n\n            readSC();\n\n            if (scanner.token !== null && scanner.token.type === TokenType.String) {\n                node.value = getString();\n            } else {\n                node.value = getIdentifier(false);\n            }\n\n            readSC();\n        }\n\n        // attribute flags\n        if (scanner.token !== null && scanner.token.type === TokenType.Identifier) {\n            node.flags = scanner.token.value;\n\n            scanner.next();\n            readSC();\n        }\n    }\n\n    eat(TokenType.RightSquareBracket);\n\n    return node;\n}\n\nfunction getBraces(scope) {\n    var close;\n    var child = null;\n    var node = {\n        type: 'Braces',\n        info: getInfo(),\n        open: scanner.token.value,\n        close: null,\n        sequence: new List()\n    };\n\n    if (scanner.token.type === TokenType.LeftParenthesis) {\n        close = TokenType.RightParenthesis;\n    } else {\n        close = TokenType.RightSquareBracket;\n    }\n\n    // left brace\n    scanner.next();\n\n    readSC();\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case close:\n                node.close = scanner.token.value;\n                break scan;\n\n            case TokenType.Space:\n                child = getS();\n                break;\n\n            case TokenType.Comment:\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.NumberSign: // ??\n                child = getVhash();\n                break;\n\n            case TokenType.LeftParenthesis:\n            case TokenType.LeftSquareBracket:\n                child = getBraces(scope);\n                break;\n\n            case TokenType.Solidus:\n            case TokenType.Asterisk:\n            case TokenType.Comma:\n            case TokenType.Colon:\n                child = getOperator();\n                break;\n\n            default:\n                child = getAny(scope);\n        }\n\n        if (child !== null) {\n            node.sequence.insert(List.createItem(child));\n        }\n    }\n\n    removeTrailingSpaces(node.sequence);\n\n    // right brace\n    eat(close);\n\n    return node;\n}\n\n// '.' ident\nfunction getClass() {\n    var info = getInfo();\n\n    eat(TokenType.FullStop);\n\n    return {\n        type: 'Class',\n        info: info,\n        name: readIdent(false)\n    };\n}\n\n// '#' ident\nfunction getShash() {\n    var info = getInfo();\n\n    eat(TokenType.NumberSign);\n\n    return {\n        type: 'Id',\n        info: info,\n        name: readIdent(false)\n    };\n}\n\n// + | > | ~ | /deep/\nfunction getCombinator() {\n    var info = getInfo();\n    var combinator;\n\n    switch (scanner.token.type) {\n        case TokenType.Space:\n            combinator = ' ';\n            scanner.next();\n            break;\n\n        case TokenType.PlusSign:\n        case TokenType.GreaterThanSign:\n        case TokenType.Tilde:\n            combinator = scanner.token.value;\n            scanner.next();\n            break;\n\n        case TokenType.Solidus:\n            combinator = '/deep/';\n            scanner.next();\n\n            expectIdentifier('deep', true);\n\n            eat(TokenType.Solidus);\n            break;\n\n        default:\n            parseError('Combinator (+, >, ~, /deep/) is expected');\n    }\n\n    return {\n        type: 'Combinator',\n        info: info,\n        name: combinator\n    };\n}\n\n// '/*' .* '*/'\nfunction getComment() {\n    var info = getInfo();\n    var value = scanner.token.value;\n    var len = value.length;\n\n    if (len > 4 && value.charAt(len - 2) === '*' && value.charAt(len - 1) === '/') {\n        len -= 2;\n    }\n\n    scanner.next();\n\n    return {\n        type: 'Comment',\n        info: info,\n        value: value.substring(2, len)\n    };\n}\n\n// special reader for units to avoid adjoined IE hacks (i.e. '1px\\9')\nfunction readUnit() {\n    if (scanner.token !== null && scanner.token.type === TokenType.Identifier) {\n        var unit = scanner.token.value;\n        var backSlashPos = unit.indexOf('\\\\');\n\n        // no backslash in unit name\n        if (backSlashPos === -1) {\n            scanner.next();\n            return unit;\n        }\n\n        // patch token\n        scanner.token.value = unit.substr(backSlashPos);\n        scanner.token.offset += backSlashPos;\n        scanner.token.column += backSlashPos;\n\n        // return unit w/o backslash part\n        return unit.substr(0, backSlashPos);\n    }\n\n    parseError('Identifier is expected');\n}\n\n// number ident\nfunction getDimension(number) {\n    return {\n        type: 'Dimension',\n        info: getInfo(),\n        value: number || readNumber(),\n        unit: readUnit()\n    };\n}\n\n// number \"%\"\nfunction tryGetPercentage() {\n    var number = tryGetNumber();\n\n    if (number && scanner.token !== null && scanner.token.type === TokenType.PercentSign) {\n        return getPercentage(number);\n    }\n\n    return null;\n}\n\nfunction getPercentage(number) {\n    var info;\n\n    if (!number) {\n        info = getInfo();\n        number = readNumber();\n    } else {\n        info = number.info;\n        number = number.value;\n    }\n\n    eat(TokenType.PercentSign);\n\n    return {\n        type: 'Percentage',\n        info: info,\n        value: number\n    };\n}\n\n// ident '(' functionBody ')' |\n// not '(' <simpleSelector>* ')'\nfunction getFunction(scope, ident) {\n    var defaultArguments = getFunctionArguments;\n\n    if (!ident) {\n        ident = getIdentifier(false);\n    }\n\n    // parse special functions\n    var name = ident.name.toLowerCase();\n\n    if (specialFunctions.hasOwnProperty(scope)) {\n        if (specialFunctions[scope].hasOwnProperty(name)) {\n            return specialFunctions[scope][name](scope, ident);\n        }\n    }\n\n    return getFunctionInternal(defaultArguments, scope, ident);\n}\n\nfunction getFunctionInternal(functionArgumentsReader, scope, ident) {\n    var args;\n\n    eat(TokenType.LeftParenthesis);\n    args = functionArgumentsReader(scope);\n    eat(TokenType.RightParenthesis);\n\n    return {\n        type: scope === SCOPE_SELECTOR ? 'FunctionalPseudo' : 'Function',\n        info: ident.info,\n        name: ident.name,\n        arguments: args\n    };\n}\n\nfunction getFunctionArguments(scope) {\n    var args = new List();\n    var argument = null;\n    var child = null;\n\n    readSC();\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.RightParenthesis:\n                break scan;\n\n            case TokenType.Space:\n                child = getS();\n                break;\n\n            case TokenType.Comment: // ignore comments\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.NumberSign: // TODO: not sure it should be here\n                child = getVhash();\n                break;\n\n            case TokenType.LeftParenthesis:\n            case TokenType.LeftSquareBracket:\n                child = getBraces(scope);\n                break;\n\n            case TokenType.Comma:\n                if (argument) {\n                    removeTrailingSpaces(argument.sequence);\n                } else {\n                    args.insert(List.createItem({\n                        type: 'Argument',\n                        sequence: new List()\n                    }));\n                }\n                scanner.next();\n                readSC();\n                argument = null;\n                child = null;\n                break;\n\n            case TokenType.Solidus:\n            case TokenType.Asterisk:\n            case TokenType.Colon:\n            case TokenType.EqualsSign:\n                child = getOperator();\n                break;\n\n            default:\n                child = getAny(scope);\n        }\n\n        if (argument === null) {\n            argument = {\n                type: 'Argument',\n                sequence: new List()\n            };\n            args.insert(List.createItem(argument));\n        }\n\n        if (child !== null) {\n            argument.sequence.insert(List.createItem(child));\n        }\n    }\n\n    if (argument !== null) {\n        removeTrailingSpaces(argument.sequence);\n    }\n\n    return args;\n}\n\nfunction getVarFunction(scope, ident) {\n    return getFunctionInternal(getVarFunctionArguments, scope, ident);\n}\n\nfunction getNotFunctionArguments() {\n    var args = new List();\n    var wasSelector = false;\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.RightParenthesis:\n                if (!wasSelector) {\n                    parseError('Simple selector is expected');\n                }\n\n                break scan;\n\n            case TokenType.Comma:\n                if (!wasSelector) {\n                    parseError('Simple selector is expected');\n                }\n\n                wasSelector = false;\n                scanner.next();\n                break;\n\n            default:\n                wasSelector = true;\n                args.insert(List.createItem(getSimpleSelector(true)));\n        }\n    }\n\n    return args;\n}\n\nfunction getNotFunction(scope, ident) {\n    var args;\n\n    eat(TokenType.LeftParenthesis);\n    args = getNotFunctionArguments(scope);\n    eat(TokenType.RightParenthesis);\n\n    return {\n        type: 'Negation',\n        info: ident.info,\n        // name: ident.name,  // TODO: add name?\n        sequence: args        // FIXME: -> arguments?\n    };\n}\n\n// var '(' ident (',' <declaration-value>)? ')'\nfunction getVarFunctionArguments() { // TODO: special type Variable?\n    var args = new List();\n\n    readSC();\n\n    args.insert(List.createItem({\n        type: 'Argument',\n        sequence: new List([getIdentifier(true)])\n    }));\n\n    readSC();\n\n    if (scanner.token !== null && scanner.token.type === TokenType.Comma) {\n        eat(TokenType.Comma);\n        readSC();\n\n        args.insert(List.createItem({\n            type: 'Argument',\n            sequence: new List([getValue(true)])\n        }));\n\n        readSC();\n    }\n\n    return args;\n}\n\n// url '(' ws* (string | raw) ws* ')'\nfunction getUri(scope, ident) {\n    var node = {\n        type: 'Url',\n        info: ident.info,\n        // name: ident.name,\n        value: null\n    };\n\n    eat(TokenType.LeftParenthesis); // (\n\n    readSC();\n\n    if (scanner.token.type === TokenType.String) {\n        node.value = getString();\n        readSC();\n    } else {\n        var rawInfo = getInfo();\n        var raw = '';\n\n        for (; scanner.token !== null; scanner.next()) {\n            var type = scanner.token.type;\n\n            if (type === TokenType.Space ||\n                type === TokenType.LeftParenthesis ||\n                type === TokenType.RightParenthesis) {\n                break;\n            }\n\n            raw += scanner.token.value;\n        }\n\n        node.value = {\n            type: 'Raw',\n            info: rawInfo,\n            value: raw\n        };\n\n        readSC();\n    }\n\n    eat(TokenType.RightParenthesis); // )\n\n    return node;\n}\n\n// expression '(' raw ')'\nfunction getOldIEExpression(scope, ident) {\n    var balance = 0;\n    var raw = '';\n\n    eat(TokenType.LeftParenthesis);\n\n    for (; scanner.token !== null; scanner.next()) {\n        if (scanner.token.type === TokenType.RightParenthesis) {\n            if (balance === 0) {\n                break;\n            }\n\n            balance--;\n        } else if (scanner.token.type === TokenType.LeftParenthesis) {\n            balance++;\n        }\n\n        raw += scanner.token.value;\n    }\n\n    eat(TokenType.RightParenthesis);\n\n    return {\n        type: 'Function',\n        info: ident.info,\n        name: ident.name,\n        arguments: new List([{\n            type: 'Argument',\n            sequence: new List([{\n                type: 'Raw',\n                value: raw\n            }])\n        }])\n    };\n}\n\nfunction readUnicodeRange(tryNext) {\n    var hex = '';\n\n    for (; scanner.token !== null; scanner.next()) {\n        if (scanner.token.type !== TokenType.DecimalNumber &&\n            scanner.token.type !== TokenType.Identifier) {\n            break;\n        }\n\n        hex += scanner.token.value;\n    }\n\n    if (!/^[0-9a-f]{1,6}$/i.test(hex)) {\n        parseError('Unexpected input');\n    }\n\n    // U+abc???\n    if (tryNext) {\n        for (; hex.length < 6 && scanner.token !== null; scanner.next()) {\n            if (scanner.token.type !== TokenType.QuestionMark) {\n                break;\n            }\n\n            hex += scanner.token.value;\n            tryNext = false;\n        }\n    }\n\n    // U+aaa-bbb\n    if (tryNext) {\n        if (scanner.token !== null && scanner.token.type === TokenType.HyphenMinus) {\n            scanner.next();\n\n            var next = readUnicodeRange(false);\n\n            if (!next) {\n                parseError('Unexpected input');\n            }\n\n            hex += '-' + next;\n        }\n    }\n\n    return hex;\n}\n\nfunction readIdent(varAllowed) {\n    var name = '';\n\n    // optional first -\n    if (scanner.token !== null && scanner.token.type === TokenType.HyphenMinus) {\n        name = '-';\n        scanner.next();\n\n        if (varAllowed && scanner.token !== null && scanner.token.type === TokenType.HyphenMinus) {\n            name = '--';\n            scanner.next();\n        }\n    }\n\n    expectAny('Identifier',\n        TokenType.LowLine,\n        TokenType.Identifier\n    );\n\n    if (scanner.token !== null) {\n        name += scanner.token.value;\n        scanner.next();\n\n        for (; scanner.token !== null; scanner.next()) {\n            var type = scanner.token.type;\n\n            if (type !== TokenType.LowLine &&\n                type !== TokenType.Identifier &&\n                type !== TokenType.DecimalNumber &&\n                type !== TokenType.HyphenMinus) {\n                break;\n            }\n\n            name += scanner.token.value;\n        }\n    }\n\n    return name;\n}\n\nfunction getNamespacedIdentifier(checkColon) {\n    if (scanner.token === null) {\n        parseError('Unexpected end of input');\n    }\n\n    var info = getInfo();\n    var name;\n\n    if (scanner.token.type === TokenType.Asterisk) {\n        checkColon = false;\n        name = '*';\n        scanner.next();\n    } else {\n        name = readIdent(false);\n    }\n\n    if (scanner.token !== null) {\n        if (scanner.token.type === TokenType.VerticalLine &&\n            scanner.lookupType(1, TokenType.EqualsSign) === false) {\n            name += '|';\n\n            if (scanner.next() !== null) {\n                if (scanner.token.type === TokenType.HyphenMinus ||\n                    scanner.token.type === TokenType.Identifier ||\n                    scanner.token.type === TokenType.LowLine) {\n                    name += readIdent(false);\n                } else if (scanner.token.type === TokenType.Asterisk) {\n                    checkColon = false;\n                    name += '*';\n                    scanner.next();\n                }\n            }\n        }\n    }\n\n    if (checkColon && scanner.token !== null && scanner.token.type === TokenType.Colon) {\n        scanner.next();\n        name += ':' + readIdent(false);\n    }\n\n    return {\n        type: 'Identifier',\n        info: info,\n        name: name\n    };\n}\n\nfunction getIdentifier(varAllowed) {\n    return {\n        type: 'Identifier',\n        info: getInfo(),\n        name: readIdent(varAllowed)\n    };\n}\n\n// ! ws* important\nfunction getImportant() { // TODO?\n    // var info = getInfo();\n\n    eat(TokenType.ExclamationMark);\n\n    readSC();\n\n    // return {\n    //     type: 'Identifier',\n    //     info: info,\n    //     name: readIdent(false)\n    // };\n\n    expectIdentifier('important');\n\n    readIdent(false);\n\n    // should return identifier in future for original source restoring as is\n    // returns true for now since it's fit to optimizer purposes\n    return true;\n}\n\n// odd | even | number? n\nfunction getNth() {\n    expectAny('Number, odd or even',\n        TokenType.Identifier,\n        TokenType.DecimalNumber\n    );\n\n    var info = getInfo();\n    var value = scanner.token.value;\n    var cmpValue;\n\n    if (scanner.token.type === TokenType.DecimalNumber) {\n        var next = scanner.lookup(1);\n        if (next !== null &&\n            next.type === TokenType.Identifier &&\n            next.value.toLowerCase() === 'n') {\n            value += next.value;\n            scanner.next();\n        }\n    } else {\n        var cmpValue = value.toLowerCase();\n        if (cmpValue !== 'odd' && cmpValue !== 'even' && cmpValue !== 'n') {\n            parseError('Unexpected identifier');\n        }\n    }\n\n    scanner.next();\n\n    return {\n        type: 'Nth',\n        info: info,\n        value: value\n    };\n}\n\nfunction getNthSelector() {\n    var info = getInfo();\n    var sequence = new List();\n    var node;\n    var child = null;\n\n    eat(TokenType.Colon);\n    expectIdentifier('nth', false);\n\n    node = {\n        type: 'FunctionalPseudo',\n        info: info,\n        name: readIdent(false),\n        arguments: new List([{\n            type: 'Argument',\n            sequence: sequence\n        }])\n    };\n\n    eat(TokenType.LeftParenthesis);\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.RightParenthesis:\n                break scan;\n\n            case TokenType.Space:\n            case TokenType.Comment:\n                scanner.next();\n                child = null;\n                break;\n\n            case TokenType.HyphenMinus:\n            case TokenType.PlusSign:\n                child = getOperator();\n                break;\n\n            default:\n                child = getNth();\n        }\n\n        if (child !== null) {\n            sequence.insert(List.createItem(child));\n        }\n    }\n\n    eat(TokenType.RightParenthesis);\n\n    return node;\n}\n\nfunction readNumber() {\n    var wasDigits = false;\n    var number = '';\n    var offset = 0;\n\n    if (scanner.lookupType(offset, TokenType.HyphenMinus)) {\n        number = '-';\n        offset++;\n    }\n\n    if (scanner.lookupType(offset, TokenType.DecimalNumber)) {\n        wasDigits = true;\n        number += scanner.lookup(offset).value;\n        offset++;\n    }\n\n    if (scanner.lookupType(offset, TokenType.FullStop)) {\n        number += '.';\n        offset++;\n    }\n\n    if (scanner.lookupType(offset, TokenType.DecimalNumber)) {\n        wasDigits = true;\n        number += scanner.lookup(offset).value;\n        offset++;\n    }\n\n    if (wasDigits) {\n        while (offset--) {\n            scanner.next();\n        }\n\n        return number;\n    }\n\n    return null;\n}\n\nfunction tryGetNumber() {\n    var info = getInfo();\n    var number = readNumber();\n\n    if (number !== null) {\n        return {\n            type: 'Number',\n            info: info,\n            value: number\n        };\n    }\n\n    return null;\n}\n\n// '/' | '*' | ',' | ':' | '=' | '+' | '-'\n// TODO: remove '=' since it's wrong operator, but theat as operator\n// to make old things like `filter: alpha(opacity=0)` works\nfunction getOperator() {\n    var node = {\n        type: 'Operator',\n        info: getInfo(),\n        value: scanner.token.value\n    };\n\n    scanner.next();\n\n    return node;\n}\n\nfunction getFilterValue() { // TODO\n    var progid;\n    var node = {\n        type: 'Value',\n        info: getInfo(),\n        important: false,\n        sequence: new List()\n    };\n\n    while (progid = checkProgid()) {\n        node.sequence.insert(List.createItem(getProgid(progid)));\n    }\n\n    readSC(node);\n\n    if (scanner.token !== null && scanner.token.type === TokenType.ExclamationMark) {\n        node.important = getImportant();\n    }\n\n    return node;\n}\n\n// 'progid:' ws* 'DXImageTransform.Microsoft.' ident ws* '(' .* ')'\nfunction checkProgid() {\n    function checkSC(offset) {\n        for (var cursor; cursor = scanner.lookup(offset); offset++) {\n            if (cursor.type !== TokenType.Space &&\n                cursor.type !== TokenType.Comment) {\n                break;\n            }\n        }\n\n        return offset;\n    }\n\n    var offset = checkSC(0);\n\n    if (scanner.lookup(offset + 1) === null ||\n        scanner.lookup(offset + 0).value.toLowerCase() !== 'progid' ||\n        scanner.lookup(offset + 1).type !== TokenType.Colon) {\n        return false; // fail\n    }\n\n    offset += 2;\n    offset = checkSC(offset);\n\n    if (scanner.lookup(offset + 5) === null ||\n        scanner.lookup(offset + 0).value.toLowerCase() !== 'dximagetransform' ||\n        scanner.lookup(offset + 1).type !== TokenType.FullStop ||\n        scanner.lookup(offset + 2).value.toLowerCase() !== 'microsoft' ||\n        scanner.lookup(offset + 3).type !== TokenType.FullStop ||\n        scanner.lookup(offset + 4).type !== TokenType.Identifier) {\n        return false; // fail\n    }\n\n    offset += 5;\n    offset = checkSC(offset);\n\n    if (scanner.lookupType(offset, TokenType.LeftParenthesis) === false) {\n        return false; // fail\n    }\n\n    for (var cursor; cursor = scanner.lookup(offset); offset++) {\n        if (cursor.type === TokenType.RightParenthesis) {\n            return cursor;\n        }\n    }\n\n    return false;\n}\n\nfunction getProgid(progidEnd) {\n    var value = '';\n    var node = {\n        type: 'Progid',\n        info: getInfo(),\n        value: null\n    };\n\n    if (!progidEnd) {\n        progidEnd = checkProgid();\n    }\n\n    if (!progidEnd) {\n        parseError('progid is expected');\n    }\n\n    readSC(node);\n\n    var rawInfo = getInfo();\n    for (; scanner.token && scanner.token !== progidEnd; scanner.next()) {\n        value += scanner.token.value;\n    }\n\n    eat(TokenType.RightParenthesis);\n    value += ')';\n\n    node.value = {\n        type: 'Raw',\n        info: rawInfo,\n        value: value\n    };\n\n    readSC(node);\n\n    return node;\n}\n\n// <pseudo-element> | <nth-selector> | <pseudo-class>\nfunction getPseudo() {\n    var next = scanner.lookup(1);\n\n    if (next === null) {\n        scanner.next();\n        parseError('Colon or identifier is expected');\n    }\n\n    if (next.type === TokenType.Colon) {\n        return getPseudoElement();\n    }\n\n    if (next.type === TokenType.Identifier &&\n        next.value.toLowerCase() === 'nth') {\n        return getNthSelector();\n    }\n\n    return getPseudoClass();\n}\n\n// :: ident\nfunction getPseudoElement() {\n    var info = getInfo();\n\n    eat(TokenType.Colon);\n    eat(TokenType.Colon);\n\n    return {\n        type: 'PseudoElement',\n        info: info,\n        name: readIdent(false)\n    };\n}\n\n// : ( ident | function )\nfunction getPseudoClass() {\n    var info = getInfo();\n    var ident = eat(TokenType.Colon) && getIdentifier(false);\n\n    if (scanner.token !== null && scanner.token.type === TokenType.LeftParenthesis) {\n        return getFunction(SCOPE_SELECTOR, ident);\n    }\n\n    return {\n        type: 'PseudoClass',\n        info: info,\n        name: ident.name\n    };\n}\n\n// ws\nfunction getS() {\n    var node = {\n        type: 'Space'\n        // value: scanner.token.value\n    };\n\n    scanner.next();\n\n    return node;\n}\n\nfunction readSC() {\n    // var nodes = [];\n\n    scan:\n    while (scanner.token !== null) {\n        switch (scanner.token.type) {\n            case TokenType.Space:\n                scanner.next();\n                // nodes.push(getS());\n                break;\n\n            case TokenType.Comment:\n                scanner.next();\n                // nodes.push(getComment());\n                break;\n\n            default:\n                break scan;\n        }\n    }\n\n    return null;\n\n    // return nodes.length ? new List(nodes) : null;\n}\n\n// node: String\nfunction getString() {\n    var node = {\n        type: 'String',\n        info: getInfo(),\n        value: scanner.token.value\n    };\n\n    scanner.next();\n\n    return node;\n}\n\n// # ident\nfunction getVhash() {\n    var info = getInfo();\n    var value;\n\n    eat(TokenType.NumberSign);\n\n    expectAny('Number or identifier',\n        TokenType.DecimalNumber,\n        TokenType.Identifier\n    );\n\n    value = scanner.token.value;\n\n    if (scanner.token.type === TokenType.DecimalNumber &&\n        scanner.lookupType(1, TokenType.Identifier)) {\n        scanner.next();\n        value += scanner.token.value;\n    }\n\n    scanner.next();\n\n    return {\n        type: 'Hash',\n        info: info,\n        value: value\n    };\n}\n\nmodule.exports = function parse(source, options) {\n    var ast;\n\n    if (!options || typeof options !== 'object') {\n        options = {};\n    }\n\n    var context = options.context || 'stylesheet';\n    needPositions = Boolean(options.positions);\n    filename = options.filename || '<unknown>';\n\n    if (!initialContext.hasOwnProperty(context)) {\n        throw new Error('Unknown context `' + context + '`');\n    }\n\n    scanner = new Scanner(source, blockMode.hasOwnProperty(context), options.line, options.column);\n    scanner.next();\n    ast = initialContext[context]();\n\n    scanner = null;\n\n    // console.log(JSON.stringify(ast, null, 4));\n    return ast;\n};\n"]}