{"version":3,"sources":["translateWithSourceMap.js"],"names":[],"mappings":"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","file":"translateWithSourceMap-compiled.js","sourcesContent":["var SourceMapGenerator = require('source-map').SourceMapGenerator;\nvar SourceNode = require('source-map').SourceNode;\n\n// Our own implementation of SourceNode#toStringWithSourceMap,\n// since SourceNode doesn't allow multiple references to original source.\n// Also, as we know structure of result we could be optimize generation\n// (currently it's ~40% faster).\nfunction walk(node, fn) {\n    for (var chunk, i = 0; i < node.children.length; i++) {\n        chunk = node.children[i];\n\n        if (chunk instanceof SourceNode) {\n            // this is a hack, because source maps doesn't support for 1(generated):N(original)\n            // if (chunk.merged) {\n            //     fn('', chunk);\n            // }\n\n            walk(chunk, fn);\n        } else {\n            fn(chunk, node);\n        }\n    }\n}\n\nfunction generateSourceMap(root) {\n    var map = new SourceMapGenerator();\n    var css = '';\n    var sourceMappingActive = false;\n    var lastOriginalLine = null;\n    var lastOriginalColumn = null;\n    var lastIndexOfNewline;\n    var generated = {\n        line: 1,\n        column: 0\n    };\n    var activatedMapping = {\n        generated: generated\n    };\n\n    walk(root, function(chunk, original) {\n        if (original.line !== null &&\n            original.column !== null) {\n            if (lastOriginalLine !== original.line ||\n                lastOriginalColumn !== original.column) {\n                map.addMapping({\n                    source: original.source,\n                    original: original,\n                    generated: generated\n                });\n            }\n\n            lastOriginalLine = original.line;\n            lastOriginalColumn = original.column;\n            sourceMappingActive = true;\n        } else if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n            sourceMappingActive = false;\n        }\n\n        css += chunk;\n\n        lastIndexOfNewline = chunk.lastIndexOf('\\n');\n        if (lastIndexOfNewline !== -1) {\n            generated.line += chunk.match(/\\n/g).length;\n            generated.column = chunk.length - lastIndexOfNewline - 1;\n        } else {\n            generated.column += chunk.length;\n        }\n    });\n\n    return {\n        css: css,\n        map: map\n    };\n}\n\nfunction createAnonymousSourceNode(children) {\n    return new SourceNode(\n        null,\n        null,\n        null,\n        children\n    );\n}\n\nfunction createSourceNode(info, children) {\n    if (info.primary) {\n        // special marker node to add several references to original\n        // var merged = createSourceNode(info.merged, []);\n        // merged.merged = true;\n        // children.unshift(merged);\n\n        // use recursion, because primary can also has a primary/merged info\n        return createSourceNode(info.primary, children);\n    }\n\n    return new SourceNode(\n        info.line,\n        info.column - 1,\n        info.source,\n        children\n    );\n}\n\nfunction each(list) {\n    if (list.head === null) {\n        return '';\n    }\n\n    if (list.head === list.tail) {\n        return translate(list.head.data);\n    }\n\n    return list.map(translate).join('');\n}\n\nfunction eachDelim(list, delimeter) {\n    if (list.head === null) {\n        return '';\n    }\n\n    if (list.head === list.tail) {\n        return translate(list.head.data);\n    }\n\n    return list.map(translate).join(delimeter);\n}\n\nfunction translate(node) {\n    switch (node.type) {\n        case 'StyleSheet':\n            return createAnonymousSourceNode(node.rules.map(translate));\n\n        case 'Atrule':\n            var nodes = ['@', node.name];\n\n            if (node.expression && !node.expression.sequence.isEmpty()) {\n                nodes.push(' ', translate(node.expression));\n            }\n\n            if (node.block) {\n                nodes.push('{', translate(node.block), '}');\n            } else {\n                nodes.push(';');\n            }\n\n            return createSourceNode(node.info, nodes);\n\n        case 'Ruleset':\n            return createAnonymousSourceNode([\n                translate(node.selector), '{', translate(node.block), '}'\n            ]);\n\n        case 'Selector':\n            return createAnonymousSourceNode(node.selectors.map(translate)).join(',');\n\n        case 'SimpleSelector':\n            var nodes = node.sequence.map(function(node) {\n                // add extra spaces around /deep/ combinator since comment beginning/ending may to be produced\n                if (node.type === 'Combinator' && node.name === '/deep/') {\n                    return ' ' + translate(node) + ' ';\n                }\n\n                return translate(node);\n            });\n\n            return createSourceNode(node.info, nodes);\n\n        case 'Block':\n            return createAnonymousSourceNode(node.declarations.map(translate)).join(';');\n\n        case 'Declaration':\n            return createSourceNode(\n                node.info,\n                [translate(node.property), ':', translate(node.value)]\n            );\n\n        case 'Property':\n            return node.name;\n\n        case 'Value':\n            return node.important\n                ? each(node.sequence) + '!important'\n                : each(node.sequence);\n\n        case 'Attribute':\n            var result = translate(node.name);\n            var flagsPrefix = ' ';\n\n            if (node.operator !== null) {\n                result += node.operator;\n\n                if (node.value !== null) {\n                    result += translate(node.value);\n\n                    // space between string and flags is not required\n                    if (node.value.type === 'String') {\n                        flagsPrefix = '';\n                    }\n                }\n            }\n\n            if (node.flags !== null) {\n                result += flagsPrefix + node.flags;\n            }\n\n            return '[' + result + ']';\n\n        case 'FunctionalPseudo':\n            return ':' + node.name + '(' + eachDelim(node.arguments, ',') + ')';\n\n        case 'Function':\n            return node.name + '(' + eachDelim(node.arguments, ',') + ')';\n\n        case 'Negation':\n            return ':not(' + eachDelim(node.sequence, ',') + ')';\n\n        case 'Braces':\n            return node.open + each(node.sequence) + node.close;\n\n        case 'Argument':\n        case 'AtruleExpression':\n            return each(node.sequence);\n\n        case 'Url':\n            return 'url(' + translate(node.value) + ')';\n\n        case 'Progid':\n            return translate(node.value);\n\n        case 'Combinator':\n            return node.name;\n\n        case 'Identifier':\n            return node.name;\n\n        case 'PseudoClass':\n            return ':' + node.name;\n\n        case 'PseudoElement':\n            return '::' + node.name;\n\n        case 'Class':\n            return '.' + node.name;\n\n        case 'Id':\n            return '#' + node.name;\n\n        case 'Hash':\n            return '#' + node.value;\n\n        case 'Dimension':\n            return node.value + node.unit;\n\n        case 'Nth':\n            return node.value;\n\n        case 'Number':\n            return node.value;\n\n        case 'String':\n            return node.value;\n\n        case 'Operator':\n            return node.value;\n\n        case 'Raw':\n            return node.value;\n\n        case 'Unknown':\n            return node.value;\n\n        case 'Percentage':\n            return node.value + '%';\n\n        case 'Space':\n            return ' ';\n\n        case 'Comment':\n            return '/*' + node.value + '*/';\n\n        default:\n            throw new Error('Unknown node type: ' + node.type);\n    }\n}\n\nmodule.exports = function(node) {\n    return generateSourceMap(\n        createAnonymousSourceNode(translate(node))\n    );\n};\n"]}