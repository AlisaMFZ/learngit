{"version":3,"sources":["clone.test.js"],"names":[],"mappings":"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","file":"clone.test-compiled.js","sourcesContent":["var lib = require('../lib/deap'),\n\tassert = require('chai').assert;\n\ndescribe('shallow clone', function() {\n\tvar shallow = lib.cloneShallow;\n\n\tit('should not return a reference to the first argument', function() {\n\t\tvar a = { burp: 'adurp' },\n\t\t\tresult = shallow(a);\n\n\t\tassert.notStrictEqual(result, a);\n\t});\n\n\tit('should copy simple values', function() {\n\t\tvar a = { s: 'string', n: 1, b: false, a: [], o: {}},\n\t\t\tb = shallow(a);\n\n\t\tassert.deepEqual(b, a);\n\t\tassert.equal(b.s, a.s);\n\t\tassert.equal(b.n, a.n);\n\t\tassert.equal(b.b, a.b);\n\t\tassert.strictEqual(b.a, a.a);\n\t\tassert.strictEqual(b.o, a.o);\n\t});\n\n\tit('should preserve object references', function() {\n\t\tvar deep = { foo: 'bar' },\n\t\t\ta = { burp: 'adurp' , nested: deep },\n\t\t\tresult = shallow(a);\n\n\t\tassert.strictEqual(result.nested, deep);\n\t});\n\n\tit('should preserve date references', function() {\n\t\tvar a = { burp: 'adurp', date: new Date() },\n\t\t\tdate = a.date;\n\n\t\tvar result = shallow(a);\n\n\t\tassert.strictEqual(result.date, date);\n\t});\n\n\tit('should preserve regexp references', function() {\n\t\tvar a = { burp: 'adurp', regexp: /foo/g },\n\t\t\tregexp = a.regexp;\n\n\t\tvar result = shallow(a);\n\n\t\tassert.strictEqual(result.regexp, regexp);\n\t});\n\n\tit('should preserve array references', function() {\n\t\tvar a = { burp: 'adurp', array: [] },\n\t\t\tarray = a.array;\n\n\t\tvar result = shallow(a);\n\n\t\tassert.strictEqual(result.array, array);\n\t});\n\n\tit('should clone Date objects', function() {\n\t\tvar a = new Date();\n\n\t\tvar result = shallow(a);\n\n\t\tassert.equal(result.toString(), a.toString());\n\t\tassert.notStrictEqual(result, a);\n\t});\n\n\tit('should clone RegExp objects', function() {\n\t\tvar a = /foo/;\n\n\t\tvar result = shallow(a);\n\n\t\tassert.equal(result.toString(), a.toString());\n\t\tassert.notStrictEqual(result, a);\n\t});\n\n\tit('should work for multiple arguments', function() {\n\t\tvar a = { doom: 'song' },\n\t\t\tb = { burp: 'adurp' },\n\t\t\tc = { grr: { doh: 'argh' } };\n\n\t\tvar result = shallow(a, b, c);\n\n\t\tassert.deepEqual(a, { doom: 'song' });\n\t\tassert.deepEqual(b, { burp: 'adurp' });\n\t\tassert.deepEqual(c, { grr: { doh: 'argh' } });\n\t\tassert.sameMembers(Object.keys(result), ['doom', 'burp', 'grr']);\n\t\tassert.equal(result.doom, a.doom);\n\t\tassert.equal(result.burp, b.burp);\n\t\tassert.deepEqual(result.grr, c.grr);\n\t\tassert.strictEqual(result.grr, c.grr);\n\t});\n\n\tdescribe('on an array', function() {\n\n\t\tit('should preserve references', function() {\n\t\t\tvar a = ['string', 1, false, [], {}];\n\n\t\t\tvar result = shallow(a);\n\n\t\t\tassert.deepEqual(result, a);\n\t\t\tassert.equal(result[0], a[0]);\n\t\t\tassert.equal(result[1], a[1]);\n\t\t\tassert.equal(result[2], a[2]);\n\t\t\tassert.strictEqual(result[3], a[3]);\n\t\t\tassert.strictEqual(result[4], a[4]);\n\t\t});\n\n\t});\n\n});\n\n\ndescribe('clone', function() {\n\tvar clone = lib.clone;\n\n\tit('should not return a reference to the first argument', function() {\n\t\tvar a = { burp: 'adurp' },\n\t\t\tresult = clone(a);\n\n\t\tassert.notStrictEqual(result, a);\n\t});\n\n\tit('should copy simple values', function() {\n\t\tvar a = { s: 'string', n: 1, b: false, a: [], o: {}},\n\t\t\tb = clone(a);\n\n\t\tassert.deepEqual(b, a);\n\t\tassert.equal(b.s, a.s);\n\t\tassert.equal(b.n, a.n);\n\t\tassert.equal(b.b, a.b);\n\t\tassert.deepEqual(b.a, a.a);\n\t\tassert.deepEqual(b.o, a.o);\n\t});\n\n\tit('should not preserve object references', function() {\n\t\tvar deeper = { boo: 'far' },\n\t\t\tdeep = { foo: 'bar', nested: deeper },\n\t\t\ta = { burp: 'adurp' , nested: deep };\n\n\t\tvar result = clone(a);\n\n\t\tassert.deepEqual(result, a);\n\t\tassert.notStrictEqual(result.nested, deep);\n\t\tassert.notStrictEqual(result.nested.nested, deeper);\n\t});\n\n\tit('should not preserve date references', function() {\n\t\tvar a = { burp: 'adurp', date: new Date() },\n\t\t\tdate = a.date;\n\n\t\tvar result = clone(a);\n\n\t\tassert.deepEqual(result, a);\n\t\tassert.equal(result.date.getTime(), date.getTime()); // added this because deepEqual doesn't work with dates\n\t\tassert.notStrictEqual(result.date, date);\n\t});\n\n\tit('should not preserve regexp references', function() {\n\t\tvar a = { burp: 'adurp', regexp: /foo/g },\n\t\t\tregexp = a.regexp;\n\n\t\tvar result = clone(a);\n\n\t\tassert.deepEqual(result, a);\n\t\tassert.notStrictEqual(result.regexp, regexp);\n\t});\n\n\tit('should not preserve array references', function() {\n\t\tvar deeper = { boo: 'far' },\n\t\t\tdeep = { foo: 'bar', nested: deeper },\n\t\t\ta = { burp: 'adurp' , nested: [deep, deeper] };\n\n\t\tvar result = clone(a);\n\n\t\tassert.deepEqual(result, a);\n\t\tassert.notStrictEqual(result.nested, a.nested);\n\t\tassert.notStrictEqual(result.nested[0], deep);\n\t\tassert.notStrictEqual(result.nested[0].nested, deeper);\n\t\tassert.notStrictEqual(result.nested[1], deeper);\n\n\t\tassert.deepEqual(result.nested[0].nested, result.nested[1]);\n\t\tassert.notStrictEqual(result.nested[0].nested, result.nested[1]);\n\t});\n\n\tit('should clone Date objects', function() {\n\t\tvar a = new Date();\n\n\t\tvar result = clone(a);\n\n\t\tassert.equal(result.toString(), a.toString());\n\t\tassert.notStrictEqual(result, a);\n\t});\n\n\tit('should clone RegExp objects', function() {\n\t\tvar a = /foo/;\n\n\t\tvar result = clone(a);\n\n\t\tassert.equal(result.toString(), a.toString());\n\t\tassert.notStrictEqual(result, a);\n\t});\n\n\tit('should work for multiple arguments', function() {\n\t\tvar a = { doom: 'song' },\n\t\t\tb = { burp: 'adurp' },\n\t\t\tc = { grr: { doh: 'argh' } };\n\n\t\tvar result = clone(a, b, c);\n\n\t\tassert.deepEqual(a, { doom: 'song' });\n\t\tassert.deepEqual(b, { burp: 'adurp' });\n\t\tassert.deepEqual(c, { grr: { doh: 'argh' } });\n\t\tassert.sameMembers(Object.keys(result), ['doom', 'burp', 'grr']);\n\t\tassert.equal(result.doom, a.doom);\n\t\tassert.equal(result.burp, b.burp);\n\t\tassert.deepEqual(result.grr, c.grr);\n\t\tassert.notStrictEqual(result.grr, c.grr);\n\t});\n\n\tdescribe('on an array', function() {\n\n\t\tit('should not preserve references', function() {\n\t\t\tvar a = ['string', 1, false, [], {}];\n\n\t\t\tvar result = clone(a);\n\n\t\t\tassert.deepEqual(result, a);\n\t\t\tassert.equal(result[0], a[0]);\n\t\t\tassert.equal(result[1], a[1]);\n\t\t\tassert.equal(result[2], a[2]);\n\t\t\tassert.notStrictEqual(result[3], a[3]);\n\t\t\tassert.notStrictEqual(result[4], a[4]);\n\t\t});\n\n\t});\n\n});\n"]}