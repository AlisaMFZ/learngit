{"version":3,"sources":["merge.test.js"],"names":[],"mappings":"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","file":"merge.test-compiled.js","sourcesContent":["var lib = require('../lib/deap'),\n\tassert = require('chai').assert;\n\ndescribe('shallow merge', function() {\n\tvar shallowMerge = lib.mergeShallow;\n\n\tit('should merge everything into an empty object', function() {\n\t\tvar a = { foo: 'bar' },\n\t\t\tresult = shallowMerge({}, a);\n\n\t\tassert.deepEqual(result, a);\n\t});\n\n\tit('should return a reference to the first argument', function() {\n\t\tvar a = { burp: 'adurp' },\n\t\t\tb = { burp: 'zing', grr: 'arghh' };\n\n\t\tvar result = shallowMerge(a, b);\n\n\t\tassert.strictEqual(result, a);\n\t});\n\n\tit('should not replace existing values', function() {\n\t\tvar a = { burp: 'adurp' },\n\t\t\tb = { burp: 'zing', grr: 'arghh' };\n\n\t\tvar result = shallowMerge(a, b);\n\n\t\tassert.deepEqual(result, { burp: 'adurp', grr: 'arghh' });\n\t\tassert.equal(result.burp, a.burp);\n\t});\n\n});\n\ndescribe('deep merge', function() {\n\tvar deepMerge = lib.merge;\n\n\tit('should return a reference to the first argument', function() {\n\t\tvar a = { burp: 'adurp' },\n\t\t\tb = { burp: 'zing', grr: 'arghh' };\n\n\t\tvar result = deepMerge(a, b);\n\n\t\tassert.strictEqual(result, a);\n\t});\n\n\tit('should merge a nested object one level deep', function() {\n\t\tvar a = { foo: 'bar', deep: { foo: 'bar', baz: 'buzz' }},\n\t\t\tb = { foo: 'bop', deep: { foo: 'beep', biz: 'baz' } };\n\n\t\tvar result = deepMerge(a, b);\n\n\t\tassert.equal(result.foo, 'bar');\n\t\tassert.equal(result.deep.foo, 'bar');\n\t\tassert.equal(result.deep.baz, 'buzz');\n\t\tassert.equal(result.deep.biz, 'baz');\n\t});\n\n\tit('should merge a nested object two levels deep', function() {\n\t\tvar a = { foo: 'bar', deep: { hi: 'hello', deeper: { foo: 'bar', baz: 'buzz' }}},\n\t\t\tb = { foo: 'baz', deep: { hi: 'bye', bye: 'hi', deeper: { foo: 'beep', bop: 'boop' } } };\n\n\t\tvar result = deepMerge({}, a, b);\n\n\t\tassert.equal(result.foo, a.foo);\n\t\tassert.isObject(result.deep);\n\t\tassert.equal(result.deep.hi, a.deep.hi);\n\t\tassert.equal(result.deep.bye, b.deep.bye);\n\t\tassert.isObject(result.deep.deeper);\n\t\tassert.equal(result.deep.deeper.foo, a.deep.deeper.foo);\n\t\tassert.equal(result.deep.deeper.baz, a.deep.deeper.baz);\n\t\tassert.equal(result.deep.deeper.bop, b.deep.deeper.bop);\n\t});\n\n\tit('should merge properties from multiple objects', function() {\n\t\tvar a = { foo: ['one'], boo: 'far', poo: 'tar' },\n\t\t\tb = { foo: ['two', 'three'], zoo: 'car' },\n\t\t\tc = { boo: 'star', two: 'czar' };\n\n\t\tvar result = deepMerge({}, a, b, c);\n\n\t\tassert.deepEqual(result, {\n\t\t\tfoo: a.foo,\n\t\t\tboo: a.boo,\n\t\t\tpoo: a.poo,\n\t\t\tzoo: b.zoo,\n\t\t\ttwo: c.two\n\t\t});\n\t});\n\n\tit('should not preserve nested object references', function() {\n\t\tvar a = { foo: 'bar' },\n\t\t\tnested = { grr: 'argh' },\n\t\t\tnewFoo = { burp: nested },\n\t\t\tb = { foo: newFoo, foo2: newFoo };\n\n\t\tvar result = deepMerge(a, b);\n\t\tassert.equal(a.foo, 'bar');\n\t\tassert.deepEqual(a.foo2.burp, b.foo2.burp);\n\t\tassert.notStrictEqual(a.foo2.burp, nested);\n\t});\n\n\tit('should not override a string with an object', function() {\n\t\tvar a = { foo: 'bar' },\n\t\t\tb = { foo: { biz: 'baz' } };\n\n\t\tvar result = deepMerge(a, b);\n\t\tassert.deepEqual(a, { foo: 'bar' });\n\t});\n\n\tit('should preserve array references', function() {\n\t\tvar a = { nested: [{ foo: 'bar' }] },\n\t\t\tb = { nested: [{ boo: 'far' }] },\n\t\t\tdeep = a.nested;\n\n\t\tvar result = deepMerge(a, b);\n\n\t\tassert.deepEqual(result.nested, a.nested);\n\t\tassert.notStrictEqual(result.nested, b.nested);\n\t\tassert.strictEqual(result.nested, deep);\n\t});\n\n\tit('should not preserve references in arrays', function() {\n\t\tvar a = { nested: [{ foo: 'bar' }] },\n\t\t\tb = { nested: [{ boo: 'far' }] },\n\t\t\tdeeper = a.nested[0];\n\n\t\tvar result = deepMerge({}, a, b);\n\n\t\tassert.deepEqual(result.nested, a.nested);\n\t\tassert.notStrictEqual(result.nested[0], deeper);\n\t});\n\n});\n"]}