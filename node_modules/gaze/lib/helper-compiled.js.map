{"version":3,"sources":["helper.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,SAAS,OAAO,OAAP,GAAiB,EAA9B;;AAEA;AACA,OAAO,KAAP,GAAe,SAAS,KAAT,CAAe,GAAf,EAAoB;AACjC,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAAE,WAAO,KAAP;AAAe;AAC9C,SAAQ,IAAI,KAAJ,CAAU,CAAE,KAAK,GAAL,CAAS,MAArB,MAAkC,KAAK,GAA/C;AACD,CAHD;;AAKA;AACA,OAAO,UAAP,GAAoB,SAAS,UAAT,CAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC;AACrD,MAAI,IAAI,GAAJ,KAAY,IAAhB,EAAsB;AAAE,QAAI,GAAJ,IAAW,EAAX;AAAgB;AACxC,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AAAE,QAAI,GAAJ,IAAW,IAAI,GAAJ,EAAS,MAAT,CAAgB,GAAhB,CAAX;AAAkC,GAA5D,MACK,IAAI,GAAJ,EAAS;AAAE,QAAI,GAAJ,EAAS,IAAT,CAAc,GAAd;AAAqB;AACrC,SAAO,IAAI,GAAJ,IAAW,OAAO,MAAP,CAAc,IAAI,GAAJ,CAAd,CAAlB;AACD,CALD;;AAOA;AACA,OAAO,OAAP,GAAiB,SAAS,OAAT,CAAiB,GAAjB,EAAsB;AACrC,MAAI,OAAO,GAAP,KAAe,QAAf,IACF,IAAI,KAAJ,CAAU,CAAE,KAAK,GAAL,CAAS,MAArB,MAAkC,KAAK,GADrC,IAEF,QAAQ,GAFV,EAEe;AACb,WAAO,KAAK,GAAZ;AACD;AACD,SAAO,GAAP;AACD,CAPD;;AASA;AACA,OAAO,cAAP,GAAwB,SAAS,cAAT,CAAwB,QAAxB,EAAkC;AACxD,SAAQ,QAAQ,QAAR,KAAqB,OAAtB,GAAiC,OAAO,QAAP,EAAiB,OAAjB,CAAyB,KAAzB,EAAgC,GAAhC,CAAjC,GAAwE,QAA/E;AACD,CAFD;;AAIA;;;;;;;AAOA,OAAO,MAAP,GAAgB,SAAS,MAAT,GAAkB;AAAE,MAAI,QAAQ,MAAM,SAAN,CAAgB,MAAhB,CAAuB,KAAvB,CAA6B,MAAM,SAAnC,EAA8C,SAA9C,CAAZ,CAAsE,IAAI,SAAS,EAAb,CAAiB,KAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AAAE,QAAI,OAAO,OAAP,CAAe,MAAM,CAAN,CAAf,MAA6B,CAAC,CAAlC,EAAqC;AAAE,aAAO,IAAP,CAAY,MAAM,CAAN,CAAZ;AAAwB;AAAE,GAAC,OAAO,MAAP;AAAgB,CAAtP;;AAEA;;;;AAIA,OAAO,aAAP,GAAuB,SAAS,aAAT,CAAuB,GAAvB,EAA4B,QAA5B,EAAsC,QAAtC,EAAgD;AACrE,MAAI,CAAC,IAAI,MAAT,EAAiB;AAAE,WAAO,UAAP;AAAoB;AACvC,MAAI,YAAY,CAAhB;AACA,MAAI,UAAU,SAAV,OAAU,GAAW;AACvB,aAAS,IAAI,SAAJ,CAAT,EAAyB,UAAU,GAAV,EAAe;AACtC,UAAI,GAAJ,EAAS;AACP,iBAAS,GAAT;AACA,mBAAW,oBAAW,CAAE,CAAxB;AACD,OAHD,MAGO;AACL,qBAAa,CAAb;AACA,YAAI,cAAc,IAAI,MAAtB,EAA8B;AAC5B,mBAAS,IAAT;AACD,SAFD,MAEO;AACL;AACD;AACF;AACF,KAZD;AAaD,GAdD;AAeA;AACD,CAnBD","file":"helper-compiled.js","sourcesContent":["'use strict';\n\nvar path = require('path');\nvar helper = module.exports = {};\n\n// Returns boolean whether filepath is dir terminated\nhelper.isDir = function isDir(dir) {\n  if (typeof dir !== 'string') { return false; }\n  return (dir.slice(-(path.sep.length)) === path.sep);\n};\n\n// Create a `key:[]` if doesnt exist on `obj` then push or concat the `val`\nhelper.objectPush = function objectPush(obj, key, val) {\n  if (obj[key] == null) { obj[key] = []; }\n  if (Array.isArray(val)) { obj[key] = obj[key].concat(val); }\n  else if (val) { obj[key].push(val); }\n  return obj[key] = helper.unique(obj[key]);\n};\n\n// Ensures the dir is marked with path.sep\nhelper.markDir = function markDir(dir) {\n  if (typeof dir === 'string' &&\n    dir.slice(-(path.sep.length)) !== path.sep &&\n    dir !== '.') {\n    dir += path.sep;\n  }\n  return dir;\n};\n\n// Changes path.sep to unix ones for testing\nhelper.unixifyPathSep = function unixifyPathSep(filepath) {\n  return (process.platform === 'win32') ? String(filepath).replace(/\\\\/g, '/') : filepath;\n};\n\n/**\n * Lo-Dash 1.0.1 <http://lodash.com/>\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.4.4 <http://underscorejs.org/>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * Available under MIT license <http://lodash.com/license>\n */\nhelper.unique = function unique() { var array = Array.prototype.concat.apply(Array.prototype, arguments); var result = []; for (var i = 0; i < array.length; i++) { if (result.indexOf(array[i]) === -1) { result.push(array[i]); } } return result; };\n\n/**\n * Copyright (c) 2010 Caolan McMahon\n * Available under MIT license <https://raw.github.com/caolan/async/master/LICENSE>\n */\nhelper.forEachSeries = function forEachSeries(arr, iterator, callback) {\n  if (!arr.length) { return callback(); }\n  var completed = 0;\n  var iterate = function() {\n    iterator(arr[completed], function (err) {\n      if (err) {\n        callback(err);\n        callback = function() {};\n      } else {\n        completed += 1;\n        if (completed === arr.length) {\n          callback(null);\n        } else {\n          iterate();\n        }\n      }\n    });\n  };\n  iterate();\n};\n"]}