{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,eAAe,QAAQ,cAAR,CAAnB;AACA,IAAI,QAAQ,QAAQ,WAAR,CAAZ;AACA,IAAI,aAAa,QAAQ,YAAR,CAAjB;AACA,IAAI,MAAM,QAAQ,UAAR,CAAV;;AAEA,SAAS,IAAT,GAAgB;AACd,eAAa,IAAb,CAAkB,IAAlB;AACD;AACD,KAAK,QAAL,CAAc,IAAd,EAAoB,YAApB;;AAEA,KAAK,SAAL,CAAe,IAAf,GAAsB,KAAK,SAAL,CAAe,GAArC;AACA,KAAK,SAAL,CAAe,GAAf,GAAqB,YAAW;AAC9B;AACA;;AAEA;AACA,MAAI,QAAQ,UAAU,MAAV,GAAmB,SAAnB,GAA+B,CAAC,SAAD,CAA3C;;AAEA,OAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,EAAuB,KAAvB;AACD,CARD;;AAUA,KAAK,SAAL,CAAe,GAAf,GAAqB,IAAI,GAAzB;AACA,KAAK,SAAL,CAAe,IAAf,GAAsB,IAAI,IAA1B;AACA,KAAK,SAAL,CAAe,KAAf,GAAuB,UAAS,IAAT,EAAe,GAAf,EAAoB,EAApB,EAAwB;AAC7C,MAAI,OAAO,GAAP,KAAe,UAAf,IAA6B,MAAM,OAAN,CAAc,GAAd,CAAjC,EAAqD;AACnD,SAAK,GAAL;AACA,UAAM,IAAN;AACD;;AAED;AACA,MAAI,MAAM,OAAN,CAAc,EAAd,CAAJ,EAAuB;AACrB,WAAO,IAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB,EAAqB,YAAW;AACrC,WAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB,EAAuB,EAAvB;AACD,KAF2B,CAE1B,IAF0B,CAErB,IAFqB,CAArB,CAAP;AAGD;;AAED,SAAO,IAAI,KAAJ,CAAU,IAAV,EAAgB,GAAhB,EAAqB,EAArB,CAAP;AACD,CAdD;;AAgBA;AACA,KAAK,SAAL,CAAe,IAAf,GAAsB,IAAtB;;AAEA;AACA,WAAW,KAAX,CAAiB,mCACf,mCADe,GAEf,uCAFF,EAGE,QAAQ,IAHV,EAIE,KAAK,SAJP,EAKE,KALF,EAME,MAAM,GANR;;AASA,KAAK,SAAL,CAAe,GAAf,GAAqB,WAAW,MAAX,CAAkB,qCACrC,8DADmB,EAEnB,QAAQ,IAFW,EAGnB,KAAK,SAAL,CAAe,GAHI,CAArB;;AAMA,IAAI,OAAO,IAAI,IAAJ,EAAX;AACA,OAAO,OAAP,GAAiB,IAAjB","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar util = require('util');\nvar Orchestrator = require('orchestrator');\nvar gutil = require('gulp-util');\nvar deprecated = require('deprecated');\nvar vfs = require('vinyl-fs');\n\nfunction Gulp() {\n  Orchestrator.call(this);\n}\nutil.inherits(Gulp, Orchestrator);\n\nGulp.prototype.task = Gulp.prototype.add;\nGulp.prototype.run = function() {\n  // `run()` is deprecated as of 3.5 and will be removed in 4.0\n  // Use task dependencies instead\n\n  // Impose our opinion of \"default\" tasks onto orchestrator\n  var tasks = arguments.length ? arguments : ['default'];\n\n  this.start.apply(this, tasks);\n};\n\nGulp.prototype.src = vfs.src;\nGulp.prototype.dest = vfs.dest;\nGulp.prototype.watch = function(glob, opt, fn) {\n  if (typeof opt === 'function' || Array.isArray(opt)) {\n    fn = opt;\n    opt = null;\n  }\n\n  // Array of tasks given\n  if (Array.isArray(fn)) {\n    return vfs.watch(glob, opt, function() {\n      this.start.apply(this, fn);\n    }.bind(this));\n  }\n\n  return vfs.watch(glob, opt, fn);\n};\n\n// Let people use this class from our instance\nGulp.prototype.Gulp = Gulp;\n\n// Deprecations\ndeprecated.field('gulp.env has been deprecated. ' +\n  'Use your own CLI parser instead. ' +\n  'We recommend using yargs or minimist.',\n  console.warn,\n  Gulp.prototype,\n  'env',\n  gutil.env\n);\n\nGulp.prototype.run = deprecated.method('gulp.run() has been deprecated. ' +\n  'Use task dependencies or gulp.watch task triggering instead.',\n  console.warn,\n  Gulp.prototype.run\n);\n\nvar inst = new Gulp();\nmodule.exports = inst;\n"]}