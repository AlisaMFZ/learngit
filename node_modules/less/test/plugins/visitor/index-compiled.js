'use strict';

(function (exports) {
    var RemoveProperty = function RemoveProperty(less) {
        this._visitor = new less.visitors.Visitor(this);
    };

    RemoveProperty.prototype = {
        isReplacing: true,
        run: function run(root) {
            return this._visitor.visit(root);
        },
        visitRule: function visitRule(ruleNode, visitArgs) {
            if (ruleNode.name != '-some-aribitrary-property') {
                return ruleNode;
            } else {
                return [];
            }
        }
    };

    exports.install = function (less, pluginManager) {
        pluginManager.addVisitor(new RemoveProperty(less));
    };
})(typeof exports === 'undefined' ? undefined['VisitorPlugin'] = {} : exports);

//# sourceMappingURL=index-compiled.js.map