{"version":3,"sources":["parser.js"],"names":[],"mappings":"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","file":"parser-compiled.js","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _flatten = require('flatten');\n\nvar _flatten2 = _interopRequireDefault(_flatten);\n\nvar _indexesOf = require('indexes-of');\n\nvar _indexesOf2 = _interopRequireDefault(_indexesOf);\n\nvar _uniq = require('uniq');\n\nvar _uniq2 = _interopRequireDefault(_uniq);\n\nvar _root = require('./selectors/root');\n\nvar _root2 = _interopRequireDefault(_root);\n\nvar _selector = require('./selectors/selector');\n\nvar _selector2 = _interopRequireDefault(_selector);\n\nvar _className = require('./selectors/className');\n\nvar _className2 = _interopRequireDefault(_className);\n\nvar _comment = require('./selectors/comment');\n\nvar _comment2 = _interopRequireDefault(_comment);\n\nvar _id = require('./selectors/id');\n\nvar _id2 = _interopRequireDefault(_id);\n\nvar _tag = require('./selectors/tag');\n\nvar _tag2 = _interopRequireDefault(_tag);\n\nvar _string = require('./selectors/string');\n\nvar _string2 = _interopRequireDefault(_string);\n\nvar _pseudo = require('./selectors/pseudo');\n\nvar _pseudo2 = _interopRequireDefault(_pseudo);\n\nvar _attribute = require('./selectors/attribute');\n\nvar _attribute2 = _interopRequireDefault(_attribute);\n\nvar _universal = require('./selectors/universal');\n\nvar _universal2 = _interopRequireDefault(_universal);\n\nvar _combinator = require('./selectors/combinator');\n\nvar _combinator2 = _interopRequireDefault(_combinator);\n\nvar _nesting = require('./selectors/nesting');\n\nvar _nesting2 = _interopRequireDefault(_nesting);\n\nvar _sortAscending = require('./sortAscending');\n\nvar _sortAscending2 = _interopRequireDefault(_sortAscending);\n\nvar _tokenize = require('./tokenize');\n\nvar _tokenize2 = _interopRequireDefault(_tokenize);\n\nvar _types = require('./selectors/types');\n\nvar types = _interopRequireWildcard(_types);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Parser = function () {\n    function Parser(input) {\n        _classCallCheck(this, Parser);\n\n        this.input = input;\n        this.lossy = input.options.lossless === false;\n        this.position = 0;\n        this.root = new _root2.default();\n\n        var selectors = new _selector2.default();\n        this.root.append(selectors);\n\n        this.current = selectors;\n        if (this.lossy) {\n            this.tokens = (0, _tokenize2.default)({ safe: input.safe, css: input.css.trim() });\n        } else {\n            this.tokens = (0, _tokenize2.default)(input);\n        }\n\n        return this.loop();\n    }\n\n    Parser.prototype.attribute = function attribute() {\n        var str = '';\n        var attr = void 0;\n        var startingToken = this.currToken;\n        this.position++;\n        while (this.position < this.tokens.length && this.currToken[0] !== ']') {\n            str += this.tokens[this.position][1];\n            this.position++;\n        }\n        if (this.position === this.tokens.length && !~str.indexOf(']')) {\n            this.error('Expected a closing square bracket.');\n        }\n        var parts = str.split(/((?:[*~^$|]?=))([^]*)/);\n        var namespace = parts[0].split(/(\\|)/g);\n        var attributeProps = {\n            operator: parts[1],\n            value: parts[2],\n            source: {\n                start: {\n                    line: startingToken[2],\n                    column: startingToken[3]\n                },\n                end: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                }\n            },\n            sourceIndex: startingToken[4]\n        };\n        if (namespace.length > 1) {\n            if (namespace[0] === '') {\n                namespace[0] = true;\n            }\n            attributeProps.attribute = this.parseValue(namespace[2]);\n            attributeProps.namespace = this.parseNamespace(namespace[0]);\n        } else {\n            attributeProps.attribute = this.parseValue(parts[0]);\n        }\n        attr = new _attribute2.default(attributeProps);\n\n        if (parts[2]) {\n            var insensitive = parts[2].split(/(\\s+i\\s*?)$/);\n            var trimmedValue = insensitive[0].trim();\n            attr.value = this.lossy ? trimmedValue : insensitive[0];\n            if (insensitive[1]) {\n                attr.insensitive = true;\n                if (!this.lossy) {\n                    attr.raws.insensitive = insensitive[1];\n                }\n            }\n            attr.quoted = trimmedValue[0] === '\\'' || trimmedValue[0] === '\"';\n            attr.raws.unquoted = attr.quoted ? trimmedValue.slice(1, -1) : trimmedValue;\n        }\n        this.newNode(attr);\n        this.position++;\n    };\n\n    Parser.prototype.combinator = function combinator() {\n        if (this.currToken[1] === '|') {\n            return this.namespace();\n        }\n        var node = new _combinator2.default({\n            value: '',\n            source: {\n                start: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                },\n                end: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                }\n            },\n            sourceIndex: this.currToken[4]\n        });\n        while (this.position < this.tokens.length && this.currToken && (this.currToken[0] === 'space' || this.currToken[0] === 'combinator')) {\n            if (this.nextToken && this.nextToken[0] === 'combinator') {\n                node.spaces.before = this.parseSpace(this.currToken[1]);\n                node.source.start.line = this.nextToken[2];\n                node.source.start.column = this.nextToken[3];\n                node.source.end.column = this.nextToken[3];\n                node.source.end.line = this.nextToken[2];\n                node.sourceIndex = this.nextToken[4];\n            } else if (this.prevToken && this.prevToken[0] === 'combinator') {\n                node.spaces.after = this.parseSpace(this.currToken[1]);\n            } else if (this.currToken[0] === 'combinator') {\n                node.value = this.currToken[1];\n            } else if (this.currToken[0] === 'space') {\n                node.value = this.parseSpace(this.currToken[1], ' ');\n            }\n            this.position++;\n        }\n        return this.newNode(node);\n    };\n\n    Parser.prototype.comma = function comma() {\n        if (this.position === this.tokens.length - 1) {\n            this.root.trailingComma = true;\n            this.position++;\n            return;\n        }\n        var selectors = new _selector2.default();\n        this.current.parent.append(selectors);\n        this.current = selectors;\n        this.position++;\n    };\n\n    Parser.prototype.comment = function comment() {\n        var node = new _comment2.default({\n            value: this.currToken[1],\n            source: {\n                start: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                },\n                end: {\n                    line: this.currToken[4],\n                    column: this.currToken[5]\n                }\n            },\n            sourceIndex: this.currToken[6]\n        });\n        this.newNode(node);\n        this.position++;\n    };\n\n    Parser.prototype.error = function error(message) {\n        throw new this.input.error(message); // eslint-disable-line new-cap\n    };\n\n    Parser.prototype.missingBackslash = function missingBackslash() {\n        return this.error('Expected a backslash preceding the semicolon.');\n    };\n\n    Parser.prototype.missingParenthesis = function missingParenthesis() {\n        return this.error('Expected opening parenthesis.');\n    };\n\n    Parser.prototype.missingSquareBracket = function missingSquareBracket() {\n        return this.error('Expected opening square bracket.');\n    };\n\n    Parser.prototype.namespace = function namespace() {\n        var before = this.prevToken && this.prevToken[1] || true;\n        if (this.nextToken[0] === 'word') {\n            this.position++;\n            return this.word(before);\n        } else if (this.nextToken[0] === '*') {\n            this.position++;\n            return this.universal(before);\n        }\n    };\n\n    Parser.prototype.nesting = function nesting() {\n        this.newNode(new _nesting2.default({\n            value: this.currToken[1],\n            source: {\n                start: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                },\n                end: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                }\n            },\n            sourceIndex: this.currToken[4]\n        }));\n        this.position++;\n    };\n\n    Parser.prototype.parentheses = function parentheses() {\n        var last = this.current.last;\n        if (last && last.type === types.PSEUDO) {\n            var selector = new _selector2.default();\n            var cache = this.current;\n            last.append(selector);\n            this.current = selector;\n            var balanced = 1;\n            this.position++;\n            while (this.position < this.tokens.length && balanced) {\n                if (this.currToken[0] === '(') {\n                    balanced++;\n                }\n                if (this.currToken[0] === ')') {\n                    balanced--;\n                }\n                if (balanced) {\n                    this.parse();\n                } else {\n                    selector.parent.source.end.line = this.currToken[2];\n                    selector.parent.source.end.column = this.currToken[3];\n                    this.position++;\n                }\n            }\n            if (balanced) {\n                this.error('Expected closing parenthesis.');\n            }\n            this.current = cache;\n        } else {\n            var _balanced = 1;\n            this.position++;\n            last.value += '(';\n            while (this.position < this.tokens.length && _balanced) {\n                if (this.currToken[0] === '(') {\n                    _balanced++;\n                }\n                if (this.currToken[0] === ')') {\n                    _balanced--;\n                }\n                last.value += this.parseParenthesisToken(this.currToken);\n                this.position++;\n            }\n            if (_balanced) {\n                this.error('Expected closing parenthesis.');\n            }\n        }\n    };\n\n    Parser.prototype.pseudo = function pseudo() {\n        var _this = this;\n\n        var pseudoStr = '';\n        var startingToken = this.currToken;\n        while (this.currToken && this.currToken[0] === ':') {\n            pseudoStr += this.currToken[1];\n            this.position++;\n        }\n        if (!this.currToken) {\n            return this.error('Expected pseudo-class or pseudo-element');\n        }\n        if (this.currToken[0] === 'word') {\n            var pseudo = void 0;\n            this.splitWord(false, function (first, length) {\n                pseudoStr += first;\n                pseudo = new _pseudo2.default({\n                    value: pseudoStr,\n                    source: {\n                        start: {\n                            line: startingToken[2],\n                            column: startingToken[3]\n                        },\n                        end: {\n                            line: _this.currToken[4],\n                            column: _this.currToken[5]\n                        }\n                    },\n                    sourceIndex: startingToken[4]\n                });\n                _this.newNode(pseudo);\n                if (length > 1 && _this.nextToken && _this.nextToken[0] === '(') {\n                    _this.error('Misplaced parenthesis.');\n                }\n            });\n        } else {\n            this.error('Unexpected \"' + this.currToken[0] + '\" found.');\n        }\n    };\n\n    Parser.prototype.space = function space() {\n        var token = this.currToken;\n        // Handle space before and after the selector\n        if (this.position === 0 || this.prevToken[0] === ',' || this.prevToken[0] === '(') {\n            this.spaces = this.parseSpace(token[1]);\n            this.position++;\n        } else if (this.position === this.tokens.length - 1 || this.nextToken[0] === ',' || this.nextToken[0] === ')') {\n            this.current.last.spaces.after = this.parseSpace(token[1]);\n            this.position++;\n        } else {\n            this.combinator();\n        }\n    };\n\n    Parser.prototype.string = function string() {\n        var token = this.currToken;\n        this.newNode(new _string2.default({\n            value: this.currToken[1],\n            source: {\n                start: {\n                    line: token[2],\n                    column: token[3]\n                },\n                end: {\n                    line: token[4],\n                    column: token[5]\n                }\n            },\n            sourceIndex: token[6]\n        }));\n        this.position++;\n    };\n\n    Parser.prototype.universal = function universal(namespace) {\n        var nextToken = this.nextToken;\n        if (nextToken && nextToken[1] === '|') {\n            this.position++;\n            return this.namespace();\n        }\n        this.newNode(new _universal2.default({\n            value: this.currToken[1],\n            source: {\n                start: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                },\n                end: {\n                    line: this.currToken[2],\n                    column: this.currToken[3]\n                }\n            },\n            sourceIndex: this.currToken[4]\n        }), namespace);\n        this.position++;\n    };\n\n    Parser.prototype.splitWord = function splitWord(namespace, firstCallback) {\n        var _this2 = this;\n\n        var nextToken = this.nextToken;\n        var word = this.currToken[1];\n        while (nextToken && nextToken[0] === 'word') {\n            this.position++;\n            var current = this.currToken[1];\n            word += current;\n            if (current.lastIndexOf('\\\\') === current.length - 1) {\n                var next = this.nextToken;\n                if (next && next[0] === 'space') {\n                    word += this.parseSpace(next[1], ' ');\n                    this.position++;\n                }\n            }\n            nextToken = this.nextToken;\n        }\n        var hasClass = (0, _indexesOf2.default)(word, '.');\n        var hasId = (0, _indexesOf2.default)(word, '#');\n        // Eliminate Sass interpolations from the list of id indexes\n        var interpolations = (0, _indexesOf2.default)(word, '#{');\n        if (interpolations.length) {\n            hasId = hasId.filter(function (hashIndex) {\n                return !~interpolations.indexOf(hashIndex);\n            });\n        }\n        var indices = (0, _sortAscending2.default)((0, _uniq2.default)((0, _flatten2.default)([[0], hasClass, hasId])));\n        indices.forEach(function (ind, i) {\n            var index = indices[i + 1] || word.length;\n            var value = word.slice(ind, index);\n            if (i === 0 && firstCallback) {\n                return firstCallback.call(_this2, value, indices.length);\n            }\n            var node = void 0;\n            if (~hasClass.indexOf(ind)) {\n                node = new _className2.default({\n                    value: value.slice(1),\n                    source: {\n                        start: {\n                            line: _this2.currToken[2],\n                            column: _this2.currToken[3] + ind\n                        },\n                        end: {\n                            line: _this2.currToken[4],\n                            column: _this2.currToken[3] + (index - 1)\n                        }\n                    },\n                    sourceIndex: _this2.currToken[6] + indices[i]\n                });\n            } else if (~hasId.indexOf(ind)) {\n                node = new _id2.default({\n                    value: value.slice(1),\n                    source: {\n                        start: {\n                            line: _this2.currToken[2],\n                            column: _this2.currToken[3] + ind\n                        },\n                        end: {\n                            line: _this2.currToken[4],\n                            column: _this2.currToken[3] + (index - 1)\n                        }\n                    },\n                    sourceIndex: _this2.currToken[6] + indices[i]\n                });\n            } else {\n                node = new _tag2.default({\n                    value: value,\n                    source: {\n                        start: {\n                            line: _this2.currToken[2],\n                            column: _this2.currToken[3] + ind\n                        },\n                        end: {\n                            line: _this2.currToken[4],\n                            column: _this2.currToken[3] + (index - 1)\n                        }\n                    },\n                    sourceIndex: _this2.currToken[6] + indices[i]\n                });\n            }\n            _this2.newNode(node, namespace);\n        });\n        this.position++;\n    };\n\n    Parser.prototype.word = function word(namespace) {\n        var nextToken = this.nextToken;\n        if (nextToken && nextToken[1] === '|') {\n            this.position++;\n            return this.namespace();\n        }\n        return this.splitWord(namespace);\n    };\n\n    Parser.prototype.loop = function loop() {\n        while (this.position < this.tokens.length) {\n            this.parse(true);\n        }\n        return this.root;\n    };\n\n    Parser.prototype.parse = function parse(throwOnParenthesis) {\n        switch (this.currToken[0]) {\n            case 'space':\n                this.space();\n                break;\n            case 'comment':\n                this.comment();\n                break;\n            case '(':\n                this.parentheses();\n                break;\n            case ')':\n                if (throwOnParenthesis) {\n                    this.missingParenthesis();\n                }\n                break;\n            case '[':\n                this.attribute();\n                break;\n            case ']':\n                this.missingSquareBracket();\n                break;\n            case 'at-word':\n            case 'word':\n                this.word();\n                break;\n            case ':':\n                this.pseudo();\n                break;\n            case ';':\n                this.missingBackslash();\n                break;\n            case ',':\n                this.comma();\n                break;\n            case '*':\n                this.universal();\n                break;\n            case '&':\n                this.nesting();\n                break;\n            case 'combinator':\n                this.combinator();\n                break;\n            case 'string':\n                this.string();\n                break;\n        }\n    };\n\n    /**\n     * Helpers\n     */\n\n    Parser.prototype.parseNamespace = function parseNamespace(namespace) {\n        if (this.lossy && typeof namespace === 'string') {\n            var trimmed = namespace.trim();\n            if (!trimmed.length) {\n                return true;\n            }\n\n            return trimmed;\n        }\n\n        return namespace;\n    };\n\n    Parser.prototype.parseSpace = function parseSpace(space, replacement) {\n        return this.lossy ? replacement || '' : space;\n    };\n\n    Parser.prototype.parseValue = function parseValue(value) {\n        return this.lossy && value && typeof value === 'string' ? value.trim() : value;\n    };\n\n    Parser.prototype.parseParenthesisToken = function parseParenthesisToken(token) {\n        if (!this.lossy) {\n            return token[1];\n        }\n\n        if (token[0] === 'space') {\n            return this.parseSpace(token[1], ' ');\n        }\n\n        return this.parseValue(token[1]);\n    };\n\n    Parser.prototype.newNode = function newNode(node, namespace) {\n        if (namespace) {\n            node.namespace = this.parseNamespace(namespace);\n        }\n        if (this.spaces) {\n            node.spaces.before = this.spaces;\n            this.spaces = '';\n        }\n        return this.current.append(node);\n    };\n\n    _createClass(Parser, [{\n        key: 'currToken',\n        get: function get() {\n            return this.tokens[this.position];\n        }\n    }, {\n        key: 'nextToken',\n        get: function get() {\n            return this.tokens[this.position + 1];\n        }\n    }, {\n        key: 'prevToken',\n        get: function get() {\n            return this.tokens[this.position - 1];\n        }\n    }]);\n\n    return Parser;\n}();\n\nexports.default = Parser;\nmodule.exports = exports['default'];"]}