{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar escapeRegExp = require('escape-string-regexp');\nvar objectAssign = require('object-assign');\nvar Transform = require('readable-stream/transform');\n\nmodule.exports = function ReplaceStream(search, replace, options) {\n  var tail = '';\n  var totalMatches = 0;\n  var isRegex = search instanceof RegExp;\n\n  options = objectAssign({\n    limit: Infinity,\n    encoding: 'utf8',\n    maxMatchLen: 100\n  }, options);\n\n  var replaceFn = replace;\n\n  replaceFn = createReplaceFn(replace, isRegex);\n\n  var match;\n  if (isRegex) {\n    match = matchFromRegex(search, options)\n  } else {\n    match = matchFromString(search, options);\n    options.maxMatchLen = search.length;\n  }\n\n  function transform(buf, enc, cb) {\n    var matches;\n    var lastPos = 0;\n    var runningMatch = '';\n    var matchCount = 0;\n    var rewritten = '';\n    var haystack = tail + buf.toString(options.encoding);\n    tail = '';\n\n    while (totalMatches < options.limit &&\n          (matches = match.exec(haystack)) !== null) {\n\n      matchCount++;\n      var before = haystack.slice(lastPos, matches.index);\n      var regexMatch = matches;\n      lastPos = matches.index + regexMatch[0].length;\n\n      if (lastPos > haystack.length && regexMatch[0].length < options.maxMatchLen) {\n        tail = regexMatch[0]\n      } else {\n        var dataToAppend = getDataToAppend(before,regexMatch);\n        rewritten += dataToAppend;\n      }\n    }\n\n    if (tail.length < 1)\n      tail = haystack.slice(lastPos) > options.maxMatchLen ? haystack.slice(lastPos).slice(0 - options.maxMatchLen) : haystack.slice(lastPos)\n\n    var dataToQueue = getDataToQueue(matchCount,haystack,rewritten,lastPos);\n    cb(null, dataToQueue);\n  }\n\n  function getDataToAppend(before, match) {\n    var dataToAppend = before;\n\n    totalMatches++;\n\n    dataToAppend += isRegex ? replaceFn.apply(this, match.concat([match.index, match.input])) : replaceFn(match[0]);\n\n    return dataToAppend;\n  }\n\n  function getDataToQueue(matchCount, haystack, rewritten, lastPos) {\n    if (matchCount > 0) {\n      if (haystack.length > tail.length) {\n        return rewritten + haystack.slice(lastPos, haystack.length - tail.length);\n      }\n\n      return rewritten;\n    }\n\n    return haystack.slice(0, haystack.length - tail.length);\n  }\n\n  function flush(cb) {\n    if (tail) {\n      this.push(tail);\n    }\n    cb();\n  }\n\n  return new Transform({\n    transform: transform,\n    flush: flush\n  });\n};\n\nfunction createReplaceFn(replace, isRegEx) {\n  var regexReplaceFunction = function () {\n    var newReplace = replace;\n    // ability to us $1 with captures\n    // Start at 1 and end at length - 2 to avoid the match parameter and offset\n    // And string parameters\n    var paramLength = arguments.length - 2;\n    for (var i = 1; i < paramLength; i++) {\n      newReplace = newReplace.replace(new RegExp('\\\\$' + i, 'g'), arguments[i] || '')\n    }\n    return newReplace;\n  };\n\n  if (isRegEx && !(replace instanceof Function)) {\n    return regexReplaceFunction;\n  }\n\n  if (!(replace instanceof Function)) {\n    return function stringReplaceFunction() {\n      return replace;\n    };\n  }\n\n  return replace;\n}\n\nfunction matchFromRegex(regex, options) {\n  if (options.regExpOptions) {\n    regex = new RegExp(regex.source, options.regExpOptions)\n  }\n\n  // If there is no global flag then there can only be one match\n  if (!regex.global) {\n    options.limit = 1;\n  }\n  return regex;\n}\n\nfunction matchFromString(s, options) {\n  if (options.regExpOptions) {\n    return new RegExp(escapeRegExp(s), options.regExpOptions);\n  }\n\n  return new RegExp(escapeRegExp(s), options.ignoreCase === false ? 'gm' : 'gmi');\n}\n"]}