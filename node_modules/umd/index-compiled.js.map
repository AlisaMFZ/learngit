{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["'use strict';\n\n\nvar templateSTR = \"(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}defineNamespace()}})(function(){source()});\";\n\nfunction template(moduleName, options) {\n  if (typeof options === 'boolean') {\n    options = {commonJS: options};\n  } else if (!options) {\n    options = {};\n  }\n  var str = templateSTR.replace(/defineNamespace\\(\\)/g, compileNamespace(moduleName))\n    .split('source()')\n  str[0] = str[0].trim();\n  //make sure these are undefined so as to not get confused if modules have inner UMD systems\n  str[0] += 'var define,module,exports;';\n  if (options.commonJS) str[0] += 'module={exports:(exports={})};';\n  str[0] += '\\n';\n  if (options.commonJS) str[1] = 'return module.exports;' + str[1];\n  str[1] = '\\n' + str[1];\n  return str;\n}\n\nexports = module.exports = function (name, src, options) {\n  if (typeof options === 'string' && typeof src === 'object') {\n    var tmp = options;\n    options = src;\n    src = tmp;\n  }\n  return exports.prelude(name, options) + src + exports.postlude(name, options);\n};\n\nexports.prelude = function (moduleName, options) {\n  return template(moduleName, options)[0];\n};\nexports.postlude = function (moduleName, options) {\n  return template(moduleName, options)[1];\n};\n\n\nfunction camelCase(name) {\n  name = name.replace(/\\-([a-z])/g, function (_, char) { return char.toUpperCase(); });\n  if (!/^[a-zA-Z_$]$/.test(name[0])) {\n    name = name.substr(1);\n  }\n  var result = name.replace(/[^\\w$]+/g, '')\n  if (!result) {\n    throw new Error('Invalid JavaScript identifier resulted from camel-casing');\n  }\n  return result\n}\n\n\nfunction compileNamespace(name) {\n  var names = name.split('.')\n\n  // No namespaces, yield the best case 'global.NAME = VALUE'\n  if (names.length === 1) {\n    return 'g.' + camelCase(name) + ' = f()';\n\n  // Acceptable case, with reasonable compilation\n  } else if (names.length === 2) {\n    names = names.map(camelCase);\n    return '(g.' + names[0] + ' || (g.' + names[0] + ' = {})).' + names[1] + ' = f()';\n\n  // Worst case, too many namespaces to care about\n  } else {\n    var valueContainer = names.pop()\n    return names.map(compileNamespaceStep)\n                .concat(['g.' + camelCase(valueContainer) + ' = f()'])\n                .join(';');\n  }\n}\n\nfunction compileNamespaceStep(name) {\n  name = camelCase(name);\n  return 'g=(g.' + name + '||(g.' + name + ' = {}))';\n}\n"]}