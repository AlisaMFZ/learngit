{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var Vue // late bind\nvar version\nvar map = window.__VUE_HOT_MAP__ = Object.create(null)\nvar installed = false\nvar isBrowserify = false\nvar initHookName = 'beforeCreate'\n\nexports.install = function (vue, browserify) {\n  if (installed) return\n  installed = true\n\n  Vue = vue.__esModule ? vue.default : vue\n  version = Vue.version.split('.').map(Number)\n  isBrowserify = browserify\n\n  // compat with < 2.0.0-alpha.7\n  if (Vue.config._lifecycleHooks.indexOf('init') > -1) {\n    initHookName = 'init'\n  }\n\n  exports.compatible = version[0] >= 2\n  if (!exports.compatible) {\n    console.warn(\n      '[HMR] You are using a version of vue-hot-reload-api that is ' +\n      'only compatible with Vue.js core ^2.0.0.'\n    )\n    return\n  }\n}\n\n/**\n * Create a record for a hot module, which keeps track of its constructor\n * and instances\n *\n * @param {String} id\n * @param {Object} options\n */\n\nexports.createRecord = function (id, options) {\n  var Ctor = null\n  if (typeof options === 'function') {\n    Ctor = options\n    options = Ctor.options\n  }\n  makeOptionsHot(id, options)\n  map[id] = {\n    Ctor: Vue.extend(options),\n    instances: []\n  }\n}\n\n/**\n * Make a Component options object hot.\n *\n * @param {String} id\n * @param {Object} options\n */\n\nfunction makeOptionsHot (id, options) {\n  injectHook(options, initHookName, function () {\n    map[id].instances.push(this)\n  })\n  injectHook(options, 'beforeDestroy', function () {\n    var instances = map[id].instances\n    instances.splice(instances.indexOf(this), 1)\n  })\n}\n\n/**\n * Inject a hook to a hot reloadable component so that\n * we can keep track of it.\n *\n * @param {Object} options\n * @param {String} name\n * @param {Function} hook\n */\n\nfunction injectHook (options, name, hook) {\n  var existing = options[name]\n  options[name] = existing\n    ? Array.isArray(existing)\n      ? existing.concat(hook)\n      : [existing, hook]\n    : [hook]\n}\n\nfunction tryWrap (fn) {\n  return function (id, arg) {\n    try { fn(id, arg) } catch (e) {\n      console.error(e)\n      console.warn('Something went wrong during Vue component hot-reload. Full reload required.')\n    }\n  }\n}\n\nexports.rerender = tryWrap(function (id, options) {\n  var record = map[id]\n  if (typeof options === 'function') {\n    options = options.options\n  }\n  record.Ctor.options.render = options.render\n  record.Ctor.options.staticRenderFns = options.staticRenderFns\n  record.instances.slice().forEach(function (instance) {\n    instance.$options.render = options.render\n    instance.$options.staticRenderFns = options.staticRenderFns\n    instance._staticTrees = [] // reset static trees\n    instance.$forceUpdate()\n  })\n})\n\nexports.reload = tryWrap(function (id, options) {\n  if (typeof options === 'function') {\n    options = options.options\n  }\n  makeOptionsHot(id, options)\n  var record = map[id]\n  if (version[1] < 2) {\n    // preserve pre 2.2 behavior for global mixin handling\n    record.Ctor.extendOptions = options\n  }\n  var newCtor = record.Ctor.super.extend(options)\n  record.Ctor.options = newCtor.options\n  record.Ctor.cid = newCtor.cid\n  record.Ctor.prototype = newCtor.prototype\n  if (newCtor.release) {\n    // temporary global mixin strategy used in < 2.0.0-alpha.6\n    newCtor.release()\n  }\n  record.instances.slice().forEach(function (instance) {\n    if (instance.$vnode && instance.$vnode.context) {\n      instance.$vnode.context.$forceUpdate()\n    } else {\n      console.warn('Root or manually mounted instance modified. Full reload required.')\n    }\n  })\n})\n"]}