{"version":3,"sources":["transition-group.js"],"names":[],"mappings":"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","file":"transition-group-compiled.js","sourcesContent":["import { warn, extend } from 'core/util/index'\nimport { transitionProps, extractTransitionData } from './transition'\n\nconst props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps)\n\ndelete props.mode\n\nexport default {\n  props,\n\n  created () {\n    const dom = this.$requireWeexModule('dom')\n    this.getPosition = el => new Promise((resolve, reject) => {\n      dom.getComponentRect(el.ref, res => {\n        if (!res.result) {\n          reject(new Error(`failed to get rect for element: ${el.tag}`))\n        } else {\n          resolve(res.size)\n        }\n      })\n    })\n\n    const animation = this.$requireWeexModule('animation')\n    this.animate = (el, options) => new Promise(resolve => {\n      animation.transition(el.ref, options, resolve)\n    })\n  },\n\n  render (h) {\n    const tag = this.tag || this.$vnode.data.tag || 'span'\n    const map = Object.create(null)\n    const prevChildren = this.prevChildren = this.children\n    const rawChildren = this.$slots.default || []\n    const children = this.children = []\n    const transitionData = extractTransitionData(this)\n\n    for (let i = 0; i < rawChildren.length; i++) {\n      const c = rawChildren[i]\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c)\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData\n        } else if (process.env.NODE_ENV !== 'production') {\n          const opts = c.componentOptions\n          const name = opts\n            ? (opts.Ctor.options.name || opts.tag)\n            : c.tag\n          warn(`<transition-group> children must be keyed: <${name}>`)\n        }\n      }\n    }\n\n    if (prevChildren) {\n      const kept = []\n      const removed = []\n      prevChildren.forEach(c => {\n        c.data.transition = transitionData\n\n        // TODO: record before patch positions\n\n        if (map[c.key]) {\n          kept.push(c)\n        } else {\n          removed.push(c)\n        }\n      })\n      this.kept = h(tag, null, kept)\n      this.removed = removed\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    )\n    this._vnode = this.kept\n  },\n\n  updated () {\n    const children = this.prevChildren\n    const moveClass = this.moveClass || ((this.name || 'v') + '-move')\n    const moveData = children.length && this.getMoveData(children[0].context, moveClass)\n    if (!moveData) {\n      return\n    }\n\n    // TODO: finish implementing move animations once\n    // we have access to sync getComponentRect()\n\n    // children.forEach(callPendingCbs)\n\n    // Promise.all(children.map(c => {\n    //   const oldPos = c.data.pos\n    //   const newPos = c.data.newPos\n    //   const dx = oldPos.left - newPos.left\n    //   const dy = oldPos.top - newPos.top\n    //   if (dx || dy) {\n    //     c.data.moved = true\n    //     return this.animate(c.elm, {\n    //       styles: {\n    //         transform: `translate(${dx}px,${dy}px)`\n    //       }\n    //     })\n    //   }\n    // })).then(() => {\n    //   children.forEach(c => {\n    //     if (c.data.moved) {\n    //       this.animate(c.elm, {\n    //         styles: {\n    //           transform: ''\n    //         },\n    //         duration: moveData.duration || 0,\n    //         delay: moveData.delay || 0,\n    //         timingFunction: moveData.timingFunction || 'linear'\n    //       })\n    //     }\n    //   })\n    // })\n  },\n\n  methods: {\n    getMoveData (context, moveClass) {\n      const stylesheet = context.$options.style || {}\n      return stylesheet['@TRANSITION'] && stylesheet['@TRANSITION'][moveClass]\n    }\n  }\n}\n\n// function callPendingCbs (c) {\n//   /* istanbul ignore if */\n//   if (c.elm._moveCb) {\n//     c.elm._moveCb()\n//   }\n//   /* istanbul ignore if */\n//   if (c.elm._enterCb) {\n//     c.elm._enterCb()\n//   }\n// }\n"]}