{"version":3,"sources":["node-ops.js"],"names":[],"mappings":";;;;;QAKgB,a,GAAA,a;QAIA,e,GAAA,e;QAIA,c,GAAA,c;QAIA,a,GAAA,a;QAIA,Y,GAAA,Y;QAeA,W,GAAA,W;QAQA,W,GAAA,W;QAgBA,U,GAAA,U;QAIA,W,GAAA,W;QAIA,O,GAAA,O;QAIA,c,GAAA,c;QAIA,Y,GAAA,Y;AA5EhB;AACA;;AAEO,IAAM,sCAAe,EAArB;;AAEA,SAAS,aAAT,CAAwB,OAAxB,EAAiC;AACtC,SAAO,IAAI,SAAS,OAAb,CAAqB,OAArB,CAAP;AACD;;AAEM,SAAS,eAAT,CAA0B,SAA1B,EAAqC,OAArC,EAA8C;AACnD,SAAO,IAAI,SAAS,OAAb,CAAqB,YAAY,GAAZ,GAAkB,OAAvC,CAAP;AACD;;AAEM,SAAS,cAAT,CAAyB,IAAzB,EAA+B;AACpC,SAAO,IAAI,SAAS,QAAb,CAAsB,IAAtB,CAAP;AACD;;AAEM,SAAS,aAAT,CAAwB,IAAxB,EAA8B;AACnC,SAAO,IAAI,SAAS,OAAb,CAAqB,IAArB,CAAP;AACD;;AAEM,SAAS,YAAT,CAAuB,IAAvB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C;AAClD,MAAI,OAAO,QAAP,KAAoB,CAAxB,EAA2B;AACzB,QAAI,KAAK,IAAL,KAAc,MAAlB,EAA0B;AACxB,WAAK,OAAL,CAAa,OAAb,EAAsB,OAAO,IAA7B;AACA,aAAO,UAAP,GAAoB,IAApB;AACD,KAHD,MAGO;AACL,UAAM,OAAO,cAAc,MAAd,CAAb;AACA,WAAK,OAAL,CAAa,OAAb,EAAsB,OAAO,IAA7B;AACA,WAAK,YAAL,CAAkB,IAAlB,EAAwB,MAAxB;AACD;AACD;AACD;AACD,OAAK,YAAL,CAAkB,MAAlB,EAA0B,MAA1B;AACD;;AAEM,SAAS,WAAT,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC;AACxC,MAAI,MAAM,QAAN,KAAmB,CAAvB,EAA0B;AACxB,SAAK,OAAL,CAAa,OAAb,EAAsB,EAAtB;AACA;AACD;AACD,OAAK,WAAL,CAAiB,KAAjB;AACD;;AAEM,SAAS,WAAT,CAAsB,IAAtB,EAA4B,KAA5B,EAAmC;AACxC,MAAI,MAAM,QAAN,KAAmB,CAAvB,EAA0B;AACxB,QAAI,KAAK,IAAL,KAAc,MAAlB,EAA0B;AACxB,WAAK,OAAL,CAAa,OAAb,EAAsB,MAAM,IAA5B;AACA,YAAM,UAAN,GAAmB,IAAnB;AACD,KAHD,MAGO;AACL,UAAM,OAAO,cAAc,MAAd,CAAb;AACA,WAAK,OAAL,CAAa,OAAb,EAAsB,MAAM,IAA5B;AACA,WAAK,WAAL,CAAiB,IAAjB;AACD;AACD;AACD;;AAED,OAAK,WAAL,CAAiB,KAAjB;AACD;;AAEM,SAAS,UAAT,CAAqB,IAArB,EAA2B;AAChC,SAAO,KAAK,UAAZ;AACD;;AAEM,SAAS,WAAT,CAAsB,IAAtB,EAA4B;AACjC,SAAO,KAAK,WAAZ;AACD;;AAEM,SAAS,OAAT,CAAkB,IAAlB,EAAwB;AAC7B,SAAO,KAAK,IAAZ;AACD;;AAEM,SAAS,cAAT,CAAyB,IAAzB,EAA+B,IAA/B,EAAqC;AAC1C,OAAK,UAAL,CAAgB,OAAhB,CAAwB,OAAxB,EAAiC,IAAjC;AACD;;AAEM,SAAS,YAAT,CAAuB,IAAvB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC;AAC5C,OAAK,OAAL,CAAa,GAAb,EAAkB,GAAlB;AACD","file":"node-ops-compiled.js","sourcesContent":["/* globals renderer */\n// renderer is injected by weex factory wrapper\n\nexport const namespaceMap = {}\n\nexport function createElement (tagName) {\n  return new renderer.Element(tagName)\n}\n\nexport function createElementNS (namespace, tagName) {\n  return new renderer.Element(namespace + ':' + tagName)\n}\n\nexport function createTextNode (text) {\n  return new renderer.TextNode(text)\n}\n\nexport function createComment (text) {\n  return new renderer.Comment(text)\n}\n\nexport function insertBefore (node, target, before) {\n  if (target.nodeType === 3) {\n    if (node.type === 'text') {\n      node.setAttr('value', target.text)\n      target.parentNode = node\n    } else {\n      const text = createElement('text')\n      text.setAttr('value', target.text)\n      node.insertBefore(text, before)\n    }\n    return\n  }\n  node.insertBefore(target, before)\n}\n\nexport function removeChild (node, child) {\n  if (child.nodeType === 3) {\n    node.setAttr('value', '')\n    return\n  }\n  node.removeChild(child)\n}\n\nexport function appendChild (node, child) {\n  if (child.nodeType === 3) {\n    if (node.type === 'text') {\n      node.setAttr('value', child.text)\n      child.parentNode = node\n    } else {\n      const text = createElement('text')\n      text.setAttr('value', child.text)\n      node.appendChild(text)\n    }\n    return\n  }\n\n  node.appendChild(child)\n}\n\nexport function parentNode (node) {\n  return node.parentNode\n}\n\nexport function nextSibling (node) {\n  return node.nextSibling\n}\n\nexport function tagName (node) {\n  return node.type\n}\n\nexport function setTextContent (node, text) {\n  node.parentNode.setAttr('value', text)\n}\n\nexport function setAttribute (node, key, val) {\n  node.setAttr(key, val)\n}\n"]}