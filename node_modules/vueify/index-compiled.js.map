{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,WAAW,QAAQ,gBAAR,CAAf;;AAEA,OAAO,OAAP,GAAiB,SAAS,MAAT,CAAiB,IAAjB,EAAuB,OAAvB,EAAgC;AAC/C,MAAI,CAAC,QAAQ,IAAR,CAAa,IAAb,CAAL,EAAyB;AACvB,WAAO,SAAP;AACD;;AAED,WAAS,UAAT;AACA,WAAS,WAAT,CAAqB,OAArB;AACA,WAAS,WAAT,CAAqB;AACnB,eAAW,QAAQ,MAAR,CAAe;AADP,GAArB;;AAIA,MAAI,OAAO,EAAX;AACA,MAAI,SAAS,QAAQ,KAAR,EAAe,GAAf,CAAb;AACA,SAAO,MAAP,GAAgB,IAAhB;;AAEA,WAAS,UAAT,CAAqB,IAArB,EAA2B;AACzB,WAAO,IAAP,CAAY,MAAZ,EAAoB,IAApB;AACD;;AAED,WAAS,SAAT,CAAoB,CAApB,EAAuB;AACrB,WAAO,IAAP,CAAY,cAAZ,EAA4B,CAA5B;AACD;;AAED,WAAS,KAAT,CAAgB,GAAhB,EAAqB;AACnB,YAAQ,GAAR;AACD;;AAED,WAAS,GAAT,GAAgB;AACd,WAAO,IAAP,CAAY,MAAZ,EAAoB,IAApB;AACA,aAAS,EAAT,CAAY,YAAZ,EAA0B,UAA1B;AACA,aAAS,EAAT,CAAY,OAAZ,EAAqB,SAArB;;AAEA,aAAS,OAAT,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,UAAU,KAAV,EAAiB,MAAjB,EAAyB;AACpD,eAAS,cAAT,CAAwB,YAAxB,EAAsC,UAAtC;AACA,eAAS,cAAT,CAAwB,OAAxB,EAAiC,SAAjC;AACA,UAAI,KAAJ,EAAW;AACT,eAAO,IAAP,CAAY,OAAZ,EAAqB,KAArB;AACA;AACA,gBAAQ,KAAR,CAAc,MAAM,KAAN,CAAY,OAAZ,CAAoB,QAApB,EAA8B,EAA9B,CAAd;AACD;AACD,aAAO,KAAP,CAAa,MAAb;AACA,aAAO,KAAP,CAAa,IAAb;AACD,KAVD;AAWD;;AAED,SAAO,MAAP;AACD,CA9CD;;AAgDA;AACA,OAAO,OAAP,CAAe,QAAf,GAA0B,QAA1B","file":"index-compiled.js","sourcesContent":["var through = require('through')\nvar compiler = require('./lib/compiler')\n\nmodule.exports = function vueify (file, options) {\n  if (!/.vue$/.test(file)) {\n    return through()\n  }\n\n  compiler.loadConfig()\n  compiler.applyConfig(options)\n  compiler.applyConfig({\n    sourceMap: options._flags.debug\n  })\n\n  var data = ''\n  var stream = through(write, end)\n  stream.vueify = true\n\n  function dependency (file) {\n    stream.emit('file', file)\n  }\n\n  function emitStyle (e) {\n    stream.emit('vueify-style', e)\n  }\n\n  function write (buf) {\n    data += buf\n  }\n\n  function end () {\n    stream.emit('file', file)\n    compiler.on('dependency', dependency)\n    compiler.on('style', emitStyle)\n\n    compiler.compile(data, file, function (error, result) {\n      compiler.removeListener('dependency', dependency)\n      compiler.removeListener('style', emitStyle)\n      if (error) {\n        stream.emit('error', error)\n        // browserify doesn't log the stack by default...\n        console.error(error.stack.replace(/^.*?\\n/, ''))\n      }\n      stream.queue(result)\n      stream.queue(null)\n    })\n  }\n\n  return stream\n}\n\n// expose compiler\nmodule.exports.compiler = compiler\n"]}