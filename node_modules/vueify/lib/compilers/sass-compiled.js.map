{"version":3,"sources":["sass.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,SAAS,QAAQ,eAAR,CAAb;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,gBAAgB,QAAQ,sBAAR,CAApB;;AAEA,OAAO,OAAP,GAAiB,UAAU,GAAV,EAAe,EAAf,EAAmB,QAAnB,EAA6B,QAA7B,EAAuC;AACtD,gBAAc,MAAd,EAAsB,WAAtB;AACA,MAAI,OAAO,QAAQ,WAAR,CAAX;;AAEA,MAAI,cAAc,OAAO;AACvB,UAAM,GADiB;AAEvB,aAAS,iBAAU,GAAV,EAAe;AACtB,UAAI,QAAO,GAAP,uDAAO,GAAP,OAAe,QAAnB,EAA6B;AAC3B,WAAG,IAAH,EAAS,IAAI,GAAb;AACD,OAFD,MAEO;AACL,WAAG,IAAH,EAAS,GAAT,EADK,CACS;AACf;AACF,KARsB;AASvB,WAAO,eAAU,GAAV,EAAe;AACpB,SAAG,GAAH;AACD;AAXsB,GAAP,EAYf,SAAS,OAAT,CAAiB,IAAjB,IAAyB;AAC1B,oBAAgB;AADU,GAZV,CAAlB;;AAgBA,MAAI,MAAM,KAAK,OAAL,CAAa,QAAb,CAAV;AACA,MAAI,QAAQ,CAAC,GAAD,EAAM,QAAQ,GAAR,EAAN,CAAZ;AACA,cAAY,YAAZ,GAA2B,YAAY,YAAZ,GACvB,YAAY,YAAZ,CAAyB,MAAzB,CAAgC,KAAhC,CADuB,GAEvB,KAFJ;;AAIA,OAAK,MAAL,CACE,WADF;AAEE;AACA,YAAU,GAAV,EAAe,GAAf,EAAoB;AAClB,QAAI,GAAJ,EAAS;AACP,SAAG,GAAH;AACD,KAFD,MAEO;AACL,UAAI,KAAJ,CAAU,aAAV,CAAwB,OAAxB,CAAgC,UAAU,IAAV,EAAgB;AAC9C,iBAAS,IAAT,CAAc,YAAd,EAA4B,IAA5B;AACD,OAFD;AAGA,SAAG,IAAH,EAAS,IAAI,GAAJ,CAAQ,QAAR,EAAT;AACD;AACF,GAZH;AAcD,CAxCD","file":"sass-compiled.js","sourcesContent":["var assign = require('object-assign')\nvar path = require('path')\nvar ensureRequire = require('../ensure-require.js')\n\nmodule.exports = function (raw, cb, compiler, filePath) {\n  ensureRequire('sass', 'node-sass')\n  var sass = require('node-sass')\n\n  var sassOptions = assign({\n    data: raw,\n    success: function (res) {\n      if (typeof res === 'object') {\n        cb(null, res.css)\n      } else {\n        cb(null, res) // compat for node-sass < 2.0.0\n      }\n    },\n    error: function (err) {\n      cb(err)\n    }\n  }, compiler.options.sass || {\n    sourceComments: true\n  })\n\n  var dir = path.dirname(filePath)\n  var paths = [dir, process.cwd()]\n  sassOptions.includePaths = sassOptions.includePaths\n    ? sassOptions.includePaths.concat(paths)\n    : paths\n\n  sass.render(\n    sassOptions,\n    // callback for node-sass > 3.0.0\n    function (err, res) {\n      if (err) {\n        cb(err)\n      } else {\n        res.stats.includedFiles.forEach(function (file) {\n          compiler.emit('dependency', file)\n        })\n        cb(null, res.css.toString())\n      }\n    }\n  )\n}\n"]}