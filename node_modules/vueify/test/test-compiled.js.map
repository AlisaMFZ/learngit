{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["process.env.VUEIFY_TEST = true\n\nconst fs = require('fs')\nconst path = require('path')\nconst expect = require('chai').expect\nconst rimraf = require('rimraf')\nconst mkdirp = require('mkdirp')\nconst browserify = require('browserify')\nconst vueify = require('../index')\nconst jsdom = require('jsdom')\nconst vueCompiler = require('vue-template-compiler')\nconst transpile = require('vue-template-es2015-compiler')\nconst genId = require('../lib/gen-id')\n\nconst tempDir = path.resolve(__dirname, './temp')\nconst mockEntry = path.resolve(tempDir, 'entry.js')\nrimraf.sync(tempDir)\nmkdirp.sync(tempDir)\n\nfunction test (file, assert) {\n  it(file, done => {\n    fs.writeFileSync(mockEntry, 'window.vueModule = require(\"../fixtures/' + file + '.vue\")')\n    browserify(mockEntry)\n      .transform(vueify)\n      .bundle((err, buf) => {\n        if (err) return done(err)\n        jsdom.env({\n          html: '<!DOCTYPE html><html><head></head><body></body></html>',\n          src: [buf.toString()],\n          done: (err, window) => {\n            if (err) return done(err)\n            assert(window)\n            done()\n          }\n        })\n      })\n  })\n}\n\nfunction testCssExtract (file, assert) {\n  it(file, done => {\n    fs.writeFileSync(mockEntry, 'window.vueModule = require(\"../fixtures/' + file + '.vue\")')\n    browserify(mockEntry)\n      .transform(vueify)\n      .plugin('./plugins/extract-css', { out: { write: assert, end: done }})\n      .bundle((err, buf) => {\n        if (err) return done(err)\n      })\n  })\n}\n\nfunction assertRenderFn (options, template) {\n  const compiled = vueCompiler.compile(template)\n  expect(options.render.toString()).to.equal(transpile('function render() {' + compiled.render + '}'))\n}\n\ndescribe('vueify', () => {\n  test('basic', window => {\n    const module = window.vueModule\n    assertRenderFn(module, '<h2 class=\"red\">{{msg}}</h2>')\n    expect(module.data().msg).to.contain('Hello from Component A!')\n    const style = window.document.querySelector('style').textContent\n    expect(style).to.contain('comp-a h2 {\\n  color: #f00;\\n}')\n  })\n\n  test('pre-processors', window => {\n    var module = window.vueModule\n    assertRenderFn(module,\n      '<div>' +\n        '<h1>This is the app</h1>' +\n        '<comp-a></comp-a>' +\n        '<comp-b></comp-b>' +\n      '</div>'\n    )\n    expect(module.data().msg).to.contain('Hello from coffee!')\n    var style = window.document.querySelector('style').textContent\n    // stylus\n    expect(style).to.contain('body {\\n  font: 100% Helvetica, sans-serif;\\n  color: #999;\\n}')\n    // sass\n    expect(style).to.contain('h1 {\\n  color: red;')\n    // less\n    expect(style).to.contain('h1 {\\n  color: green;')\n  })\n\n  test('pug', window => {\n    var module = window.vueModule\n    assertRenderFn(module,\n      '<div>' +\n        '<h1>This is the app</h1>' +\n        '<comp-a></comp-a>' +\n        '<comp-b></comp-b>' +\n      '</div>'\n    )\n  })\n\n  test('scoped-css', window => {\n    var module = window.vueModule\n    var id = 'data-v-' + genId(require.resolve('./fixtures/scoped-css.vue'))\n    expect(module._scopeId).to.equal(id)\n    assertRenderFn(module,\n      '<div>' +\n        '<div><h1>hi</h1></div>\\n' +\n        '<p class=\"abc def\">hi</p>\\n' +\n        '<template v-if=\"ok\"><p class=\"test\">yo</p></template>\\n' +\n        '<svg><template><p></p></template></svg>' +\n      '</div>'\n    )\n    var style = window.document.querySelector('style').textContent\n    expect(style).to.contain('.test[' + id + '] {\\n  color: yellow;\\n}')\n    expect(style).to.contain('.test[' + id + ']:after {\\n  content: \\'bye!\\';\\n}')\n    expect(style).to.contain('h1[' + id + '] {\\n  color: green;\\n}')\n  })\n\n  test('style-import', window => {\n    var styles = window.document.querySelectorAll('style')\n    expect(styles[0].textContent).to.contain('h1 { color: red; }')\n    // import with scoped\n    var id = 'data-v-' + genId(require.resolve('./fixtures/style-import.vue'))\n    expect(styles[0].textContent).to.contain('h1[' + id + '] { color: green; }')\n  })\n\n  test('template-import', window => {\n    var module = window.vueModule\n    assertRenderFn(module, '<div><h1>hello</h1></div>')\n  })\n\n  test('script-import', window => {\n    var module = window.vueModule\n    expect(module.data().msg).to.contain('Hello from Component A!')\n  })\n\n  test('media-query', window => {\n    var style = window.document.querySelector('style').textContent\n    var id = 'data-v-' + genId(require.resolve('./fixtures/media-query.vue'))\n    expect(style).to.contain('@media print {\\n  .foo[' + id + '] {\\n    color: #000;\\n  }\\n}')\n  })\n\n  testCssExtract('style-export', css => {\n    expect(css).to.equal('h2 {color: red;}')\n  })\n})\n"]}